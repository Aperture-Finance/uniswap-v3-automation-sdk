/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ApertureMMVault,
  ApertureMMVaultInterface,
} from "../../contracts/ApertureMMVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "factory_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount1",
        type: "uint256",
      },
    ],
    name: "LPBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint24[]",
        name: "feeTiers",
        type: "uint24[]",
      },
    ],
    name: "LogAddPools",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
    ],
    name: "LogBlacklistRouters",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
    ],
    name: "LogBurn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
    ],
    name: "LogIcebergCollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
    ],
    name: "LogMainCollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
    ],
    name: "LogMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "burns",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "mints",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "router",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expectedMinReturn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "zeroForOne",
                type: "bool",
              },
            ],
            internalType: "struct SwapPayload",
            name: "swap",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minBurn0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBurn1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit1",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rebalance",
        name: "rebalanceParams",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "swapDelta0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "swapDelta1",
        type: "uint256",
      },
    ],
    name: "LogRebalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
    ],
    name: "LogRemovePools",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "LogRestrictedMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "init0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "init1",
        type: "uint256",
      },
    ],
    name: "LogSetInits",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "managerFeeBPS",
        type: "uint16",
      },
    ],
    name: "LogSetManagerFeeBPS",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "newManagers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "LogSetManagers",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
    ],
    name: "LogWhitelistRouters",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "LogWithdrawManagerBalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint24[]",
        name: "feeTiers_",
        type: "uint24[]",
      },
    ],
    name: "addPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "routers_",
        type: "address[]",
      },
    ],
    name: "blacklistRouters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token0Max_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Max_",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPools",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRanges",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouters",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "init0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint24[]",
            name: "feeTiers",
            type: "uint24[]",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "init0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "init1",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "feeCollector",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "managers",
            type: "address[]",
          },
          {
            internalType: "uint16",
            name: "managerFeeBPS",
            type: "uint16",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
        ],
        internalType: "struct InitializePayload",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "managerBalance0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerBalance1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerFeeBPS",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "managers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "burns",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "mints",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "router",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expectedMinReturn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "zeroForOne",
                type: "bool",
              },
            ],
            internalType: "struct SwapPayload",
            name: "swap",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minBurn0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBurn1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit1",
            type: "uint256",
          },
        ],
        internalType: "struct Rebalance",
        name: "rebalanceParams_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "gasFee_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token0Fee_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Fee_",
        type: "uint256",
      },
    ],
    name: "rebalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools_",
        type: "address[]",
      },
    ],
    name: "removePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "restrictedMint",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "init0_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "init1_",
        type: "uint256",
      },
    ],
    name: "setInits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "managerFeeBPS_",
        type: "uint16",
      },
    ],
    name: "setManagerFeeBPS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "managers_",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "statuses_",
        type: "bool[]",
      },
    ],
    name: "setManagers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    name: "setRestrictedMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "routers_",
        type: "address[]",
      },
    ],
    name: "whitelistRouters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "burnAmount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token0Min_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Min_",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawManagerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawNativeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f80fd5b50604051616a87380380616a87833981016040819052602b91607b565b806001600160a01b038116606a5760405162461bcd60e51b81526020600482015260026024820152612d2360f11b604482015260640160405180910390fd5b6001600160a01b03166080525060a6565b5f60208284031215608a575f80fd5b81516001600160a01b0381168114609f575f80fd5b9392505050565b6080516169986100ef5f395f81816106aa0152818161266f01528181612ac201528181612d4f01528181612ff30152818161333701528181613f50015261472401526169985ff3fe6080604052600436106102cf575f3560e01c80637ecd67171161017b578063c7a4ae17116100d1578063e2aa855911610087578063f88c31ce11610062578063f88c31ce1461080c578063f8bbff1214610820578063fdff9b4d1461083f575f80fd5b8063e2aa8559146107b9578063f2eb3e34146107d8578063f2fde38b146107ed575f80fd5b8063d21220a7116100b7578063d21220a714610737578063d348799714610756578063dd62ed3e14610775575f80fd5b8063c7a4ae17146106eb578063ccdf7a021461070a575f80fd5b8063a457c2d711610131578063c415b95c1161010c578063c415b95c1461067a578063c45a015514610699578063c4a52901146106cc575f80fd5b8063a457c2d71461061d578063a5ff1dc71461063c578063a9059cbb1461065b575f80fd5b80638da5cb5b116101615780638da5cb5b146105cd57806392e49dfd146105ea57806395d89b4114610609575f80fd5b80637ecd67171461059a57806386ac1cb9146105ae575f80fd5b806339509351116102305780634b164140116101e65780636f0372af116101c15780636f0372af1461051e57806370a0823114610552578063715018a614610586575f80fd5b80634b164140146104bd578063617a3419146104dc578063673a2a1f146104fd575f80fd5b80633f7b6135116102165780633f7b61351461046a57806342fb9d44146104895780634794c84a1461049e575f80fd5b8063395093511461042c5780633bdcc9231461044b575f80fd5b806314b80630116102855780631d36e28a1161026b5780631d36e28a146103d357806323b872dd146103f2578063313ce56714610411575f80fd5b806314b80630146103aa57806318160ddd146103bf575f80fd5b8063095ea7b3116102b5578063095ea7b3146103235780630d6e6631146103525780630dfe168114610373575f80fd5b8063065756db146102da57806306fdde0314610302575f80fd5b366102d657005b5f80fd5b3480156102e5575f80fd5b506102ef60ce5481565b6040519081526020015b60405180910390f35b34801561030d575f80fd5b5061031661086d565b6040516102f99190615a6f565b34801561032e575f80fd5b5061034261033d366004615ac3565b6108fd565b60405190151581526020016102f9565b34801561035d575f80fd5b5061037161036c366004615aed565b610916565b005b34801561037e575f80fd5b5060c954610392906001600160a01b031681565b6040516001600160a01b0390911681526020016102f9565b3480156103b5575f80fd5b506102ef60cb5481565b3480156103ca575f80fd5b506067546102ef565b3480156103de575f80fd5b506103716103ed366004615ac3565b6109c9565b3480156103fd575f80fd5b5061034261040c366004615b08565b610a8d565b34801561041c575f80fd5b50604051601281526020016102f9565b348015610437575f80fd5b50610342610446366004615ac3565b610ab2565b348015610456575f80fd5b50610371610465366004615b8e565b610af0565b348015610475575f80fd5b50610371610484366004615bfa565b610cb7565b348015610494575f80fd5b506102ef60cf5481565b3480156104a9575f80fd5b506103716104b8366004615c1a565b610de0565b3480156104c8575f80fd5b506103716104d7366004615c3b565b610f0d565b3480156104e7575f80fd5b506104f061104d565b6040516102f99190615c7a565b348015610508575f80fd5b506105116110ce565b6040516102f99190615ce9565b348015610529575f80fd5b5061053d610538366004615d29565b611171565b604080519283526020830191909152016102f9565b34801561055d575f80fd5b506102ef61056c366004615aed565b6001600160a01b03165f9081526065602052604090205490565b348015610591575f80fd5b50610371611255565b3480156105a5575f80fd5b506103716112ba565b3480156105b9575f80fd5b506103716105c8366004615c3b565b611320565b3480156105d8575f80fd5b506033546001600160a01b0316610392565b3480156105f5575f80fd5b50610371610604366004615c3b565b6113cb565b348015610614575f80fd5b506103166114ff565b348015610628575f80fd5b50610342610637366004615ac3565b61150e565b348015610647575f80fd5b50610371610656366004615c3b565b6115c2565b348015610666575f80fd5b50610342610675366004615ac3565b61162a565b348015610685575f80fd5b5060d054610392906001600160a01b031681565b3480156106a4575f80fd5b506103927f000000000000000000000000000000000000000000000000000000000000000081565b3480156106d7575f80fd5b506103716106e6366004615d63565b611637565b3480156106f6575f80fd5b5060d254610392906001600160a01b031681565b348015610715575f80fd5b5060cd546107249061ffff1681565b60405161ffff90911681526020016102f9565b348015610742575f80fd5b5060ca54610392906001600160a01b031681565b348015610761575f80fd5b50610371610770366004615df5565b6117c3565b348015610780575f80fd5b506102ef61078f366004615e38565b6001600160a01b039182165f90815260666020908152604080832093909416825291909152205490565b3480156107c4575f80fd5b5061053d6107d3366004615d29565b6117d3565b3480156107e3575f80fd5b506102ef60cc5481565b3480156107f8575f80fd5b50610371610807366004615aed565b6118a7565b348015610817575f80fd5b50610511611989565b34801561082b575f80fd5b5061037161083a366004615e6f565b611a25565b34801561084a575f80fd5b50610342610859366004615aed565b60d16020525f908152604090205460ff1681565b60606068805461087c90615f0f565b80601f01602080910402602001604051908101604052809291908181526020018280546108a890615f0f565b80156108f35780601f106108ca576101008083540402835291602001916108f3565b820191905f5260205f20905b8154815290600101906020018083116108d657829003601f168201915b5050505050905090565b5f3361090a81858561210f565b60019150505b92915050565b6033546001600160a01b031633146109755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60d280546001600160a01b0319166001600160a01b0383169081179091556040519081527f6b7f177e85ebe3aabaf1339b9a445ac908b2bef730372180fa280958e2414ee39060200160405180910390a150565b6033546001600160a01b03163314610a235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161096c565b600260975403610a755760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161096c565b6002609755610a848282612232565b50506001609755565b5f33610a9a85828561234c565b610aa58585856123d6565b60019150505b9392505050565b335f8181526066602090815260408083206001600160a01b038716845290915281205490919061090a9082908690610aeb908790615f5b565b61210f565b6033546001600160a01b03163314610b4a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161096c565b600260975403610b9c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161096c565b6002609755610ba96125d1565b610bb16127e1565b82818114610bbd575f80fd5b5f5b81811015610c6d575f868683818110610bda57610bda615f6e565b9050602002016020810190610bef9190615aed565b9050848483818110610c0357610c03615f6e565b9050602002016020810190610c189190615f9a565b15610c44576001600160a01b0381165f90815260d160205260409020805460ff19166001179055610c64565b6001600160a01b0381165f90815260d160205260409020805460ff191690555b50600101610bbf565b507f1da7ed74593d98931e07b2dc6800dc94689304fc587064c8364a62f71aa9248e85858585604051610ca39493929190615ffd565b60405180910390a150506001609755505050565b5f821180610cc457505f81115b610cf45760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161096c565b60675415610d295760405162461bcd60e51b8152602060048201526002602482015261545360f01b604482015260640161096c565b60d2545f906001600160a01b031615610d4d5760d2546001600160a01b0316610d5a565b6033546001600160a01b03165b9050336001600160a01b03821614610d985760405162461bcd60e51b81526020600482015260016024820152602960f91b604482015260640161096c565b60cb83905560cc82905560408051848152602081018490527ff8966e026442bb0adb17149a6d44e394d2b6eb3c5cc1dc71b3c0698000548ae6910160405180910390a1505050565b335f90815260d1602052604090205460ff16610e235760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161096c565b600260975403610e755760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161096c565b600260975561271061ffff82161115610eb65760405162461bcd60e51b81526020600482015260036024820152624d464f60e81b604482015260640161096c565b610ebe6125d1565b60cd805461ffff191661ffff83169081179091556040519081527fa73ff0774d4c8681f79fa6546f34bab7a3037f3b3aab405401a1fd8c6e5ca3d69060200160405180910390a1506001609755565b6033546001600160a01b03163314610f675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161096c565b5f5b8181101561100f57610fa3838383818110610f8657610f86615f6e565b9050602002016020810190610f9b9190615aed565b60d49061292f565b610fd45760405162461bcd60e51b815260206004820152600260248201526104e560f41b604482015260640161096c565b611006838383818110610fe957610fe9615f6e565b9050602002016020810190610ffe9190615aed565b60d490612950565b50600101610f69565b507f024551cce253d1a442bfe99dae530a00a492fb8c67c4456cce3c9d23eecd39618282604051611041929190616059565b60405180910390a15050565b606060d3805480602002602001604051908101604052809291908181526020015f905b828210156110c5575f8481526020908190206040805160608101825291850154600281810b845263010000008204900b838501526601000000000000900462ffffff1690820152825260019092019101611070565b50505050905090565b60605f6110db60d4612964565b90505f8167ffffffffffffffff8111156110f7576110f761606c565b604051908082528060200260200182016040528015611120578160200160208202803683370190505b5090505f5b8281101561116a5761113860d48261296d565b82828151811061114a5761114a615f6e565b6001600160a01b0390921660209283029190910190910152600101611125565b5092915050565b5f806002609754036111c55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161096c565b60026097556111d48686612978565b90925090508382111561120f5760405162461bcd60e51b815260206004820152600360248201526254304d60e81b604482015260640161096c565b828111156112455760405162461bcd60e51b815260206004820152600360248201526254314d60e81b604482015260640161096c565b6001609755909590945092505050565b6033546001600160a01b031633146112af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161096c565b6112b85f612f95565b565b60026097540361130c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161096c565b60026097556113196127e1565b6001609755565b6033546001600160a01b0316331461137a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161096c565b60c95460ca5461139a91849184916001600160a01b039081169116612fe6565b7f1b402611d70c7735d942445aaa3ebbf878149bece6b797870b44a581c5f7f4c98282604051611041929190616090565b6033546001600160a01b031633146114255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161096c565b5f5b818110156114cd5761146183838381811061144457611444615f6e565b90506020020160208101906114599190615aed565b60d69061292f565b6114925760405162461bcd60e51b8152602060048201526002602482015261525760f01b604482015260640161096c565b6114c48383838181106114a7576114a7615f6e565b90506020020160208101906114bc9190615aed565b60d690612950565b50600101611427565b507fbe6c83115c5bf7fd07e41c6002394841bd7dc0348f3b7c58645e8950f604f5c48282604051611041929190616059565b60606069805461087c90615f0f565b335f8181526066602090815260408083206001600160a01b0387168452909152812054909190838110156115aa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161096c565b6115b7828686840361210f565b506001949350505050565b6033546001600160a01b0316331461161c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161096c565b6116268282613157565b5050565b5f3361090a8185856123d6565b335f90815260d1602052604090205460ff1661167a5760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161096c565b6002609754036116cc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161096c565b6002609755478311156117075760405162461bcd60e51b815260206004820152600360248201526247464160e81b604482015260640161096c565b60d05461171d906001600160a01b031684612232565b611726846132ca565b81156117495760d05460c954611749916001600160a01b039182169116846144f3565b801561176c5760d05460ca5461176c916001600160a01b039182169116836144f3565b5f82118061177957505f81115b156117b85760408051838152602081018390527f83e53b0dba2d7aabfeb0419dc8d5fd9d456ea1441018a8e81b53de9814e58aaf910160405180910390a15b505060016097555050565b6117cd848461456b565b50505050565b5f806002609754036118275760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161096c565b600260975561183686866145e1565b9092509050838210156118715760405162461bcd60e51b815260206004820152600360248201526254306d60e81b604482015260640161096c565b828110156112455760405162461bcd60e51b815260206004820152600360248201526254316d60e81b604482015260640161096c565b6033546001600160a01b031633146119015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161096c565b6001600160a01b03811661197d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161096c565b61198681612f95565b50565b60605f61199660d6612964565b90505f8167ffffffffffffffff8111156119b2576119b261606c565b6040519080825280602002602001820160405280156119db578160200160208202803683370190505b5090505f5b8281101561116a576119f360d68261296d565b828281518110611a0557611a05615f6e565b6001600160a01b03909216602092830291909101909101526001016119e0565b5f611a306001614b66565b90508015611a47575f805461ff0019166101001790555b5f611a5283806160d8565b905011611a875760405162461bcd60e51b815260206004820152600360248201526213919560ea1b604482015260640161096c565b5f611a986040840160208501615aed565b6001600160a01b031603611ad35760405162461bcd60e51b8152602060048201526002602482015261054360f41b604482015260640161096c565b611ae36060830160408401615aed565b6001600160a01b0316611afc6040840160208501615aed565b6001600160a01b031610611b385760405162461bcd60e51b815260206004820152600360248201526257544f60e81b604482015260640161096c565b5f611b496080840160608501615aed565b6001600160a01b031603611b855760405162461bcd60e51b815260206004820152600360248201526227a0ad60e91b604482015260640161096c565b5f611b9660e0840160c08501615aed565b6001600160a01b031603611bd55760405162461bcd60e51b815260040161096c906020808252600490820152632321a0ad60e11b604082015260600190565b5f611be360e08401846160d8565b905011611c1b5760405162461bcd60e51b815260040161096c9060208082526004908201526326a0a62d60e11b604082015260600190565b5f611c2960e08401846160d8565b5f818110611c3957611c39615f6e565b9050602002016020810190611c4e9190615aed565b6001600160a01b031603611c8d5760405162461bcd60e51b815260040161096c90602080825260049082015263269820ad60e11b604082015260600190565b5f82608001351180611ca257505f8260a00135115b611cd25760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161096c565b611d4386868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8a0181900481028201810190925288815292508891508790819084018382808284375f92019190915250614c7d92505050565b611d4b614cf1565b611d7d611d5883806160d8565b611d686040860160208701615aed565b611d786060870160408801615aed565b612fe6565b611d8d6040830160208401615aed565b60c980546001600160a01b0319166001600160a01b0392909216919091179055611dbd6060830160408401615aed565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055611df3611dee6101208401846160d8565b613157565b611e0b611e066080840160608501615aed565b612f95565b611e1b60e0830160c08401615aed565b60d080546001600160a01b0319166001600160a01b03929092169190911790555f611e4960e08401846160d8565b905090505f8167ffffffffffffffff811115611e6757611e6761606c565b604051908082528060200260200182016040528015611e90578160200160208202803683370190505b5090505f5b82811015611f2a57600160d15f611eaf60e08901896160d8565b85818110611ebf57611ebf615f6e565b9050602002016020810190611ed49190615aed565b6001600160a01b0316815260208101919091526040015f20805460ff19169115159190911790558151600190839083908110611f1257611f12615f6e565b91151560209283029190910190910152600101611e95565b50612710611f4061012086016101008701615c1a565b61ffff161115611f785760405162461bcd60e51b81526020600482015260036024820152624d464f60e81b604482015260640161096c565b611f8a61012085016101008601615c1a565b60cd805461ffff191661ffff929092169190911790557fa73ff0774d4c8681f79fa6546f34bab7a3037f3b3aab405401a1fd8c6e5ca3d6611fd361012086016101008701615c1a565b60405161ffff909116815260200160405180910390a1608084013560cb5560a084013560cc557f1b402611d70c7735d942445aaa3ebbf878149bece6b797870b44a581c5f7f4c961202485806160d8565b604051612032929190616090565b60405180910390a1604080516080860135815260a086013560208201527ff8966e026442bb0adb17149a6d44e394d2b6eb3c5cc1dc71b3c0698000548ae6910160405180910390a17f1da7ed74593d98931e07b2dc6800dc94689304fc587064c8364a62f71aa9248e6120a860e08601866160d8565b836040516120b89392919061611e565b60405180910390a150508015612107575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b0383166121715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161096c565b6001600160a01b0382166121d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161096c565b6001600160a01b038381165f8181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b804710156122825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161096c565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f81146122cb576040519150601f19603f3d011682016040523d82523d5f602084013e6122d0565b606091505b50509050806123475760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161096c565b505050565b6001600160a01b038381165f908152606660209081526040808320938616835292905220545f1981146117cd57818110156123c95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161096c565b6117cd848484840361210f565b6001600160a01b0383166124525760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161096c565b6001600160a01b0382166124b45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161096c565b6001600160a01b0383165f90815260656020526040902054818110156125425760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161096c565b6001600160a01b038085165f90815260656020526040808220858503905591851681529081208054849290612578908490615f5b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516125c491815260200190565b60405180910390a36117cd565b5f805f5b60d35481101561279e575f60d382815481106125f3576125f3615f6e565b5f9182526020808320604080516060810182529390910154600281810b855263010000008204900b92840192909252660100000000000090910462ffffff1682820181905260c95460ca549251630b4c774160e11b81526001600160a01b039182166004820152928116602484015260448301919091529193507f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa1580156126b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126da919061617a565b8251602084015160405163a34123a760e01b8152600292830b6004820152910b60248201525f60448201529091506001600160a01b0382169063a34123a79060640160408051808303815f875af1158015612737573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061275b9190616195565b50505f8061277183855f01518660200151614d63565b90925090506127808288615f5b565b965061278c8187615f5b565b955050600190930192506125d5915050565b506127a98282614e0a565b505060408051838152602081018390527f1f2cfc6500dfe04cbfca4860fc7d00326b6f193887476808fde9b79859fd68f39101611041565b60ce805460cf80545f938490559290559081156128765760c95460d05460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af1925050508015612868575060408051601f3d908101601f19168201909252612865918101906161b7565b60015b612874575f9150612876565b505b80156128f95760ca5460d05460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303815f875af19250505080156128ec575060408051601f3d908101601f191682019092526128e9918101906161b7565b60015b6128f757505f6128f9565b505b60408051838152602081018390527fa292e28c648da34e20b372054caab5f0359198b3b4d5f0ef9945d4616e15dc979101611041565b6001600160a01b0381165f9081526001830160205260408120541515610aab565b5f610aab836001600160a01b038416614f94565b5f610910825490565b5f610aab8383615077565b5f805f84116129ae5760405162461bcd60e51b81526020600482015260026024820152614d4160f01b604482015260640161096c565b60d2546001600160a01b031615806129d0575060d2546001600160a01b031633145b612a005760405162461bcd60e51b81526020600482015260016024820152602960f91b604482015260640161096c565b305f612a0b60675490565b90508015801590612b775773__$3d23d8578387a47facd93bb77f6fe6e81b$__6383d7ba9f6040518060a0016040528060d3805480602002602001604051908101604052809291908181526020015f905b82821015612ab1575f8481526020908190206040805160608101825291850154600281810b845263010000008204900b838501526601000000000000900462ffffff1690820152825260019092019101612a5c565b505050908252506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602083015260c954811660408084019190915260ca5482166060840152908816608090920191909152516001600160e01b031960e084901b168152612b2f91908b9087906004016161d2565b6040805180830381865af4158015612b49573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b6d9190616195565b9095509350612c67565b60cb5460cc54670de0b6b3a76400009190612b938a838561509d565b9750612ba08a828561509d565b9650612bad8a83856150e2565b5f03612bb7575f97505b612bc28a82856150e2565b5f03612bcc575f96505b5f825f03612bdb575f19612be6565b612be68985856150e2565b90505f825f03612bf7575f19612c02565b612c028986856150e2565b90508b818310612c125781612c14565b825b14612c615760405162461bcd60e51b815260206004820152600560248201527f4130264131000000000000000000000000000000000000000000000000000000604482015260640161096c565b50505050505b612c718688615188565b8415612c8f5760c954612c8f906001600160a01b0316338588615264565b8315612cad5760ca54612cad906001600160a01b0316338587615264565b8015612f3f575f5b60d354811015612f3d575f60d38281548110612cd357612cd3615f6e565b5f9182526020808320604080516060810182529390910154600281810b855263010000008204900b92840192909252660100000000000090910462ffffff1682820181905260c95460ca549251630b4c774160e11b81526001600160a01b039182166004820152928116602484015260448301919091529193507f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa158015612d96573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612dba919061617a565b82516020840151604051635f49415b60e01b81526001600160a01b0380851660048301528a166024820152600292830b6044820152910b60648201529091505f9073__$b131e44167300e1b6d47510635310686a7$__90635f49415b90608401602060405180830381865af4158015612e35573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e5991906162ad565b9050612e77612e72826001600160801b03168d896150e2565b61529c565b9050806001600160801b03165f03612e9157505050612f35565b82516020840151604051633c8a7d8d60e01b81526001600160a01b038a81166004830152600293840b60248301529190920b60448301526001600160801b038316606483015260a060848301525f60a4830152831690633c8a7d8d9060c40160408051808303815f875af1158015612f0b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f2f9190616195565b50505050505b600101612cb5565b505b60408051888152602081018790529081018590526001600160a01b038716907f5f11830295067c4bcc7d02d4e3b048cd7427be50a3aeb6afc9d3d559ee64bcfa9060600160405180910390a25050509250929050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f5b83811015613150575f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee82858589898781811061303457613034615f6e565b905060200201602081019061304991906162c8565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa15801561309e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130c2919061617a565b90506001600160a01b0381166130ff5760405162461bcd60e51b81526020600482015260026024820152615a4160f01b604482015260640161096c565b61310a60d48261292f565b1561313b5760405162461bcd60e51b81526020600482015260016024820152600560fc1b604482015260640161096c565b61314660d48261531e565b5050600101612fe8565b5050505050565b5f5b818110156132985760c9546001600160a01b031683838381811061317f5761317f615f6e565b90506020020160208101906131949190615aed565b6001600160a01b0316141580156131e5575060ca546001600160a01b03168383838181106131c4576131c4615f6e565b90506020020160208101906131d99190615aed565b6001600160a01b031614155b6132165760405162461bcd60e51b8152602060048201526002602482015261149560f21b604482015260640161096c565b61322b83838381811061144457611444615f6e565b1561325d5760405162461bcd60e51b815260206004820152600260248201526121a960f11b604482015260640161096c565b61328f83838381811061327257613272615f6e565b90506020020160208101906132879190615aed565b60d69061531e565b50600101613159565b507f102656122b5bfb41d864259a385db02d34584f3a71b6c6c35c14cbdaf9038fe68282604051611041929190616059565b335f90815260d1602052604090205460ff1661330d5760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161096c565b60c95460ca54604080516080810182525f80825260208201819052918101829052606081018290527f0000000000000000000000000000000000000000000000000000000000000000936001600160a01b039081169316915b61337086806162e3565b9050811015613879575f6001600160a01b038616631698ee8286866133958b806162e3565b878181106133a5576133a5615f6e565b6133bc9260809182020190810191506060016162c8565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015613411573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613435919061617a565b90505f73__$b131e44167300e1b6d47510635310686a7$__635f49415b833061345e8c806162e3565b8881811061346e5761346e615f6e565b6134879260406080909202019081019150602001616337565b6134918d806162e3565b898181106134a1576134a1615f6e565b6134ba9260606080909202019081019150604001616337565b6040516001600160e01b031960e087901b1681526001600160a01b039485166004820152939092166024840152600290810b60448401520b6064820152608401602060405180830381865af4158015613515573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061353991906162ad565b9050806001600160801b03165f03613552575050613871565b5f6001600160801b036135658a806162e3565b8681811061357557613575615f6e565b61358b9260206080909202019081019150616352565b6001600160801b0316036135a05750806135d3565b6135aa89806162e3565b858181106135ba576135ba615f6e565b6135d09260206080909202019081019150616352565b90505b5f613644846135e28c806162e3565b888181106135f2576135f2615f6e565b61360b9260406080909202019081019150602001616337565b6136158d806162e3565b8981811061362557613625615f6e565b61363e9260606080909202019081019150604001616337565b85615332565b9050826001600160801b0316826001600160801b03160361380d575f8073__$b131e44167300e1b6d47510635310686a7$__630c3c0bfc60d36136878f806162e3565b8b81811061369757613697615f6e565b9050608002016020016040518363ffffffff1660e01b81526004016136bd9291906163b1565b6040805180830381865af41580156136d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136fb919061641f565b91509150816137355760405162461bcd60e51b815260040161096c9060208082526004908201526352524e4560e01b604082015260600190565b60d380546137459060019061644b565b8154811061375557613755615f6e565b905f5260205f200160d3828154811061377057613770615f6e565b5f918252602090912082549101805462ffffff92831662ffffff19821681178355845463010000009081900485160265ffffffffffff199092161717808255925466010000000000009081900490921690910268ffffff0000000000001990921691909117905560d38054806137e8576137e861645e565b5f8281526020902081015f19908101805468ffffffffffffffffff1916905501905550505b80518651879061381e908390615f5b565b9052506020808201519087018051613837908390615f5b565b9052506040808201519087018051613850908390615f5b565b9052506060808201519087018051613869908390615f5b565b905250505050505b600101613366565b508051606086013511156138b45760405162461bcd60e51b8152602060048201526002602482015261042360f41b604482015260640161096c565b8460800135816020015110156138f15760405162461bcd60e51b8152602060048201526002602482015261423160f01b604482015260640161096c565b5f8160400151118061390657505f8160600151115b156139205761391d81604001518260600151614e0a565b50505b505f61392f6040860186616472565b604001351115613e465761395a6139496040860186616472565b611459906040810190602001615aed565b61398b5760405162461bcd60e51b8152602060048201526002602482015261272960f11b604482015260640161096c565b6040516370a0823160e01b81523060048201525f906001600160a01b038416906370a0823190602401602060405180830381865afa1580156139cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906139f39190616490565b6040516370a0823160e01b81523060048201529091505f906001600160a01b038416906370a0823190602401602060405180830381865afa158015613a3a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613a5e9190616490565b9050613a92613a706040880188616472565b613a81906040810190602001615aed565b6001600160a01b038616905f615423565b613ac4613aa26040880188616472565b613ab3906040810190602001615aed565b6001600160a01b038516905f615423565b613af6613ad46040880188616472565b613ae5906040810190602001615aed565b6001600160a01b0386169084615423565b613b28613b066040880188616472565b613b17906040810190602001615aed565b6001600160a01b0385169083615423565b5f613b366040880188616472565b613b47906040810190602001615aed565b6001600160a01b0316613b5d6040890189616472565b613b6790806164a7565b604051613b759291906164ea565b5f604051808303815f865af19150503d805f8114613bae576040519150601f19603f3d011682016040523d82523d5f602084013e613bb3565b606091505b5050905080613be95760405162461bcd60e51b8152602060048201526002602482015261534360f01b604482015260640161096c565b6040516370a0823160e01b81523060048201525f906001600160a01b038716906370a0823190602401602060405180830381865afa158015613c2d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613c519190616490565b6040516370a0823160e01b81523060048201529091505f906001600160a01b038716906370a0823190602401602060405180830381865afa158015613c98573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613cbc9190616490565b9050613ccb60408a018a616472565b613cdc9060a0810190608001615f9a565b15613d7357613cee60408a018a616472565b613cfc906060013585615f5b565b8110158015613d255750613d1360408a018a616472565b613d2190604001358661644b565b8210155b613d565760405162461bcd60e51b815260206004820152600260248201526129a360f11b604482015260640161096c565b613d60828661644b565b9150613d6c848261644b565b9050613e01565b613d8060408a018a616472565b613d8e906060013586615f5b565b8210158015613db75750613da560408a018a616472565b613db390604001358561644b565b8110155b613de85760405162461bcd60e51b815260206004820152600260248201526129a360f11b604482015260640161096c565b613df2858361644b565b9150613dfe818561644b565b90505b7fab3abe7e2ad787892344ed4ada44aad53c7d53e9d6b5ee91f20bd30ed39540b7898383604051613e34939291906166f3565b60405180910390a15050505050613e82565b7fab3abe7e2ad787892344ed4ada44aad53c7d53e9d6b5ee91f20bd30ed39540b7845f80604051613e79939291906166f3565b60405180910390a15b5f805f5b613e9360208801886162e3565b905081101561433e575f73__$b131e44167300e1b6d47510635310686a7$__630c3c0bfc60d3613ec660208c018c6162e3565b86818110613ed657613ed6615f6e565b9050608002016020016040518363ffffffff1660e01b8152600401613efc9291906163b1565b6040805180830381865af4158015613f16573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613f3a919061641f565b5060c95460ca549192505f916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692631698ee82929082169116613f8a60208e018e6162e3565b88818110613f9a57613f9a615f6e565b613fb19260809182020190810191506060016162c8565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015614006573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061402a919061617a565b9050816141c8576001600160a01b03811661406d5760405162461bcd60e51b815260206004820152600360248201526204e55560ec1b604482015260640161096c565b61407860d48261292f565b6140a85760405162461bcd60e51b81526020600482015260016024820152600560fc1b604482015260640161096c565b73__$57c880716d25c772e0b1e547659075b66d$__636b018820826140d060208d018d6162e3565b878181106140e0576140e0615f6e565b9050608002016020016040518363ffffffff1660e01b8152600401614106929190616717565b602060405180830381865af4158015614121573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061414591906161b7565b6141775760405162461bcd60e51b815260206004820152600360248201526252545360e81b604482015260640161096c565b60d361418660208b018b6162e3565b8581811061419657614196615f6e565b83546001810185555f948552602094859020608090920293909301939093019290910190506141c58282616734565b50505b5f806001600160a01b038316633c8a7d8d306141e760208f018f6162e3565b898181106141f7576141f7615f6e565b6142109260406080909202019081019150602001616337565b8e806020019061422091906162e3565b8a81811061423057614230615f6e565b6142499260606080909202019081019150604001616337565b8f806020019061425991906162e3565b8b81811061426957614269615f6e565b61427f9260206080909202019081019150616352565b6040516001600160e01b031960e087901b1681526001600160a01b039094166004850152600292830b6024850152910b60448301526001600160801b0316606482015260a060848201525f60a482015260c40160408051808303815f875af11580156142ed573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906143119190616195565b90925090506143208288615f5b565b965061432c8187615f5b565b95505060019093019250613e86915050565b508560a001358210156143785760405162461bcd60e51b8152602060048201526002602482015261044360f41b604482015260640161096c565b8560c001358110156143b15760405162461bcd60e51b8152602060048201526002602482015261443160f01b604482015260640161096c565b60ce5460c9546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156143fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061441e9190616490565b10156144525760405162461bcd60e51b815260206004820152600360248201526204d42360ec1b604482015260640161096c565b60cf5460ca546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561449b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906144bf9190616490565b10156121075760405162461bcd60e51b81526020600482015260036024820152624d423160e81b604482015260640161096c565b6040516001600160a01b03831660248201526044810182905261234790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915261553d565b61457660d43361292f565b6145a75760405162461bcd60e51b8152602060048201526002602482015261434360f01b604482015260640161096c565b81156145c45760c9546145c4906001600160a01b031633846144f3565b80156116265760ca54611626906001600160a01b031633836144f3565b5f805f84116146175760405162461bcd60e51b8152602060048201526002602482015261424160f01b604482015260640161096c565b5f61462160675490565b90505f81116146575760405162461bcd60e51b8152602060048201526002602482015261545360f01b604482015260640161096c565b6146613386615621565b61468860405180608001604052805f81526020015f81526020015f81526020015f81525090565b5f5b60d3548110156148e1575f60d382815481106146a8576146a8615f6e565b5f9182526020808320604080516060810182529390910154600281810b855263010000008204900b92840192909252660100000000000090910462ffffff1682820181905260c95460ca549251630b4c774160e11b81526001600160a01b039182166004820152928116602484015260448301919091529193507f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa15801561476b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061478f919061617a565b82516020840151604051635f49415b60e01b81526001600160a01b0384166004820152306024820152600292830b6044820152910b60648201529091505f9073__$b131e44167300e1b6d47510635310686a7$__90635f49415b90608401602060405180830381865af4158015614808573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061482c91906162ad565b9050614845612e72826001600160801b03168c896150e2565b9050806001600160801b03165f0361485f575050506148d9565b5f61487383855f0151866020015185615332565b905080604001518660400181815161488b9190615f5b565b90525060608082015190870180516148a4908390615f5b565b9052508051865187906148b8908390615f5b565b90525060208082015190870180516148d1908390615f5b565b905250505050505b60010161468a565b508186036148f4576148f460d35f615a38565b61490681604001518260600151614e0a565b5050805160ce5460c9546040516370a0823160e01b81523060048201525f9392916001600160a01b0316906370a0823190602401602060405180830381865afa158015614955573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906149799190616490565b614983919061644b565b61498d919061644b565b602083015160cf5460ca546040516370a0823160e01b81523060048201529394505f936001600160a01b03909116906370a0823190602401602060405180830381865afa1580156149e0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190614a049190616490565b614a0e919061644b565b614a18919061644b565b9050614a258289866150e2565b9550614a328189866150e2565b8351909550614a419087615f5b565b9550826020015185614a539190615f5b565b94508515614a725760c954614a72906001600160a01b031688886144f3565b8415614a8f5760ca54614a8f906001600160a01b031688876144f3565b8251602080850151604080519384529183015233917fbcc5876d59ecdf66ef7ccae24657b11650939218782f8d741e78fd3c35d285a3910160405180910390a26040808401516060850151825191825260208201527f1f2cfc6500dfe04cbfca4860fc7d00326b6f193887476808fde9b79859fd68f3910160405180910390a160408051898152602081018890529081018690526001600160a01b038816907f86dacd5ce62967ebd3d915a82b22ad7e159538e50c7ba451e073fec048d9f1279060600160405180910390a2505050509250929050565b5f8054610100900460ff1615614bf2578160ff166001148015614b885750303b155b614beb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161096c565b505f919050565b5f5460ff808416911610614c5f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161096c565b505f805460ff191660ff92909216919091179055600190565b919050565b5f54610100900460ff16614ce75760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161096c565b611626828261576c565b5f54610100900460ff16614d5b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161096c565b6112b86157ef565b6040516309e3d67b60e31b8152306004820152600283810b602483015282900b60448201526001600160801b036064820181905260848201525f9081906001600160a01b03861690634f1eb3d89060a40160408051808303815f875af1158015614dcf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190614df391906167be565b6001600160801b0391821697911695509350505050565b60cd545f90819061ffff16612710614e2282876167eb565b614e2c9190616816565b9250612710614e3f61ffff8316866167eb565b614e499190616816565b91508215614ecf5760c95460d05460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810186905291169063a9059cbb906044016020604051808303815f875af1925050508015614ec1575060408051601f3d908101601f19168201909252614ebe918101906161b7565b60015b614ecd575f9250614ecf565b505b8115614f535760ca5460d05460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af1925050508015614f45575060408051601f3d908101601f19168201909252614f42918101906161b7565b60015b614f51575f9150614f53565b505b60408051848152602081018490527f1f2cfc6500dfe04cbfca4860fc7d00326b6f193887476808fde9b79859fd68f3910160405180910390a1509250929050565b5f818152600183016020526040812054801561506e575f614fb660018361644b565b85549091505f90614fc99060019061644b565b9050818114615028575f865f018281548110614fe757614fe7615f6e565b905f5260205f200154905080875f01848154811061500757615007615f6e565b5f918252602080832090910192909255918252600188019052604090208390555b85548690806150395761503961645e565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f905560019350505050610910565b5f915050610910565b5f825f01828154811061508c5761508c615f6e565b905f5260205f200154905092915050565b5f6150a98484846150e2565b90505f82806150ba576150ba616802565b8486091115610aab575f1981106150cf575f80fd5b806150d981616835565b95945050505050565b5f80805f19858709858702925082811083820303915050805f03615116575f841161510b575f80fd5b508290049050610aab565b808411615121575f80fd5b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b6001600160a01b0382166151de5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161096c565b8060675f8282546151ef9190615f5b565b90915550506001600160a01b0382165f908152606560205260408120805483929061521b908490615f5b565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526117cd9085906323b872dd60e01b9060840161451f565b5f6001600160801b0382111561531a5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f3238206269747300000000000000000000000000000000000000000000000000606482015260840161096c565b5090565b5f610aab836001600160a01b038416615859565b61535960405180608001604052805f81526020015f81526020015f81526020015f81525090565b60405163a34123a760e01b8152600285810b600483015284900b60248201526001600160801b03831660448201526001600160a01b0386169063a34123a79060640160408051808303815f875af11580156153b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906153da9190616195565b602083015281525f806153ee878787614d63565b845191935091506153ff908361644b565b60408401526020830151615413908261644b565b6060840152509095945050505050565b80158061549b5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015615475573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906154999190616490565b155b61550d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161096c565b6040516001600160a01b03831660248201526044810182905261234790849063095ea7b360e01b9060640161451f565b5f615591826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166158a59092919063ffffffff16565b80519091501561234757808060200190518101906155af91906161b7565b6123475760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161096c565b6001600160a01b0382166156815760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161096c565b6001600160a01b0382165f90815260656020526040902054818110156156f45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161096c565b6001600160a01b0383165f90815260656020526040812083830390556067805484929061572290849061644b565b90915550506040518281525f906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b5f54610100900460ff166157d65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161096c565b60686157e28382616891565b5060696123478282616891565b5f54610100900460ff166113195760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161096c565b5f81815260018301602052604081205461589e57508154600181810184555f848152602080822090930184905584548482528286019093526040902091909155610910565b505f610910565b60606158b384845f856158bb565b949350505050565b6060824710156159335760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161096c565b6001600160a01b0385163b61598a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161096c565b5f80866001600160a01b031685876040516159a5919061694c565b5f6040518083038185875af1925050503d805f81146159df576040519150601f19603f3d011682016040523d82523d5f602084013e6159e4565b606091505b50915091506159f48282866159ff565b979650505050505050565b60608315615a0e575081610aab565b825115615a1e5782518084602001fd5b8160405162461bcd60e51b815260040161096c9190615a6f565b5080545f8255905f5260205f209081019061198691905b8082111561531a57805468ffffffffffffffffff19168155600101615a4f565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114611986575f80fd5b8035614c7881615aa4565b5f8060408385031215615ad4575f80fd5b8235615adf81615aa4565b946020939093013593505050565b5f60208284031215615afd575f80fd5b8135610aab81615aa4565b5f805f60608486031215615b1a575f80fd5b8335615b2581615aa4565b92506020840135615b3581615aa4565b929592945050506040919091013590565b5f8083601f840112615b56575f80fd5b50813567ffffffffffffffff811115615b6d575f80fd5b6020830191508360208260051b8501011115615b87575f80fd5b9250929050565b5f805f8060408587031215615ba1575f80fd5b843567ffffffffffffffff811115615bb7575f80fd5b615bc387828801615b46565b909550935050602085013567ffffffffffffffff811115615be2575f80fd5b615bee87828801615b46565b95989497509550505050565b5f8060408385031215615c0b575f80fd5b50508035926020909101359150565b5f60208284031215615c2a575f80fd5b813561ffff81168114610aab575f80fd5b5f8060208385031215615c4c575f80fd5b823567ffffffffffffffff811115615c62575f80fd5b615c6e85828601615b46565b90969095509350505050565b602080825282518282018190525f918401906040840190835b81811015615cde57615cc8838551805160020b8252602081015160020b602083015262ffffff60408201511660408301525050565b6020939093019260609290920191600101615c93565b509095945050505050565b602080825282518282018190525f918401906040840190835b81811015615cde5783516001600160a01b0316835260209384019390920191600101615d02565b5f805f8060808587031215615d3c575f80fd5b843593506020850135615d4e81615aa4565b93969395505050506040820135916060013590565b5f805f8060808587031215615d76575f80fd5b843567ffffffffffffffff811115615d8c575f80fd5b850160e08188031215615d9d575f80fd5b966020860135965060408601359560600135945092505050565b5f8083601f840112615dc7575f80fd5b50813567ffffffffffffffff811115615dde575f80fd5b602083019150836020828501011115615b87575f80fd5b5f805f8060608587031215615e08575f80fd5b8435935060208501359250604085013567ffffffffffffffff811115615e2c575f80fd5b615bee87828801615db7565b5f8060408385031215615e49575f80fd5b8235615e5481615aa4565b91506020830135615e6481615aa4565b809150509250929050565b5f805f805f60608688031215615e83575f80fd5b853567ffffffffffffffff811115615e99575f80fd5b615ea588828901615db7565b909650945050602086013567ffffffffffffffff811115615ec4575f80fd5b615ed088828901615db7565b909450925050604086013567ffffffffffffffff811115615eef575f80fd5b86016101408189031215615f01575f80fd5b809150509295509295909350565b600181811c90821680615f2357607f821691505b602082108103615f4157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561091057610910615f47565b634e487b7160e01b5f52603260045260245ffd5b8015158114611986575f80fd5b8035614c7881615f82565b5f60208284031215615faa575f80fd5b8135610aab81615f82565b8183526020830192505f815f5b84811015615ff3578135615fd581615aa4565b6001600160a01b031686526020958601959190910190600101615fc2565b5093949350505050565b604081525f616010604083018688615fb5565b8281036020808501919091528482528591015f5b8581101561604d57823561603781615f82565b1515825260209283019290910190600101616024565b50979650505050505050565b602081525f6158b3602083018486615fb5565b634e487b7160e01b5f52604160045260245ffd5b62ffffff81168114611986575f80fd5b602080825281018290525f8360408301825b858110156160ce5782356160b581616080565b62ffffff168252602092830192909101906001016160a2565b5095945050505050565b5f808335601e198436030181126160ed575f80fd5b83018035915067ffffffffffffffff821115616107575f80fd5b6020019150600581901b3603821315615b87575f80fd5b604081525f616131604083018587615fb5565b82810360208401528084518083526020830191506020860192505f5b8181101561616d578351151583526020938401939092019160010161614d565b5090979650505050505050565b5f6020828403121561618a575f80fd5b8151610aab81615aa4565b5f80604083850312156161a6575f80fd5b505080516020909101519092909150565b5f602082840312156161c7575f80fd5b8151610aab81615f82565b606081525f6101008201855160a06060850152818151808452610120860191506020830193505f92505b8083101561624857616231828551805160020b8252602081015160020b602083015262ffffff60408201511660408301525050565b6060820191506020840193506001830192506161fc565b506020888101516001600160a01b039081166080888101919091526040808c0151831660a08a015260608c0151831660c08a01529a01511660e0870152850196909652505050929092019190915290565b6001600160801b0381168114611986575f80fd5b5f602082840312156162bd575f80fd5b8151610aab81616299565b5f602082840312156162d8575f80fd5b8135610aab81616080565b5f808335601e198436030181126162f8575f80fd5b83018035915067ffffffffffffffff821115616312575f80fd5b6020019150600781901b3603821315615b87575f80fd5b8060020b8114611986575f80fd5b5f60208284031215616347575f80fd5b8135610aab81616329565b5f60208284031215616362575f80fd5b8135610aab81616299565b803561637881616329565b60020b8252602081013561638b81616329565b60020b602083015260408101356163a181616080565b62ffffff81166040840152505050565b608080825283549082018190525f84815260208120909160a0840190835b8181101561640b578354600281810b8552601882901c900b602085015260301c62ffffff166040840152600193840193606090930192016163cf565b50508092505050610aab602083018461636d565b5f8060408385031215616430575f80fd5b825161643b81615f82565b6020939093015192949293505050565b8181038181111561091057610910615f47565b634e487b7160e01b5f52603160045260245ffd5b5f8235609e19833603018112616486575f80fd5b9190910192915050565b5f602082840312156164a0575f80fd5b5051919050565b5f808335601e198436030181126164bc575f80fd5b83018035915067ffffffffffffffff8211156164d6575f80fd5b602001915036819003821315615b87575f80fd5b818382375f9101908152919050565b5f808335601e1984360301811261650e575f80fd5b830160208101925035905067ffffffffffffffff81111561652d575f80fd5b8060071b3603821315615b87575f80fd5b8183526020830192505f815f5b84811015615ff357813561655e81616299565b6001600160801b03168652616579602080880190840161636d565b608095860195919091019060010161654b565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f8135601e198336030181126165c8575f80fd5b820160208101903567ffffffffffffffff8111156165e4575f80fd5b8036038213156165f2575f80fd5b60a0855261660460a08601828461658c565b91505061661360208401615ab8565b6001600160a01b03166020850152604083810135908501526060808401359085015261664160808401615f8f565b8015156080860152509392505050565b5f61665c82836164f9565b60e0855261666e60e08601828461653e565b91505061667e60208401846164f9565b858303602087015261669183828461653e565b925050506040830135609e198436030181126166ab575f80fd5b84820360408601526166bf828583016165b4565b606085810135908701526080808601359087015260a0808601359087015260c0948501359490950193909352509192915050565b606081525f6167056060830186616651565b60208301949094525060400152919050565b6001600160a01b038316815260808101610aab602083018461636d565b813561673f81616329565b815462ffffff19811662ffffff8316178355602084013561675f81616329565b62ffffff831692508060181b65ffffff000000169050808365ffffffffffff19841617178455604085013561679381616080565b68ffffff0000000000008160301b168468ffffffffffffffffff198516178317178555505050505050565b5f80604083850312156167cf575f80fd5b82516167da81616299565b6020840151909250615e6481616299565b808202811582820484141761091057610910615f47565b634e487b7160e01b5f52601260045260245ffd5b5f8261683057634e487b7160e01b5f52601260045260245ffd5b500490565b5f6001820161684657616846615f47565b5060010190565b601f82111561234757805f5260205f20601f840160051c810160208510156168725750805b601f840160051c820191505b81811015613150575f815560010161687e565b815167ffffffffffffffff8111156168ab576168ab61606c565b6168bf816168b98454615f0f565b8461684d565b6020601f8211600181146168f1575f83156168da5750848201515b5f19600385901b1c1916600184901b178455613150565b5f84815260208120601f198516915b828110156169205787850151825560209485019460019092019101616900565b508482101561693d57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fea264697066735822122044445c994cb01199dfdd891ff8e6af422ff1a77c1e14156f57e27c57deee262964736f6c634300081a0033";

type ApertureMMVaultConstructorParams =
  | [linkLibraryAddresses: ApertureMMVaultLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ApertureMMVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ApertureMMVault__factory extends ContractFactory {
  constructor(...args: ApertureMMVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ApertureMMVault__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ApertureMMVaultLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3d23d8578387a47facd93bb77f6fe6e81b\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Underlying.sol:Underlying"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b131e44167300e1b6d47510635310686a7\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Position.sol:Position"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$57c880716d25c772e0b1e547659075b66d\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Pool.sol:Pool"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    factory_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ApertureMMVault> {
    return super.deploy(factory_, overrides || {}) as Promise<ApertureMMVault>;
  }
  override getDeployTransaction(
    factory_: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(factory_, overrides || {});
  }
  override attach(address: string): ApertureMMVault {
    return super.attach(address) as ApertureMMVault;
  }
  override connect(signer: Signer): ApertureMMVault__factory {
    return super.connect(signer) as ApertureMMVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApertureMMVaultInterface {
    return new utils.Interface(_abi) as ApertureMMVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ApertureMMVault {
    return new Contract(address, _abi, signerOrProvider) as ApertureMMVault;
  }
}

export interface ApertureMMVaultLibraryAddresses {
  ["contracts/libraries/Underlying.sol:Underlying"]: string;
  ["contracts/libraries/Position.sol:Position"]: string;
  ["contracts/libraries/Pool.sol:Pool"]: string;
}
