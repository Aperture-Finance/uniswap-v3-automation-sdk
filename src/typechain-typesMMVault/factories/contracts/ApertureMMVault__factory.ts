/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ApertureMMVault,
  ApertureMMVaultInterface,
} from "../../contracts/ApertureMMVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "factory_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount1",
        type: "uint256",
      },
    ],
    name: "LPBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint24[]",
        name: "feeTiers",
        type: "uint24[]",
      },
    ],
    name: "LogAddPools",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
    ],
    name: "LogBlacklistRouters",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
    ],
    name: "LogBurn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
    ],
    name: "LogIcebergCollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
    ],
    name: "LogMainCollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
    ],
    name: "LogMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "burns",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "mints",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "router",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expectedMinReturn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "zeroForOne",
                type: "bool",
              },
            ],
            internalType: "struct SwapPayload",
            name: "swap",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minBurn0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBurn1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit1",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rebalance",
        name: "rebalanceParams",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "swapDelta0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "swapDelta1",
        type: "uint256",
      },
    ],
    name: "LogRebalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
    ],
    name: "LogRemovePools",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "LogRestrictedMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "init0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "init1",
        type: "uint256",
      },
    ],
    name: "LogSetInits",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "managerFeeBPS",
        type: "uint16",
      },
    ],
    name: "LogSetManagerFeeBPS",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "newManagers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "LogSetManagers",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
    ],
    name: "LogWhitelistRouters",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "LogWithdrawManagerBalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint24[]",
        name: "feeTiers_",
        type: "uint24[]",
      },
    ],
    name: "addPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "routers_",
        type: "address[]",
      },
    ],
    name: "blacklistRouters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token0Max_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Max_",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPools",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRanges",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouters",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "init0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint24[]",
            name: "feeTiers",
            type: "uint24[]",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "init0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "init1",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "feeCollector",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "managers",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
        ],
        internalType: "struct InitializePayload",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "managerBalance0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerBalance1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerFeeBPS",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "managers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "burns",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "mints",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "router",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expectedMinReturn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "zeroForOne",
                type: "bool",
              },
            ],
            internalType: "struct SwapPayload",
            name: "swap",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minBurn0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBurn1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit1",
            type: "uint256",
          },
        ],
        internalType: "struct Rebalance",
        name: "rebalanceParams_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "gasFeeAmount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token0Fee_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Fee_",
        type: "uint256",
      },
    ],
    name: "rebalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools_",
        type: "address[]",
      },
    ],
    name: "removePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "restrictedMint",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "init0_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "init1_",
        type: "uint256",
      },
    ],
    name: "setInits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "managerFeeBPS_",
        type: "uint16",
      },
    ],
    name: "setManagerFeeBPS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "managers_",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "statuses_",
        type: "bool[]",
      },
    ],
    name: "setManagers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    name: "setRestrictedMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "routers_",
        type: "address[]",
      },
    ],
    name: "whitelistRouters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "burnAmount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token0Min_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Min_",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawManagerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f80fd5b50604051616801380380616801833981016040819052602b91607b565b806001600160a01b038116606a5760405162461bcd60e51b81526020600482015260026024820152612d2360f11b604482015260640160405180910390fd5b6001600160a01b03166080525060a6565b5f60208284031215608a575f80fd5b81516001600160a01b0381168114609f575f80fd5b9392505050565b6080516167126100ef5f395f818161052d015281816121b30152818161265b015281816128e801528181612b930152818161324501528181613e5e015261469401526167125ff3fe608060405234801561000f575f80fd5b50600436106102cd575f3560e01c806386ac1cb91161017c578063c4a52901116100dd578063dd62ed3e11610093578063f2fde38b1161006e578063f2fde38b14610610578063f88c31ce14610623578063fdff9b4d1461062b575f80fd5b8063dd62ed3e146105bc578063e2aa8559146105f4578063f2eb3e3414610607575f80fd5b8063ccdf7a02116100c3578063ccdf7a0214610575578063d21220a714610596578063d3487997146105a9575f80fd5b8063c4a529011461054f578063c7a4ae1714610562575f80fd5b8063a5ff1dc711610132578063b38016f711610118578063b38016f714610502578063c415b95c14610515578063c45a015514610528575f80fd5b8063a5ff1dc7146104dc578063a9059cbb146104ef575f80fd5b806392e49dfd1161016257806392e49dfd146104ae57806395d89b41146104c1578063a457c2d7146104c9575f80fd5b806386ac1cb91461048a5780638da5cb5b1461049d575f80fd5b80633bdcc92311610231578063617a3419116101e757806370a08231116101c257806370a0823114610452578063715018a61461047a5780637ecd671714610482575f80fd5b8063617a341914610400578063673a2a1f146104155780636f0372af1461042a575f80fd5b806342fb9d441161021757806342fb9d44146103d15780634794c84a146103da5780634b164140146103ed575f80fd5b80633bdcc923146103ab5780633f7b6135146103be575f80fd5b806314b806301161028657806323b872dd1161026c57806323b872dd14610376578063313ce567146103895780633950935114610398575f80fd5b806314b806301461036557806318160ddd1461036e575f80fd5b8063095ea7b3116102b6578063095ea7b3146103025780630d6e6631146103255780630dfe16811461033a575f80fd5b8063065756db146102d157806306fdde03146102ed575b5f80fd5b6102da60ce5481565b6040519081526020015b60405180910390f35b6102f561064d565b6040516102e491906157e9565b61031561031036600461583d565b6106dd565b60405190151581526020016102e4565b610338610333366004615867565b6106f6565b005b60c95461034d906001600160a01b031681565b6040516001600160a01b0390911681526020016102e4565b6102da60cb5481565b6067546102da565b610315610384366004615882565b6107a9565b604051601281526020016102e4565b6103156103a636600461583d565b6107ce565b6103386103b9366004615908565b61080c565b6103386103cc366004615974565b6109d3565b6102da60cf5481565b6103386103e8366004615994565b610afc565b6103386103fb3660046159b5565b610c29565b610408610d69565b6040516102e491906159f4565b61041d610dea565b6040516102e49190615a63565b61043d610438366004615aa3565b610e8d565b604080519283526020830191909152016102e4565b6102da610460366004615867565b6001600160a01b03165f9081526065602052604090205490565b610338610f71565b610338610fd6565b6103386104983660046159b5565b61103c565b6033546001600160a01b031661034d565b6103386104bc3660046159b5565b6110e7565b6102f561121b565b6103156104d736600461583d565b61122a565b6103386104ea3660046159b5565b6112de565b6103156104fd36600461583d565b611346565b610338610510366004615b1b565b611353565b60d05461034d906001600160a01b031681565b61034d7f000000000000000000000000000000000000000000000000000000000000000081565b61033861055d366004615bbb565b61197f565b60d25461034d906001600160a01b031681565b60cd546105839061ffff1681565b60405161ffff90911681526020016102e4565b60ca5461034d906001600160a01b031681565b6103386105b7366004615c0f565b611b0b565b6102da6105ca366004615c52565b6001600160a01b039182165f90815260666020908152604080832093909416825291909152205490565b61043d610602366004615aa3565b611b1b565b6102da60cc5481565b61033861061e366004615867565b611bef565b61041d611cd1565b610315610639366004615867565b60d16020525f908152604090205460ff1681565b60606068805461065c90615c89565b80601f016020809104026020016040519081016040528092919081815260200182805461068890615c89565b80156106d35780601f106106aa576101008083540402835291602001916106d3565b820191905f5260205f20905b8154815290600101906020018083116106b657829003601f168201915b5050505050905090565b5f336106ea818585611d6d565b60019150505b92915050565b6033546001600160a01b031633146107555760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60d280546001600160a01b0319166001600160a01b0383169081179091556040519081527f6b7f177e85ebe3aabaf1339b9a445ac908b2bef730372180fa280958e2414ee39060200160405180910390a150565b5f336107b6858285611e90565b6107c1858585611f1a565b60019150505b9392505050565b335f8181526066602090815260408083206001600160a01b03871684529091528120549091906106ea9082908690610807908790615cd5565b611d6d565b6033546001600160a01b031633146108665760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074c565b6002609754036108b85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b60026097556108c5612115565b6108cd612325565b828181146108d9575f80fd5b5f5b81811015610989575f8686838181106108f6576108f6615ce8565b905060200201602081019061090b9190615867565b905084848381811061091f5761091f615ce8565b90506020020160208101906109349190615d14565b15610960576001600160a01b0381165f90815260d160205260409020805460ff19166001179055610980565b6001600160a01b0381165f90815260d160205260409020805460ff191690555b506001016108db565b507f1da7ed74593d98931e07b2dc6800dc94689304fc587064c8364a62f71aa9248e858585856040516109bf9493929190615d77565b60405180910390a150506001609755505050565b5f8211806109e057505f81115b610a105760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161074c565b60675415610a455760405162461bcd60e51b8152602060048201526002602482015261545360f01b604482015260640161074c565b60d2545f906001600160a01b031615610a695760d2546001600160a01b0316610a76565b6033546001600160a01b03165b9050336001600160a01b03821614610ab45760405162461bcd60e51b81526020600482015260016024820152602960f91b604482015260640161074c565b60cb83905560cc82905560408051848152602081018490527ff8966e026442bb0adb17149a6d44e394d2b6eb3c5cc1dc71b3c0698000548ae6910160405180910390a1505050565b335f90815260d1602052604090205460ff16610b3f5760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161074c565b600260975403610b915760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b600260975561271061ffff82161115610bd25760405162461bcd60e51b81526020600482015260036024820152624d464f60e81b604482015260640161074c565b610bda612115565b60cd805461ffff191661ffff83169081179091556040519081527fa73ff0774d4c8681f79fa6546f34bab7a3037f3b3aab405401a1fd8c6e5ca3d69060200160405180910390a1506001609755565b6033546001600160a01b03163314610c835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074c565b5f5b81811015610d2b57610cbf838383818110610ca257610ca2615ce8565b9050602002016020810190610cb79190615867565b60d490612473565b610cf05760405162461bcd60e51b815260206004820152600260248201526104e560f41b604482015260640161074c565b610d22838383818110610d0557610d05615ce8565b9050602002016020810190610d1a9190615867565b60d490612494565b50600101610c85565b507f024551cce253d1a442bfe99dae530a00a492fb8c67c4456cce3c9d23eecd39618282604051610d5d929190615dd3565b60405180910390a15050565b606060d3805480602002602001604051908101604052809291908181526020015f905b82821015610de1575f8481526020908190206040805160608101825291850154600281810b845263010000008204900b838501526601000000000000900462ffffff1690820152825260019092019101610d8c565b50505050905090565b60605f610df760d46124a8565b90505f8167ffffffffffffffff811115610e1357610e13615de6565b604051908082528060200260200182016040528015610e3c578160200160208202803683370190505b5090505f5b82811015610e8657610e5460d4826124b1565b828281518110610e6657610e66615ce8565b6001600160a01b0390921660209283029190910190910152600101610e41565b5092915050565b5f80600260975403610ee15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b6002609755610ef086866124bc565b909250905083821115610f2b5760405162461bcd60e51b815260206004820152600360248201526254304d60e81b604482015260640161074c565b82811115610f615760405162461bcd60e51b815260206004820152600360248201526254314d60e81b604482015260640161074c565b6001609755909590945092505050565b6033546001600160a01b03163314610fcb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074c565b610fd45f612b35565b565b6002609754036110285760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b6002609755611035612325565b6001609755565b6033546001600160a01b031633146110965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074c565b60c95460ca546110b691849184916001600160a01b039081169116612b86565b7f1b402611d70c7735d942445aaa3ebbf878149bece6b797870b44a581c5f7f4c98282604051610d5d929190615e0a565b6033546001600160a01b031633146111415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074c565b5f5b818110156111e95761117d83838381811061116057611160615ce8565b90506020020160208101906111759190615867565b60d690612473565b6111ae5760405162461bcd60e51b8152602060048201526002602482015261525760f01b604482015260640161074c565b6111e08383838181106111c3576111c3615ce8565b90506020020160208101906111d89190615867565b60d690612494565b50600101611143565b507fbe6c83115c5bf7fd07e41c6002394841bd7dc0348f3b7c58645e8950f604f5c48282604051610d5d929190615dd3565b60606069805461065c90615c89565b335f8181526066602090815260408083206001600160a01b0387168452909152812054909190838110156112c65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161074c565b6112d38286868403611d6d565b506001949350505050565b6033546001600160a01b031633146113385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074c565b6113428282612cf7565b5050565b5f336106ea818585611f1a565b5f61135e6001612e6a565b90508015611375575f805461ff0019166101001790555b5f6113808380615e52565b9050116113b55760405162461bcd60e51b815260206004820152600360248201526213919560ea1b604482015260640161074c565b5f6113c66040840160208501615867565b6001600160a01b0316036114015760405162461bcd60e51b8152602060048201526002602482015261054360f41b604482015260640161074c565b6114116060830160408401615867565b6001600160a01b031661142a6040840160208501615867565b6001600160a01b0316106114665760405162461bcd60e51b815260206004820152600360248201526257544f60e81b604482015260640161074c565b5f6114776080840160608501615867565b6001600160a01b0316036114b35760405162461bcd60e51b815260206004820152600360248201526227a0ad60e91b604482015260640161074c565b5f6114c460e0840160c08501615867565b6001600160a01b0316036115035760405162461bcd60e51b815260040161074c906020808252600490820152632321a0ad60e11b604082015260600190565b5f61151160e0840184615e52565b9050116115495760405162461bcd60e51b815260040161074c9060208082526004908201526326a0a62d60e11b604082015260600190565b5f61155760e0840184615e52565b5f81811061156757611567615ce8565b905060200201602081019061157c9190615867565b6001600160a01b0316036115bb5760405162461bcd60e51b815260040161074c90602080825260049082015263269820ad60e11b604082015260600190565b5f826080013511806115d057505f8260a00135115b6116005760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161074c565b61167186868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8a0181900481028201810190925288815292508891508790819084018382808284375f92019190915250612f8192505050565b611679612ff5565b6116ab6116868380615e52565b6116966040860160208701615867565b6116a66060870160408801615867565b612b86565b6116bb6040830160208401615867565b60c980546001600160a01b0319166001600160a01b03929092169190911790556116eb6060830160408401615867565b60ca80546001600160a01b0319166001600160a01b039290921691909117905561172161171c610100840184615e52565b612cf7565b6117396117346080840160608501615867565b612b35565b61174960e0830160c08401615867565b60d080546001600160a01b0319166001600160a01b03929092169190911790555f61177760e0840184615e52565b905090505f8167ffffffffffffffff81111561179557611795615de6565b6040519080825280602002602001820160405280156117be578160200160208202803683370190505b5090505f5b8281101561185857600160d15f6117dd60e0890189615e52565b858181106117ed576117ed615ce8565b90506020020160208101906118029190615867565b6001600160a01b0316815260208101919091526040015f20805460ff1916911515919091179055815160019083908390811061184057611840615ce8565b911515602092830291909101909101526001016117c3565b50608084013560cb5560a084013560cc557f1b402611d70c7735d942445aaa3ebbf878149bece6b797870b44a581c5f7f4c96118948580615e52565b6040516118a2929190615e0a565b60405180910390a1604080516080860135815260a086013560208201527ff8966e026442bb0adb17149a6d44e394d2b6eb3c5cc1dc71b3c0698000548ae6910160405180910390a17f1da7ed74593d98931e07b2dc6800dc94689304fc587064c8364a62f71aa9248e61191860e0860186615e52565b8360405161192893929190615e98565b60405180910390a150508015611977575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b335f90815260d1602052604090205460ff166119c25760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161074c565b600260975403611a145760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b600260975547831115611a4f5760405162461bcd60e51b815260206004820152600360248201526247464160e81b604482015260640161074c565b60d054611a65906001600160a01b031684613067565b611a6e84613181565b8115611a915760d05460c954611a91916001600160a01b0391821691168461440e565b8015611ab45760d05460ca54611ab4916001600160a01b0391821691168361440e565b5f821180611ac157505f81115b15611b005760408051838152602081018390527f83e53b0dba2d7aabfeb0419dc8d5fd9d456ea1441018a8e81b53de9814e58aaf910160405180910390a15b505060016097555050565b611b158484614486565b50505050565b5f80600260975403611b6f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b6002609755611b7e86866144fc565b909250905083821015611bb95760405162461bcd60e51b815260206004820152600360248201526254306d60e81b604482015260640161074c565b82811015610f615760405162461bcd60e51b815260206004820152600360248201526254316d60e81b604482015260640161074c565b6033546001600160a01b03163314611c495760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074c565b6001600160a01b038116611cc55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161074c565b611cce81612b35565b50565b60605f611cde60d66124a8565b90505f8167ffffffffffffffff811115611cfa57611cfa615de6565b604051908082528060200260200182016040528015611d23578160200160208202803683370190505b5090505f5b82811015610e8657611d3b60d6826124b1565b828281518110611d4d57611d4d615ce8565b6001600160a01b0390921660209283029190910190910152600101611d28565b6001600160a01b038316611dcf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161074c565b6001600160a01b038216611e305760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161074c565b6001600160a01b038381165f8181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381165f908152606660209081526040808320938616835292905220545f198114611b155781811015611f0d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161074c565b611b158484848403611d6d565b6001600160a01b038316611f965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161074c565b6001600160a01b038216611ff85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161074c565b6001600160a01b0383165f90815260656020526040902054818110156120865760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161074c565b6001600160a01b038085165f908152606560205260408082208585039055918516815290812080548492906120bc908490615cd5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161210891815260200190565b60405180910390a3611b15565b5f805f5b60d3548110156122e2575f60d3828154811061213757612137615ce8565b5f9182526020808320604080516060810182529390910154600281810b855263010000008204900b92840192909252660100000000000090910462ffffff1682820181905260c95460ca549251630b4c774160e11b81526001600160a01b039182166004820152928116602484015260448301919091529193507f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa1580156121fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061221e9190615ef4565b8251602084015160405163a34123a760e01b8152600292830b6004820152910b60248201525f60448201529091506001600160a01b0382169063a34123a79060640160408051808303815f875af115801561227b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061229f9190615f0f565b50505f806122b583855f01518660200151614add565b90925090506122c48288615cd5565b96506122d08187615cd5565b95505060019093019250612119915050565b506122ed8282614b84565b505060408051838152602081018390527f1f2cfc6500dfe04cbfca4860fc7d00326b6f193887476808fde9b79859fd68f39101610d5d565b60ce805460cf80545f938490559290559081156123ba5760c95460d05460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af19250505080156123ac575060408051601f3d908101601f191682019092526123a991810190615f31565b60015b6123b8575f91506123ba565b505b801561243d5760ca5460d05460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303815f875af1925050508015612430575060408051601f3d908101601f1916820190925261242d91810190615f31565b60015b61243b57505f61243d565b505b60408051838152602081018390527fa292e28c648da34e20b372054caab5f0359198b3b4d5f0ef9945d4616e15dc979101610d5d565b6001600160a01b0381165f90815260018301602052604081205415156107c7565b5f6107c7836001600160a01b038416614d0e565b5f6106f0825490565b5f6107c78383614df1565b5f806002609754036125105760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b6002609755836125475760405162461bcd60e51b81526020600482015260026024820152614d4160f01b604482015260640161074c565b60d2546001600160a01b03161580612569575060d2546001600160a01b031633145b6125995760405162461bcd60e51b81526020600482015260016024820152602960f91b604482015260640161074c565b305f6125a460675490565b905080158015906127105773__$3d23d8578387a47facd93bb77f6fe6e81b$__6383d7ba9f6040518060a0016040528060d3805480602002602001604051908101604052809291908181526020015f905b8282101561264a575f8481526020908190206040805160608101825291850154600281810b845263010000008204900b838501526601000000000000900462ffffff16908201528252600190920191016125f5565b505050908252506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602083015260c954811660408084019190915260ca5482166060840152908816608090920191909152516001600160e01b031960e084901b1681526126c891908b908790600401615f4c565b6040805180830381865af41580156126e2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127069190615f0f565b9095509350612800565b60cb5460cc54670de0b6b3a7640000919061272c8a8385614e17565b97506127398a8285614e17565b96506127468a8385614e5c565b5f03612750575f97505b61275b8a8285614e5c565b5f03612765575f96505b5f825f03612774575f1961277f565b61277f898585614e5c565b90505f825f03612790575f1961279b565b61279b898685614e5c565b90508b8183106127ab57816127ad565b825b146127fa5760405162461bcd60e51b815260206004820152600560248201527f4130264131000000000000000000000000000000000000000000000000000000604482015260640161074c565b50505050505b61280a8688614f02565b84156128285760c954612828906001600160a01b0316338588614fde565b83156128465760ca54612846906001600160a01b0316338587614fde565b8015612ad8575f5b60d354811015612ad6575f60d3828154811061286c5761286c615ce8565b5f9182526020808320604080516060810182529390910154600281810b855263010000008204900b92840192909252660100000000000090910462ffffff1682820181905260c95460ca549251630b4c774160e11b81526001600160a01b039182166004820152928116602484015260448301919091529193507f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa15801561292f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129539190615ef4565b82516020840151604051635f49415b60e01b81526001600160a01b0380851660048301528a166024820152600292830b6044820152910b60648201529091505f9073__$b131e44167300e1b6d47510635310686a7$__90635f49415b90608401602060405180830381865af41580156129ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129f29190616027565b9050612a10612a0b826001600160801b03168d89614e5c565b615016565b9050806001600160801b03165f03612a2a57505050612ace565b82516020840151604051633c8a7d8d60e01b81526001600160a01b038a81166004830152600293840b60248301529190920b60448301526001600160801b038316606483015260a060848301525f60a4830152831690633c8a7d8d9060c40160408051808303815f875af1158015612aa4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ac89190615f0f565b50505050505b60010161284e565b505b60408051888152602081018790529081018590526001600160a01b038716907f5f11830295067c4bcc7d02d4e3b048cd7427be50a3aeb6afc9d3d559ee64bcfa9060600160405180910390a2505060016097555090939092509050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f5b83811015612cf0575f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee828585898987818110612bd457612bd4615ce8565b9050602002016020810190612be99190616042565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015612c3e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c629190615ef4565b90506001600160a01b038116612c9f5760405162461bcd60e51b81526020600482015260026024820152615a4160f01b604482015260640161074c565b612caa60d482612473565b15612cdb5760405162461bcd60e51b81526020600482015260016024820152600560fc1b604482015260640161074c565b612ce660d482615098565b5050600101612b88565b5050505050565b5f5b81811015612e385760c9546001600160a01b0316838383818110612d1f57612d1f615ce8565b9050602002016020810190612d349190615867565b6001600160a01b031614158015612d85575060ca546001600160a01b0316838383818110612d6457612d64615ce8565b9050602002016020810190612d799190615867565b6001600160a01b031614155b612db65760405162461bcd60e51b8152602060048201526002602482015261149560f21b604482015260640161074c565b612dcb83838381811061116057611160615ce8565b15612dfd5760405162461bcd60e51b815260206004820152600260248201526121a960f11b604482015260640161074c565b612e2f838383818110612e1257612e12615ce8565b9050602002016020810190612e279190615867565b60d690615098565b50600101612cf9565b507f102656122b5bfb41d864259a385db02d34584f3a71b6c6c35c14cbdaf9038fe68282604051610d5d929190615dd3565b5f8054610100900460ff1615612ef6578160ff166001148015612e8c5750303b155b612eef5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161074c565b505f919050565b5f5460ff808416911610612f635760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161074c565b505f805460ff191660ff92909216919091179055600190565b919050565b5f54610100900460ff16612feb5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161074c565b61134282826150ac565b5f54610100900460ff1661305f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161074c565b610fd461512f565b804710156130b75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161074c565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114613100576040519150601f19603f3d011682016040523d82523d5f602084013e613105565b606091505b505090508061317c5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161074c565b505050565b335f90815260d1602052604090205460ff166131c45760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161074c565b6002609754036132165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b600260975560c95460ca54604080516080810182525f80825260208201819052918101829052606081018290527f0000000000000000000000000000000000000000000000000000000000000000936001600160a01b039081169316915b61327e868061605d565b9050811015613787575f6001600160a01b038616631698ee8286866132a38b8061605d565b878181106132b3576132b3615ce8565b6132ca926080918202019081019150606001616042565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa15801561331f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133439190615ef4565b90505f73__$b131e44167300e1b6d47510635310686a7$__635f49415b833061336c8c8061605d565b8881811061337c5761337c615ce8565b61339592604060809092020190810191506020016160b1565b61339f8d8061605d565b898181106133af576133af615ce8565b6133c892606060809092020190810191506040016160b1565b6040516001600160e01b031960e087901b1681526001600160a01b039485166004820152939092166024840152600290810b60448401520b6064820152608401602060405180830381865af4158015613423573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134479190616027565b9050806001600160801b03165f0361346057505061377f565b5f6001600160801b036134738a8061605d565b8681811061348357613483615ce8565b61349992602060809092020190810191506160cc565b6001600160801b0316036134ae5750806134e1565b6134b8898061605d565b858181106134c8576134c8615ce8565b6134de92602060809092020190810191506160cc565b90505b5f613552846134f08c8061605d565b8881811061350057613500615ce8565b61351992604060809092020190810191506020016160b1565b6135238d8061605d565b8981811061353357613533615ce8565b61354c92606060809092020190810191506040016160b1565b85615199565b9050826001600160801b0316826001600160801b03160361371b575f8073__$b131e44167300e1b6d47510635310686a7$__630c3c0bfc60d36135958f8061605d565b8b8181106135a5576135a5615ce8565b9050608002016020016040518363ffffffff1660e01b81526004016135cb92919061612b565b6040805180830381865af41580156135e5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136099190616199565b91509150816136435760405162461bcd60e51b815260040161074c9060208082526004908201526352524e4560e01b604082015260600190565b60d38054613653906001906161c5565b8154811061366357613663615ce8565b905f5260205f200160d3828154811061367e5761367e615ce8565b5f918252602090912082549101805462ffffff92831662ffffff19821681178355845463010000009081900485160265ffffffffffff199092161717808255925466010000000000009081900490921690910268ffffff0000000000001990921691909117905560d38054806136f6576136f66161d8565b5f8281526020902081015f19908101805468ffffffffffffffffff1916905501905550505b80518651879061372c908390615cd5565b9052506020808201519087018051613745908390615cd5565b905250604080820151908701805161375e908390615cd5565b9052506060808201519087018051613777908390615cd5565b905250505050505b600101613274565b508051606086013511156137c25760405162461bcd60e51b8152602060048201526002602482015261042360f41b604482015260640161074c565b8460800135816020015110156137ff5760405162461bcd60e51b8152602060048201526002602482015261423160f01b604482015260640161074c565b5f8160400151118061381457505f8160600151115b1561382e5761382b81604001518260600151614b84565b50505b505f61383d60408601866161ec565b604001351115613d545761386861385760408601866161ec565b611175906040810190602001615867565b6138995760405162461bcd60e51b8152602060048201526002602482015261272960f11b604482015260640161074c565b6040516370a0823160e01b81523060048201525f906001600160a01b038416906370a0823190602401602060405180830381865afa1580156138dd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613901919061620a565b6040516370a0823160e01b81523060048201529091505f906001600160a01b038416906370a0823190602401602060405180830381865afa158015613948573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061396c919061620a565b90506139a061397e60408801886161ec565b61398f906040810190602001615867565b6001600160a01b038616905f61528a565b6139d26139b060408801886161ec565b6139c1906040810190602001615867565b6001600160a01b038516905f61528a565b613a046139e260408801886161ec565b6139f3906040810190602001615867565b6001600160a01b038616908461528a565b613a36613a1460408801886161ec565b613a25906040810190602001615867565b6001600160a01b038516908361528a565b5f613a4460408801886161ec565b613a55906040810190602001615867565b6001600160a01b0316613a6b60408901896161ec565b613a759080616221565b604051613a83929190616264565b5f604051808303815f865af19150503d805f8114613abc576040519150601f19603f3d011682016040523d82523d5f602084013e613ac1565b606091505b5050905080613af75760405162461bcd60e51b8152602060048201526002602482015261534360f01b604482015260640161074c565b6040516370a0823160e01b81523060048201525f906001600160a01b038716906370a0823190602401602060405180830381865afa158015613b3b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613b5f919061620a565b6040516370a0823160e01b81523060048201529091505f906001600160a01b038716906370a0823190602401602060405180830381865afa158015613ba6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613bca919061620a565b9050613bd960408a018a6161ec565b613bea9060a0810190608001615d14565b15613c8157613bfc60408a018a6161ec565b613c0a906060013585615cd5565b8110158015613c335750613c2160408a018a6161ec565b613c2f9060400135866161c5565b8210155b613c645760405162461bcd60e51b815260206004820152600260248201526129a360f11b604482015260640161074c565b613c6e82866161c5565b9150613c7a84826161c5565b9050613d0f565b613c8e60408a018a6161ec565b613c9c906060013586615cd5565b8210158015613cc55750613cb360408a018a6161ec565b613cc19060400135856161c5565b8110155b613cf65760405162461bcd60e51b815260206004820152600260248201526129a360f11b604482015260640161074c565b613d0085836161c5565b9150613d0c81856161c5565b90505b7fab3abe7e2ad787892344ed4ada44aad53c7d53e9d6b5ee91f20bd30ed39540b7898383604051613d429392919061646d565b60405180910390a15050505050613d90565b7fab3abe7e2ad787892344ed4ada44aad53c7d53e9d6b5ee91f20bd30ed39540b7845f80604051613d879392919061646d565b60405180910390a15b5f805f5b613da1602088018861605d565b905081101561424c575f73__$b131e44167300e1b6d47510635310686a7$__630c3c0bfc60d3613dd460208c018c61605d565b86818110613de457613de4615ce8565b9050608002016020016040518363ffffffff1660e01b8152600401613e0a92919061612b565b6040805180830381865af4158015613e24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613e489190616199565b5060c95460ca549192505f916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692631698ee82929082169116613e9860208e018e61605d565b88818110613ea857613ea8615ce8565b613ebf926080918202019081019150606001616042565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015613f14573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613f389190615ef4565b9050816140d6576001600160a01b038116613f7b5760405162461bcd60e51b815260206004820152600360248201526204e55560ec1b604482015260640161074c565b613f8660d482612473565b613fb65760405162461bcd60e51b81526020600482015260016024820152600560fc1b604482015260640161074c565b73__$57c880716d25c772e0b1e547659075b66d$__636b01882082613fde60208d018d61605d565b87818110613fee57613fee615ce8565b9050608002016020016040518363ffffffff1660e01b8152600401614014929190616491565b602060405180830381865af415801561402f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906140539190615f31565b6140855760405162461bcd60e51b815260206004820152600360248201526252545360e81b604482015260640161074c565b60d361409460208b018b61605d565b858181106140a4576140a4615ce8565b83546001810185555f948552602094859020608090920293909301939093019290910190506140d382826164ae565b50505b5f806001600160a01b038316633c8a7d8d306140f560208f018f61605d565b8981811061410557614105615ce8565b61411e92604060809092020190810191506020016160b1565b8e806020019061412e919061605d565b8a81811061413e5761413e615ce8565b61415792606060809092020190810191506040016160b1565b8f8060200190614167919061605d565b8b81811061417757614177615ce8565b61418d92602060809092020190810191506160cc565b6040516001600160e01b031960e087901b1681526001600160a01b039094166004850152600292830b6024850152910b60448301526001600160801b0316606482015260a060848201525f60a482015260c40160408051808303815f875af11580156141fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061421f9190615f0f565b909250905061422e8288615cd5565b965061423a8187615cd5565b95505060019093019250613d94915050565b508560a001358210156142865760405162461bcd60e51b8152602060048201526002602482015261044360f41b604482015260640161074c565b8560c001358110156142bf5760405162461bcd60e51b8152602060048201526002602482015261443160f01b604482015260640161074c565b60ce5460c9546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015614308573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061432c919061620a565b10156143605760405162461bcd60e51b815260206004820152600360248201526204d42360ec1b604482015260640161074c565b60cf5460ca546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156143a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906143cd919061620a565b10156144015760405162461bcd60e51b81526020600482015260036024820152624d423160e81b604482015260640161074c565b5050600160975550505050565b6040516001600160a01b03831660248201526044810182905261317c90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909316929092179091526153a4565b61449160d433612473565b6144c25760405162461bcd60e51b8152602060048201526002602482015261434360f01b604482015260640161074c565b81156144df5760c9546144df906001600160a01b0316338461440e565b80156113425760ca54611342906001600160a01b0316338361440e565b5f806002609754036145505760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b6002609755836145875760405162461bcd60e51b8152602060048201526002602482015261424160f01b604482015260640161074c565b5f61459160675490565b90505f81116145c75760405162461bcd60e51b8152602060048201526002602482015261545360f01b604482015260640161074c565b6145d13386615488565b6145f860405180608001604052805f81526020015f81526020015f81526020015f81525090565b5f5b60d354811015614851575f60d3828154811061461857614618615ce8565b5f9182526020808320604080516060810182529390910154600281810b855263010000008204900b92840192909252660100000000000090910462ffffff1682820181905260c95460ca549251630b4c774160e11b81526001600160a01b039182166004820152928116602484015260448301919091529193507f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa1580156146db573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906146ff9190615ef4565b82516020840151604051635f49415b60e01b81526001600160a01b0384166004820152306024820152600292830b6044820152910b60648201529091505f9073__$b131e44167300e1b6d47510635310686a7$__90635f49415b90608401602060405180830381865af4158015614778573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061479c9190616027565b90506147b5612a0b826001600160801b03168c89614e5c565b9050806001600160801b03165f036147cf57505050614849565b5f6147e383855f0151866020015185615199565b90508060400151866040018181516147fb9190615cd5565b9052506060808201519087018051614814908390615cd5565b905250805186518790614828908390615cd5565b9052506020808201519087018051614841908390615cd5565b905250505050505b6001016145fa565b508186036148645761486460d35f6157b2565b61487681604001518260600151614b84565b5050805160ce5460c9546040516370a0823160e01b81523060048201525f9392916001600160a01b0316906370a0823190602401602060405180830381865afa1580156148c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906148e9919061620a565b6148f391906161c5565b6148fd91906161c5565b602083015160cf5460ca546040516370a0823160e01b81523060048201529394505f936001600160a01b03909116906370a0823190602401602060405180830381865afa158015614950573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190614974919061620a565b61497e91906161c5565b61498891906161c5565b9050614995828986614e5c565b95506149a2818986614e5c565b83519095506149b19087615cd5565b95508260200151856149c39190615cd5565b945085156149e25760c9546149e2906001600160a01b0316888861440e565b84156149ff5760ca546149ff906001600160a01b0316888761440e565b8251602080850151604080519384529183015233917fbcc5876d59ecdf66ef7ccae24657b11650939218782f8d741e78fd3c35d285a3910160405180910390a26040808401516060850151825191825260208201527f1f2cfc6500dfe04cbfca4860fc7d00326b6f193887476808fde9b79859fd68f3910160405180910390a160408051898152602081018890529081018690526001600160a01b038816907f86dacd5ce62967ebd3d915a82b22ad7e159538e50c7ba451e073fec048d9f1279060600160405180910390a250506001609755509194909350915050565b6040516309e3d67b60e31b8152306004820152600283810b602483015282900b60448201526001600160801b036064820181905260848201525f9081906001600160a01b03861690634f1eb3d89060a40160408051808303815f875af1158015614b49573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190614b6d9190616538565b6001600160801b0391821697911695509350505050565b60cd545f90819061ffff16612710614b9c8287616565565b614ba69190616590565b9250612710614bb961ffff831686616565565b614bc39190616590565b91508215614c495760c95460d05460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810186905291169063a9059cbb906044016020604051808303815f875af1925050508015614c3b575060408051601f3d908101601f19168201909252614c3891810190615f31565b60015b614c47575f9250614c49565b505b8115614ccd5760c95460d05460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af1925050508015614cbf575060408051601f3d908101601f19168201909252614cbc91810190615f31565b60015b614ccb575f9150614ccd565b505b60408051848152602081018490527f1f2cfc6500dfe04cbfca4860fc7d00326b6f193887476808fde9b79859fd68f3910160405180910390a1509250929050565b5f8181526001830160205260408120548015614de8575f614d306001836161c5565b85549091505f90614d43906001906161c5565b9050818114614da2575f865f018281548110614d6157614d61615ce8565b905f5260205f200154905080875f018481548110614d8157614d81615ce8565b5f918252602080832090910192909255918252600188019052604090208390555b8554869080614db357614db36161d8565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506106f0565b5f9150506106f0565b5f825f018281548110614e0657614e06615ce8565b905f5260205f200154905092915050565b5f614e23848484614e5c565b90505f8280614e3457614e3461657c565b84860911156107c7575f198110614e49575f80fd5b80614e53816165af565b95945050505050565b5f80805f19858709858702925082811083820303915050805f03614e90575f8411614e85575f80fd5b5082900490506107c7565b808411614e9b575f80fd5b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b6001600160a01b038216614f585760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161074c565b8060675f828254614f699190615cd5565b90915550506001600160a01b0382165f9081526065602052604081208054839290614f95908490615cd5565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052611b159085906323b872dd60e01b9060840161443a565b5f6001600160801b038211156150945760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f3238206269747300000000000000000000000000000000000000000000000000606482015260840161074c565b5090565b5f6107c7836001600160a01b0384166155d3565b5f54610100900460ff166151165760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161074c565b6068615122838261660b565b50606961317c828261660b565b5f54610100900460ff166110355760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161074c565b6151c060405180608001604052805f81526020015f81526020015f81526020015f81525090565b60405163a34123a760e01b8152600285810b600483015284900b60248201526001600160801b03831660448201526001600160a01b0386169063a34123a79060640160408051808303815f875af115801561521d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906152419190615f0f565b602083015281525f80615255878787614add565b8451919350915061526690836161c5565b6040840152602083015161527a90826161c5565b6060840152509095945050505050565b8015806153025750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156152dc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190615300919061620a565b155b6153745760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161074c565b6040516001600160a01b03831660248201526044810182905261317c90849063095ea7b360e01b9060640161443a565b5f6153f8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661561f9092919063ffffffff16565b80519091501561317c57808060200190518101906154169190615f31565b61317c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161074c565b6001600160a01b0382166154e85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161074c565b6001600160a01b0382165f908152606560205260409020548181101561555b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161074c565b6001600160a01b0383165f9081526065602052604081208383039055606780548492906155899084906161c5565b90915550506040518281525f906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b5f81815260018301602052604081205461561857508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556106f0565b505f6106f0565b606061562d84845f85615635565b949350505050565b6060824710156156ad5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161074c565b6001600160a01b0385163b6157045760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161074c565b5f80866001600160a01b0316858760405161571f91906166c6565b5f6040518083038185875af1925050503d805f8114615759576040519150601f19603f3d011682016040523d82523d5f602084013e61575e565b606091505b509150915061576e828286615779565b979650505050505050565b606083156157885750816107c7565b8251156157985782518084602001fd5b8160405162461bcd60e51b815260040161074c91906157e9565b5080545f8255905f5260205f2090810190611cce91905b8082111561509457805468ffffffffffffffffff191681556001016157c9565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114611cce575f80fd5b8035612f7c8161581e565b5f806040838503121561584e575f80fd5b82356158598161581e565b946020939093013593505050565b5f60208284031215615877575f80fd5b81356107c78161581e565b5f805f60608486031215615894575f80fd5b833561589f8161581e565b925060208401356158af8161581e565b929592945050506040919091013590565b5f8083601f8401126158d0575f80fd5b50813567ffffffffffffffff8111156158e7575f80fd5b6020830191508360208260051b8501011115615901575f80fd5b9250929050565b5f805f806040858703121561591b575f80fd5b843567ffffffffffffffff811115615931575f80fd5b61593d878288016158c0565b909550935050602085013567ffffffffffffffff81111561595c575f80fd5b615968878288016158c0565b95989497509550505050565b5f8060408385031215615985575f80fd5b50508035926020909101359150565b5f602082840312156159a4575f80fd5b813561ffff811681146107c7575f80fd5b5f80602083850312156159c6575f80fd5b823567ffffffffffffffff8111156159dc575f80fd5b6159e8858286016158c0565b90969095509350505050565b602080825282518282018190525f918401906040840190835b81811015615a5857615a42838551805160020b8252602081015160020b602083015262ffffff60408201511660408301525050565b6020939093019260609290920191600101615a0d565b509095945050505050565b602080825282518282018190525f918401906040840190835b81811015615a585783516001600160a01b0316835260209384019390920191600101615a7c565b5f805f8060808587031215615ab6575f80fd5b843593506020850135615ac88161581e565b93969395505050506040820135916060013590565b5f8083601f840112615aed575f80fd5b50813567ffffffffffffffff811115615b04575f80fd5b602083019150836020828501011115615901575f80fd5b5f805f805f60608688031215615b2f575f80fd5b853567ffffffffffffffff811115615b45575f80fd5b615b5188828901615add565b909650945050602086013567ffffffffffffffff811115615b70575f80fd5b615b7c88828901615add565b909450925050604086013567ffffffffffffffff811115615b9b575f80fd5b86016101208189031215615bad575f80fd5b809150509295509295909350565b5f805f8060808587031215615bce575f80fd5b843567ffffffffffffffff811115615be4575f80fd5b850160e08188031215615bf5575f80fd5b966020860135965060408601359560600135945092505050565b5f805f8060608587031215615c22575f80fd5b8435935060208501359250604085013567ffffffffffffffff811115615c46575f80fd5b61596887828801615add565b5f8060408385031215615c63575f80fd5b8235615c6e8161581e565b91506020830135615c7e8161581e565b809150509250929050565b600181811c90821680615c9d57607f821691505b602082108103615cbb57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106f0576106f0615cc1565b634e487b7160e01b5f52603260045260245ffd5b8015158114611cce575f80fd5b8035612f7c81615cfc565b5f60208284031215615d24575f80fd5b81356107c781615cfc565b8183526020830192505f815f5b84811015615d6d578135615d4f8161581e565b6001600160a01b031686526020958601959190910190600101615d3c565b5093949350505050565b604081525f615d8a604083018688615d2f565b8281036020808501919091528482528591015f5b85811015615dc7578235615db181615cfc565b1515825260209283019290910190600101615d9e565b50979650505050505050565b602081525f61562d602083018486615d2f565b634e487b7160e01b5f52604160045260245ffd5b62ffffff81168114611cce575f80fd5b602080825281018290525f8360408301825b85811015615e48578235615e2f81615dfa565b62ffffff16825260209283019290910190600101615e1c565b5095945050505050565b5f808335601e19843603018112615e67575f80fd5b83018035915067ffffffffffffffff821115615e81575f80fd5b6020019150600581901b3603821315615901575f80fd5b604081525f615eab604083018587615d2f565b82810360208401528084518083526020830191506020860192505f5b81811015615ee75783511515835260209384019390920191600101615ec7565b5090979650505050505050565b5f60208284031215615f04575f80fd5b81516107c78161581e565b5f8060408385031215615f20575f80fd5b505080516020909101519092909150565b5f60208284031215615f41575f80fd5b81516107c781615cfc565b606081525f6101008201855160a06060850152818151808452610120860191506020830193505f92505b80831015615fc257615fab828551805160020b8252602081015160020b602083015262ffffff60408201511660408301525050565b606082019150602084019350600183019250615f76565b506020888101516001600160a01b039081166080888101919091526040808c0151831660a08a015260608c0151831660c08a01529a01511660e0870152850196909652505050929092019190915290565b6001600160801b0381168114611cce575f80fd5b5f60208284031215616037575f80fd5b81516107c781616013565b5f60208284031215616052575f80fd5b81356107c781615dfa565b5f808335601e19843603018112616072575f80fd5b83018035915067ffffffffffffffff82111561608c575f80fd5b6020019150600781901b3603821315615901575f80fd5b8060020b8114611cce575f80fd5b5f602082840312156160c1575f80fd5b81356107c7816160a3565b5f602082840312156160dc575f80fd5b81356107c781616013565b80356160f2816160a3565b60020b82526020810135616105816160a3565b60020b6020830152604081013561611b81615dfa565b62ffffff81166040840152505050565b608080825283549082018190525f84815260208120909160a0840190835b81811015616185578354600281810b8552601882901c900b602085015260301c62ffffff16604084015260019384019360609093019201616149565b505080925050506107c760208301846160e7565b5f80604083850312156161aa575f80fd5b82516161b581615cfc565b6020939093015192949293505050565b818103818111156106f0576106f0615cc1565b634e487b7160e01b5f52603160045260245ffd5b5f8235609e19833603018112616200575f80fd5b9190910192915050565b5f6020828403121561621a575f80fd5b5051919050565b5f808335601e19843603018112616236575f80fd5b83018035915067ffffffffffffffff821115616250575f80fd5b602001915036819003821315615901575f80fd5b818382375f9101908152919050565b5f808335601e19843603018112616288575f80fd5b830160208101925035905067ffffffffffffffff8111156162a7575f80fd5b8060071b3603821315615901575f80fd5b8183526020830192505f815f5b84811015615d6d5781356162d881616013565b6001600160801b031686526162f360208088019084016160e7565b60809586019591909101906001016162c5565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f8135601e19833603018112616342575f80fd5b820160208101903567ffffffffffffffff81111561635e575f80fd5b80360382131561636c575f80fd5b60a0855261637e60a086018284616306565b91505061638d60208401615832565b6001600160a01b0316602085015260408381013590850152606080840135908501526163bb60808401615d09565b8015156080860152509392505050565b5f6163d68283616273565b60e085526163e860e0860182846162b8565b9150506163f86020840184616273565b858303602087015261640b8382846162b8565b925050506040830135609e19843603018112616425575f80fd5b84820360408601526164398285830161632e565b606085810135908701526080808601359087015260a0808601359087015260c0948501359490950193909352509192915050565b606081525f61647f60608301866163cb565b60208301949094525060400152919050565b6001600160a01b0383168152608081016107c760208301846160e7565b81356164b9816160a3565b815462ffffff19811662ffffff831617835560208401356164d9816160a3565b62ffffff831692508060181b65ffffff000000169050808365ffffffffffff19841617178455604085013561650d81615dfa565b68ffffff0000000000008160301b168468ffffffffffffffffff198516178317178555505050505050565b5f8060408385031215616549575f80fd5b825161655481616013565b6020840151909250615c7e81616013565b80820281158282048414176106f0576106f0615cc1565b634e487b7160e01b5f52601260045260245ffd5b5f826165aa57634e487b7160e01b5f52601260045260245ffd5b500490565b5f600182016165c0576165c0615cc1565b5060010190565b601f82111561317c57805f5260205f20601f840160051c810160208510156165ec5750805b601f840160051c820191505b81811015612cf0575f81556001016165f8565b815167ffffffffffffffff81111561662557616625615de6565b616639816166338454615c89565b846165c7565b6020601f82116001811461666b575f83156166545750848201515b5f19600385901b1c1916600184901b178455612cf0565b5f84815260208120601f198516915b8281101561669a578785015182556020948501946001909201910161667a565b50848210156166b757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fea2646970667358221220db815c485231b86216d4965a8665e5ebb204da65cd5fbb4a5ca424734f80d47764736f6c634300081a0033";

type ApertureMMVaultConstructorParams =
  | [linkLibraryAddresses: ApertureMMVaultLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ApertureMMVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ApertureMMVault__factory extends ContractFactory {
  constructor(...args: ApertureMMVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ApertureMMVault__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ApertureMMVaultLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3d23d8578387a47facd93bb77f6fe6e81b\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Underlying.sol:Underlying"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b131e44167300e1b6d47510635310686a7\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Position.sol:Position"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$57c880716d25c772e0b1e547659075b66d\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Pool.sol:Pool"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    factory_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ApertureMMVault> {
    return super.deploy(factory_, overrides || {}) as Promise<ApertureMMVault>;
  }
  override getDeployTransaction(
    factory_: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(factory_, overrides || {});
  }
  override attach(address: string): ApertureMMVault {
    return super.attach(address) as ApertureMMVault;
  }
  override connect(signer: Signer): ApertureMMVault__factory {
    return super.connect(signer) as ApertureMMVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApertureMMVaultInterface {
    return new utils.Interface(_abi) as ApertureMMVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ApertureMMVault {
    return new Contract(address, _abi, signerOrProvider) as ApertureMMVault;
  }
}

export interface ApertureMMVaultLibraryAddresses {
  ["contracts/libraries/Underlying.sol:Underlying"]: string;
  ["contracts/libraries/Position.sol:Position"]: string;
  ["contracts/libraries/Pool.sol:Pool"]: string;
}
