/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Pool, PoolInterface } from "../../../contracts/libraries/Pool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range",
        name: "range_",
        type: "tuple",
      },
    ],
    name: "validateTickSpacing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610276610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c80636b01882014610038575b5f80fd5b61004b61004636600461012e565b61005f565b604051901515815260200160405180910390f35b5f808373ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ce91906101f1565b9050826020015160020b835f015160020b1280156100f9575082516100f4908290610213565b60020b155b801561011557508083602001516101109190610213565b60020b155b949350505050565b8060020b811461012b575f80fd5b50565b5f808284036080811215610140575f80fd5b833573ffffffffffffffffffffffffffffffffffffffff81168114610163575f80fd5b92506060601f1982011215610176575f80fd5b506040516060810181811067ffffffffffffffff821117156101a657634e487b7160e01b5f52604160045260245ffd5b60405260208401356101b78161011d565b815260408401356101c78161011d565b6020820152606084013562ffffff811681146101e1575f80fd5b6040820152919491935090915050565b5f60208284031215610201575f80fd5b815161020c8161011d565b9392505050565b5f8260020b8061023157634e487b7160e01b5f52601260045260245ffd5b808360020b079150509291505056fea2646970667358221220223e13bb8ddaa3218db32467f4d35e059ac9e512d4a54248fe8a8025f16f98b864736f6c634300081a0033";

type PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pool__factory extends ContractFactory {
  constructor(...args: PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pool> {
    return super.deploy(overrides || {}) as Promise<Pool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Pool {
    return super.attach(address) as Pool;
  }
  override connect(signer: Signer): Pool__factory {
    return super.connect(signer) as Pool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolInterface {
    return new utils.Interface(_abi) as PoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pool {
    return new Contract(address, _abi, signerOrProvider) as Pool;
  }
}
