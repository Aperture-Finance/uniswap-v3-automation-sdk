/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Position,
  PositionInterface,
} from "../../../contracts/libraries/Position";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool_",
        type: "IUniswapV3Pool",
      },
      {
        internalType: "address",
        name: "self_",
        type: "address",
      },
      {
        internalType: "int24",
        name: "lowerTick_",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upperTick_",
        type: "int24",
      },
    ],
    name: "getLiquidityByRange",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "self_",
        type: "address",
      },
      {
        internalType: "int24",
        name: "lowerTick_",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upperTick_",
        type: "int24",
      },
    ],
    name: "getPositionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range[]",
        name: "currentRanges_",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range",
        name: "range_",
        type: "tuple",
      },
    ],
    name: "rangeExists",
    outputs: [
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6105bd610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004a575f3560e01c80630c3c0bfc1461004e5780631208efca1461007d5780635f49415b146100eb575b5f80fd5b61006161005c36600461037b565b61011f565b6040805192151583526020830191909152015b60405180910390f35b6100dd61008b366004610469565b6040516bffffffffffffffffffffffff19606085901b16602082015260e883811b603483015282901b60378201525f90603a016040516020818303038152906040528051906020012090509392505050565b604051908152602001610074565b6100fe6100f93660046104ab565b6101dc565b6040516fffffffffffffffffffffffffffffffff9091168152602001610074565b5f805f5b84518110156101d45784818151811061013e5761013e610500565b60200260200101515f015160020b845f015160020b148015610186575084818151811061016d5761016d610500565b60200260200101516020015160020b846020015160020b145b80156101bc575084818151811061019f5761019f610500565b60200260200101516040015162ffffff16846040015162ffffff16145b925082156101cc578091506101d4565b600101610123565b509250929050565b604080516bffffffffffffffffffffffff19606086901b1660208083019190915260e885811b603484015284901b60378301528251808303601a018152603a830193849052805191012063514ea4bf60e01b909252603e8101919091525f9073ffffffffffffffffffffffffffffffffffffffff86169063514ea4bf90605e0160a060405180830381865afa158015610277573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061029b9190610533565b509298975050505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156102e6576102e66102a9565b604052919050565b8035600281900b81146102ff575f80fd5b919050565b5f60608284031215610314575f80fd5b6040516060810167ffffffffffffffff81118282101715610337576103376102a9565b604052905080610346836102ee565b8152610354602084016102ee565b6020820152604083013562ffffff8116811461036e575f80fd5b6040919091015292915050565b5f806080838503121561038c575f80fd5b823567ffffffffffffffff8111156103a2575f80fd5b8301601f810185136103b2575f80fd5b803567ffffffffffffffff8111156103cc576103cc6102a9565b6103db60208260051b016102bd565b808282526020820191506020606084028501019250878311156103fc575f80fd5b6020840193505b82841015610428576104158885610304565b8252602082019150606084019350610403565b8095505050505061043c8460208501610304565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff81168114610466575f80fd5b50565b5f805f6060848603121561047b575f80fd5b833561048681610445565b9250610494602085016102ee565b91506104a2604085016102ee565b90509250925092565b5f805f80608085870312156104be575f80fd5b84356104c981610445565b935060208501356104d981610445565b92506104e7604086016102ee565b91506104f5606086016102ee565b905092959194509250565b634e487b7160e01b5f52603260045260245ffd5b80516fffffffffffffffffffffffffffffffff811681146102ff575f80fd5b5f805f805f60a08688031215610547575f80fd5b61055086610514565b602087015160408801519196509450925061056d60608701610514565b915061057b60808701610514565b9050929550929590935056fea2646970667358221220db627cf1170c4b9bc3759d4245a5301aaaea78bd13c381695148578517c6121f64736f6c634300081a0033";

type PositionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PositionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Position__factory extends ContractFactory {
  constructor(...args: PositionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Position> {
    return super.deploy(overrides || {}) as Promise<Position>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Position {
    return super.attach(address) as Position;
  }
  override connect(signer: Signer): Position__factory {
    return super.connect(signer) as Position__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionInterface {
    return new utils.Interface(_abi) as PositionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Position {
    return new Contract(address, _abi, signerOrProvider) as Position;
  }
}
