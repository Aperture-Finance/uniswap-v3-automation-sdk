/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SlipStreamAutoman,
  SlipStreamAutomanInterface,
} from "../../src/SlipStreamAutoman";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICommonNonfungiblePositionManager",
        name: "nonfungiblePositionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FeeLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "Invalid_Tick_Range",
    type: "error",
  },
  {
    inputs: [],
    name: "MismatchETH",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowlistedRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWETH9",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "controllers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "ControllersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "DecreaseLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "feeLimitPips",
        type: "uint96",
      },
    ],
    name: "FeeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "IncreaseLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Rebalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Reinvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "SetAllowlistedRouters",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType:
          "struct ICommonNonfungiblePositionManager.DecreaseLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "token0FeeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1FeeAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenOutMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapData0",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "swapData1",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isUnwrapNative",
            type: "bool",
          },
        ],
        internalType: "struct IAutomanCommon.ZapOutParams",
        name: "zapOutParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct IAutomanCommon.Permit",
        name: "permit",
        type: "tuple",
      },
    ],
    name: "decreaseLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType:
          "struct ICommonNonfungiblePositionManager.DecreaseLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "token0FeeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1FeeAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenOutMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapData0",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "swapData1",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isUnwrapNative",
            type: "bool",
          },
        ],
        internalType: "struct IAutomanCommon.ZapOutParams",
        name: "zapOutParams",
        type: "tuple",
      },
    ],
    name: "decreaseLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeConfig",
    outputs: [
      {
        internalType: "address",
        name: "feeCollector",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeLimitPips",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "V3PoolCallee",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "amount0Desired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Desired",
        type: "uint256",
      },
    ],
    name: "getOptimalSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType:
          "struct ICommonNonfungiblePositionManager.IncreaseLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInFeeAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapData0",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "swapData1",
        type: "bytes",
      },
    ],
    name: "increaseLiquidityFromTokenIn",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType:
          "struct ICommonNonfungiblePositionManager.IncreaseLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "token0FeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1FeeAmount",
        type: "uint256",
      },
    ],
    name: "increaseLiquidityOptimal",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAllowListedRouter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISlipStreamNonfungiblePositionManager.MintParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInFeeAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapData0",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "swapData1",
        type: "bytes",
      },
    ],
    name: "mintFromTokenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISlipStreamNonfungiblePositionManager.MintParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "token0FeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1FeeAmount",
        type: "uint256",
      },
    ],
    name: "mintOptimal",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "npm",
    outputs: [
      {
        internalType: "contract ICommonNonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISlipStreamNonfungiblePositionManager.MintParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "isCollect",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "token0FeeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1FeeAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenOutMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapData0",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "swapData1",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isUnwrapNative",
            type: "bool",
          },
        ],
        internalType: "struct IAutomanCommon.ZapOutParams",
        name: "zapOutParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct IAutomanCommon.Permit",
        name: "permit",
        type: "tuple",
      },
    ],
    name: "rebalance",
    outputs: [
      {
        internalType: "uint256",
        name: "newTokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISlipStreamNonfungiblePositionManager.MintParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "isCollect",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "token0FeeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1FeeAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenOutMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapData0",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "swapData1",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isUnwrapNative",
            type: "bool",
          },
        ],
        internalType: "struct IAutomanCommon.ZapOutParams",
        name: "zapOutParams",
        type: "tuple",
      },
    ],
    name: "rebalance",
    outputs: [
      {
        internalType: "uint256",
        name: "newTokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType:
          "struct ICommonNonfungiblePositionManager.IncreaseLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "token0FeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1FeeAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
    ],
    name: "reinvest",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Desired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType:
          "struct ICommonNonfungiblePositionManager.IncreaseLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "token0FeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1FeeAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct IAutomanCommon.Permit",
        name: "permit",
        type: "tuple",
      },
    ],
    name: "reinvest",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "setAllowlistedRouters",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "controllers",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "setControllers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeCollector",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "feeLimitPips",
            type: "uint96",
          },
        ],
        internalType: "struct IAutomanCommon.FeeConfig",
        name: "_feeConfig",
        type: "tuple",
      },
    ],
    name: "setFeeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0806040526040816157d2803803809161001a8285610262565b8339810103126101f25780516001600160a01b038116918282036101f2576001600160a01b039061004d9060200161029b565b1690811561024c57600080546001600160a01b031981168417825560405193916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36080526312a9293f60e21b8152602081600481855afa9081156101ff5760009161020b575b506001600160a01b031660a05260405163c45a015560e01b815290602090829060049082905afa9081156101ff576000916101c0575b5060c05260405161552290816102b08239608051818181610fca01528181611065015281816112120152818161212f0152818161219a0152818161229f015281816123a901528181612468015281816124f801528181612b5a01528181612ceb01528181612f8201528181612fbe0152818161392b0152613d89015260a0518181816108df015281816120ac0152818161258c015281816127ea01526128b3015260c0518181816117cd01528181611c9a0152818161365b01528181613e6e0152613ef70152f35b90506020813d6020116101f7575b816101db60209383610262565b810103126101f2576101ec9061029b565b386100f8565b600080fd5b3d91506101ce565b6040513d6000823e3d90fd5b90506020813d602011610244575b8161022660209383610262565b810103126101f25760049161023c60209261029b565b9150916100c2565b3d9150610219565b631e4fbdf760e01b600052600060045260246000fd5b601f909101601f19168101906001600160401b0382119082101761028557604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101f25756fe60806040526004361015610023575b361561001957600080fd5b610021612095565b005b60003560e01c8063147c4f73146101a35780631a1d5bf11461019e5780631e5eb1d0146101995780632c45e5a0146101945780634095c6461461018f5780634aa4a4fc1461018a5780635246441b14610185578063615596151461018057806370f3c1801461017b578063715018a614610176578063758ec1f5146101715780637f1e9ef61461016c5780638ba1e273146101675780638da5cb5b1461016257806391f6e9b21461015d57806399642fb114610158578063a05c8d5a14610153578063b429afeb1461014e578063c252d5d814610149578063c45a015514610144578063c747e2b31461013f578063dcad8f551461013a578063f2fde38b146101355763fa461e330361000e57611c40565b611b4a565b611983565b6117f1565b611782565b61167b565b61160d565b611560565b6113ab565b611173565b611121565b611089565b61101a565b610df9565b610d5d565b610c8d565b610bbc565b610903565b610894565b610826565b61073c565b61063e565b61055b565b610404565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff8211176101f357604052565b6101a8565b60c0810190811067ffffffffffffffff8211176101f357604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176101f357604052565b6040519061026561018083610214565b565b6040519061026560c083610214565b73ffffffffffffffffffffffffffffffffffffffff81160361029457565b600080fd5b359061026582610276565b604435908160020b820361029457565b35908160020b820361029457565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc610180910112610294576102f5610255565b906103006004610299565b825261030c6024610299565b602083015261031b60446102b4565b604083015261032a60646102b4565b606083015261033960846102b4565b608083015260a43560a083015260c43560c083015260e43560e08301526101043561010083015261036b610124610299565b61012083015261014435610140830152610386610164610299565b610160830152565b9181601f840112156102945782359167ffffffffffffffff8311610294576020838186019501011161029457565b8015150361029457565b908160e09103126102945790565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfc60809101126102945761020490565b34610294576102807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945761043d366102c2565b61018435906101a43567ffffffffffffffff81116102945761046390369060040161038e565b9190926101c435610473816103bc565b6101e4359367ffffffffffffffff8511610294576104df9561049c6104ac9636906004016103c6565b936104a6366103d4565b95611e1f565b604080519485526fffffffffffffffffffffffffffffffff90931660208501529183015260608201529081906080820190565b0390f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60a0910112610294576040519061051a826101d7565b8160043581526024356fffffffffffffffffffffffffffffffff81168103610294576020820152604435604082015260643560608201526080608435910152565b34610294576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457610594366104e3565b60a43567ffffffffffffffff8111610294576105b49036906004016103c6565b9060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3c360112610294576106026104df928251926105f2846120fe565b6105fd60c485612197565b6123da565b6040939193519384937f269a3942fe0284ff30ff93f97529fba299f93b8b85221afab5686fdab8bfa84b600080a2835260208301526040820190565b346102945760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610294576002546040805173ffffffffffffffffffffffffffffffffffffffff8316815260a09290921c602083015290f35b9181601f840112156102945782359167ffffffffffffffff8311610294576020808501948460051b01011161029457565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126102945760043567ffffffffffffffff811161029457816107159160040161069b565b929092916024359067ffffffffffffffff8211610294576107389160040161069b565b9091565b346102945761074a366106cc565b9290610754612523565b8383036102945760005b83811061079d57507f2077016b05a05d3f12f6d9a8ca3667fbecaf29eba7083f7e2d1d70dc3709f635936107989160405194859485611ecc565b0390a1005b806108206107ae6001938886611e6a565b356107b8816103bc565b73ffffffffffffffffffffffffffffffffffffffff6107d8848989611e6a565b356107e281610276565b16600052600360205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b0161075e565b346102945760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945773ffffffffffffffffffffffffffffffffffffffff60043561087681610276565b166000526001602052602060ff604060002054166040519015158152f35b346102945760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6102007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457610937366102c2565b610184359061094582610276565b6101a4356101c43567ffffffffffffffff81116102945761096a90369060040161038e565b6101e4359067ffffffffffffffff82116102945761098f610acf92369060040161038e565b9160a08701948551966109b1816109ac60c08c019a8b5190611f99565b611f99565b906109c9828c8315159485610ba8575b505082612696565b60025473ffffffffffffffffffffffffffffffffffffffff1691610b97575b5050875173ffffffffffffffffffffffffffffffffffffffff16610abd610a2660208b015173ffffffffffffffffffffffffffffffffffffffff1690565b610ab38b610aa9610a3b604083015160020b90565b610a9f610a5a6080610a51606087015160020b90565b95015160020b90565b95610a82610a66610267565b73ffffffffffffffffffffffffffffffffffffffff909a168a52565b73ffffffffffffffffffffffffffffffffffffffff166020890152565b60020b6040870152565b60020b6060850152565b60020b6080830152565b600060a082015286518851918b612979565b909252526104df610adf82612cb8565b9294909195610b043073ffffffffffffffffffffffffffffffffffffffff8316612e4c565b9081610b64575b505050604051948486957f07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a84665600080a285526fffffffffffffffffffffffffffffffff166020850152604084015260608301526080820190565b610b89610120610b8f94015173ffffffffffffffffffffffffffffffffffffffff1690565b906127d3565b388080610b0b565b610ba1918b6127d3565b38806109e8565b610bb59130903390612572565b8c816109c1565b346102945760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457610bf4366104e3565b60a4359067ffffffffffffffff821161029457610602610c1b6104df9336906004016103c6565b8251926105fd846120fe565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60c09101126102945760405190610c5e826101f8565b6004358252602435602083015260443560408301526064356060830152608435608083015260a43560a0830152565b34610294576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457610cc636610c27565b60c435906101043560e43567ffffffffffffffff8211610294576104df93610cf5610d0993369060040161038e565b929091855195610d04876120fe565b612e88565b906040949294519485947fc13e24d2b0a3bacd5d1a7c514125a1e27323abf7c86f6d36597f8752bbd7eed7600080a26fffffffffffffffffffffffffffffffff168452602084015260408301526060820190565b346102945760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457610d94612523565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b6101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457610e2d36610c27565b60c435610e3981610276565b60e4356101043567ffffffffffffffff811161029457610e5d90369060040161038e565b90610124359167ffffffffffffffff8311610294576104df93610ef78792610e8c610f4196369060040161038e565b916020860194610ea8816109ac604089519a01998a5190611f99565b90610ebf828d831515948561100657505082612696565b60025473ffffffffffffffffffffffffffffffffffffffff1691610ff5575b5050610eea8b51612f3f565b968551875190898d612979565b90925252610f3a6020610f1e835173ffffffffffffffffffffffffffffffffffffffff1690565b92015173ffffffffffffffffffffffffffffffffffffffff1690565b9085612fba565b91949093610f653073ffffffffffffffffffffffffffffffffffffffff8316612e4c565b80610fbf575b505051926040519485947fe93a38a2f007635b024bb3a896c7021e73edc7146c413a63e6b69c337304c698600080a26fffffffffffffffffffffffffffffffff168452602084015260408301526060820190565b610fee91610b8984517f000000000000000000000000000000000000000000000000000000000000000061403d565b3880610f6b565b610fff918c6127d3565b3880610ede565b6110139130903390612572565b8d816109c1565b346102945760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102945760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610294576004356110c481610276565b602435908160020b82036102945761110373ffffffffffffffffffffffffffffffffffffffff916080936110f66102a4565b606435916084359361312d565b91604094939451948552602085015215156040840152166060820152f35b346102945760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b61117c366106cc565b611187939193612523565b611192818414611e63565b60005b8381106111cf5750610798907fe4d045717648b4a964b22e91953fd95d48e089e38c87021016e48ddd32387eee9460405194859485611ecc565b6111e26111dd828686611e6a565b611ec2565b906111f66111f1828589611e6a565b611ea9565b1561134f5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168073ffffffffffffffffffffffffffffffffffffffff841614611325576040517f095ea7b3000000000000000000000000000000000000000000000000000000006020820190815273ffffffffffffffffffffffffffffffffffffffff9290921660248201526000604480830182905282529182916112b2606482610214565b519082865af16112c0611fe5565b506113255761131f6112f460019373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055565b01611195565b7f466d7fef0000000000000000000000000000000000000000000000000000000060005260046000fd5b6113a661137e60019373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055565b61131f565b6101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610294576113df36610c27565b60c43567ffffffffffffffff8111610294576114e66114a06114dc84604061140e6104df96369060040161038e565b90939060e43594610104356114a96114268751612f3f565b91611445835173ffffffffffffffffffffffffffffffffffffffff1690565b9989611497838d9c61146e602089015173ffffffffffffffffffffffffffffffffffffffff1690565b9e8f9d602081019d8e9182518061154e575b50019e8f9182518061153c575b5051915192613560565b50508851612015565b87528751612015565b86526114b4816135d4565b906114d160806114c8606084015160020b90565b92015160020b90565b8651918851936135e0565b9092525284612fba565b9092919351926040519485947fe93a38a2f007635b024bb3a896c7021e73edc7146c413a63e6b69c337304c698600080a26fffffffffffffffffffffffffffffffff168452602084015260408301526060820190565b61154890303385612572565b3861148d565b61155a90303387612572565b38611480565b34610294576101a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945761159936610c27565b60e4359060c4356101043567ffffffffffffffff8111610294576115c190369060040161038e565b9060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffedc360112610294576104df94610d099361012495610d04815197611607896120fe565b88612197565b346102945760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945773ffffffffffffffffffffffffffffffffffffffff60043561165d81610276565b166000526003602052602060ff604060002054166040519015158152f35b34610294576102007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610294576116b4366102c2565b61018435906101a43567ffffffffffffffff8111610294576116da90369060040161038e565b6101c492919235906116eb826103bc565b6101e4359367ffffffffffffffff8511610294576104df956117146117239636906004016103c6565b9461171e826120fe565b612264565b91939190837f811d4760f1a92875eb76dbd3dc2359544b2f6a000ba5b78784c0b105b3469bd0600080a260405194859485909493926fffffffffffffffffffffffffffffffff6060936080840197845216602083015260408201520152565b346102945760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102945760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029457600061182a612523565b670de0b6b3a76400006bffffffffffffffffffffffff611848612022565b1610156119805760043561185b81610276565b73ffffffffffffffffffffffffffffffffffffffff81161561197c57806118846118c592610276565b73ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b6118cd612022565b73ffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffff00000000000000000000000000000000000000006002549260a01b169116176002557f42200c2a55e71251cd849a86c7ece1a42ddabecbb489150a136f6c0d239c7a5c61193a611eb6565b611942612022565b6040805173ffffffffffffffffffffffffffffffffffffffff9390931683526bffffffffffffffffffffffff91909116602083015290a180f35b5080fd5b80fd5b6101e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610294576119b7366102c2565b6101843567ffffffffffffffff8111610294576104df916119df611a9492369060040161038e565b90611a8b6101a435926101c435926119f6866135d4565b611a6860a0880195865180611b22575b506114a060c08a0198895180611aee575b506114978382611a3b885173ffffffffffffffffffffffffffffffffffffffff1690565b8d8d611a5e60208c015173ffffffffffffffffffffffffffffffffffffffff1690565b9051915192613560565b90818752611a7a606089015160020b90565b608089015160020b908751926135e0565b90925252612cb8565b90604094929451948486957f07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a84665600080a285526fffffffffffffffffffffffffffffffff166020850152604084015260608301526080820190565b611b1c90611b13602088015173ffffffffffffffffffffffffffffffffffffffff1690565b30903390612572565b38611a17565b611b4490611b13855173ffffffffffffffffffffffffffffffffffffffff1690565b38611a06565b346102945760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945773ffffffffffffffffffffffffffffffffffffffff600435611b9a81610276565b611ba2612523565b168015611c115773ffffffffffffffffffffffffffffffffffffffff600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b346102945760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945760243560043560443567ffffffffffffffff811161029457611c9590369060040161038e565b9290927f0000000000000000000000000000000000000000000000000000000000000000604051917fcefa779900000000000000000000000000000000000000000000000000000000835260208360048173ffffffffffffffffffffffffffffffffffffffff86165afa908115611e1a57611d9c93600092611de5575b50611d1f9036908861205e565b6020815191012090603791605593604051927f3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000845260601b60148401527f5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000602884015260601b6038830152604c820152818120606c820152012090565b90611dbe73ffffffffffffffffffffffffffffffffffffffff83163314611e63565b6000831315611dd4575061002192309035612572565b915061002192602030910135612572565b611d1f919250611e0c9060203d602011611e13575b611e048183610214565b81019061203d565b9190611d12565b503d611dfa565b612052565b61171e611e3597611e2f846120fe565b83612197565b939293909192847f811d4760f1a92875eb76dbd3dc2359544b2f6a000ba5b78784c0b105b3469bd0600080a2565b1561029457565b9190811015611e7a5760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b35611eb3816103bc565b90565b600435611eb381610276565b35611eb381610276565b9392938260408201604083525260608101919260005b818110611f2f575050602080935081830391015282815201919060005b818110611f0c5750505090565b9091926020806001928635611f20816103bc565b15158152019401929101611eff565b90919260208060019273ffffffffffffffffffffffffffffffffffffffff8835611f5881610276565b16815201950191019392919093611ee2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908201809211611fa657565b611f6a565b67ffffffffffffffff81116101f357601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b3d15612010573d90611ff682611fab565b916120046040519384610214565b82523d6000602084013e565b606090565b91908203918211611fa657565b6024356bffffffffffffffffffffffff811681036102945790565b908160209103126102945751611eb381610276565b6040513d6000823e3d90fd5b92919261206a82611fab565b916120786040519384610214565b829481845281830111610294578281602093846000960137010152565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036120d457565b7f2f1ca35a0000000000000000000000000000000000000000000000000000000060005260046000fd5b33600052600360205260ff604060002054166121865761215373ffffffffffffffffffffffffffffffffffffffff917f000000000000000000000000000000000000000000000000000000000000000061403d565b16330361215c57565b7fc19f17a90000000000000000000000000000000000000000000000000000000060005260046000fd5b50565b3560ff811681036102945790565b907f0000000000000000000000000000000000000000000000000000000000000000906121c48383614079565b73ffffffffffffffffffffffffffffffffffffffff163014612255576121ea838361403d565b7fe985e9c5000000000000000000000000000000000000000000000000000000006000526004523060245260206000604481855afa1561225a5760005160006024526122555761026592813561224260208401612189565b9160606040850135940135943090613868565b505050565b3d6000803e3d6000fd5b93906123869561237794939261238c575b61235861233a612332602084359401356101408a01519461229587612f3f565b60a08101516040517f0000000000000000000000000000000000000000000000000000000000000000986122ff926fffffffffffffffffffffffffffffffff166122de836101d7565b8b835260208301526000604083015260006060830152608082015288613cdf565b505073ffffffffffffffffffffffffffffffffffffffff602081835116920151169061232a896138c4565b929091613560565b94909361403d565b73ffffffffffffffffffffffffffffffffffffffff16610120880152565b612361866135d4565b606087015160020b608088015160020b916135e0565b60c083015260a0820152612cb8565b90919293565b6123d381612399846138c4565b906123a386612f3f565b6123cd877f000000000000000000000000000000000000000000000000000000000000000061403d565b906139ac565b5050612275565b906124ab92916123ea8151612f3f565b6fffffffffffffffffffffffffffffffff6124d86124c360a06124926020870197858951166124f2575b612460885173ffffffffffffffffffffffffffffffffffffffff89511661245260208b015173ffffffffffffffffffffffffffffffffffffffff1690565b843591602086013593613d49565b9061248c8a517f000000000000000000000000000000000000000000000000000000000000000061403d565b896139ac565b999097516fffffffffffffffffffffffffffffffff1690565b9401516fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1690565b9116146124e457509190565b6124ee9051613d59565b9190565b61251c887f0000000000000000000000000000000000000000000000000000000000000000613cdf565b5050612414565b73ffffffffffffffffffffffffffffffffffffffff60005416330361254457565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b92919073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168073ffffffffffffffffffffffffffffffffffffffff8616148061268d575b612601575b5073ffffffffffffffffffffffffffffffffffffffff811630036125f8575061026592613e0a565b61026593613db1565b3484036126635760006004818681947fd0e30db00000000000000000000000000000000000000000000000000000000083525af115610294573073ffffffffffffffffffffffffffffffffffffffff83161461265d57386125d0565b50505050565b7fa11a990f0000000000000000000000000000000000000000000000000000000060005260046000fd5b503415156125cb565b908181106127a957806126a7575050565b670de0b6b3a7640000820291818115670de0b6b3a764000083860414170215612705575090045b60025460a01c106126db57565b7feab9763d0000000000000000000000000000000000000000000000000000000060005260046000fd5b81670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81840985811086019003920990826000038316928181111561279b5783900480600302600218808202600203028082026002030280820260020302808202600203028082026002030280910260020302936001848483030494806000030401921190030217026126ce565b63ae47f7026000526004601cfd5b7f5945ea560000000000000000000000000000000000000000000000000000000060005260046000fd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016908173ffffffffffffffffffffffffffffffffffffffff82161480612890575b15612884575060006024818080947f2e1a7d4d000000000000000000000000000000000000000000000000000000008252876004525af11561029457600080809338935af11561287657565b63b12d13eb6000526004601cfd5b61026593929150613e0a565b50600161282a565b9290919273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016918273ffffffffffffffffffffffffffffffffffffffff8316149081612941575b5015612884575060006024818080947f2e1a7d4d000000000000000000000000000000000000000000000000000000008252876004525af11561029457600080809338935af11561287657565b9050386128f4565b604051906060820182811067ffffffffffffffff8211176101f35760405260006040838281528260208201520152565b9796612b0995929394919661298c612949565b9361299e610a9f60408b015160020b90565b885173ffffffffffffffffffffffffffffffffffffffff8c81169591168c868203612c33575b5050505060208801996129eb8b5173ffffffffffffffffffffffffffffffffffffffff1690565b9073ffffffffffffffffffffffffffffffffffffffff8216858103612bd5575b505050505080612a4b612a32885173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b14612bc3575b80612a73612a328a5173ffffffffffffffffffffffffffffffffffffffff1690565b14612baf575b50612af3612a9b865173ffffffffffffffffffffffffffffffffffffffff1690565b612ad9612abc8a5173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff166020850152565b73ffffffffffffffffffffffffffffffffffffffff168252565b606085015160020b608086015160020b91613ee2565b9390918280612b87575b50508380612b22575b50509190565b612b43612b80925173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690614000565b3883612b1c565b612b43612ba8925173ffffffffffffffffffffffffffffffffffffffff1690565b3882612b13565b612bbc9193503090612e4c565b9138612a79565b9150612bcf3083612e4c565b91612a51565b8510828218810291821873ffffffffffffffffffffffffffffffffffffffff1660208801529497612c2895929091612c22911873ffffffffffffffffffffffffffffffffffffffff168752565b85613e55565b923880808080612a0b565b97612ca8612c8e612c70612cae979b612c5f8673ffffffffffffffffffffffffffffffffffffffff1690565b8b1095818118870290811892911890565b73ffffffffffffffffffffffffffffffffffffffff1660208c015290565b73ffffffffffffffffffffffffffffffffffffffff168952565b87613e55565b933880808c6129c4565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201805163b5007d1f825290937f000000000000000000000000000000000000000000000000000000000000000093608060006101847ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc840182895af115612e475760005194602051946040519460605198526040526000606052869380959697612d7f61012085015173ffffffffffffffffffffffffffffffffffffffff1690565b9160a08501519060c08601519184818310612dfc575b505050808210612da7575b5050505050565b612deb73ffffffffffffffffffffffffffffffffffffffff612de36020612df298015173ffffffffffffffffffffffffffffffffffffffff1690565b951685613f58565b03916127d3565b3880808080612da0565b612e3f92612e1e895173ffffffffffffffffffffffffffffffffffffffff1690565b92612deb73ffffffffffffffffffffffffffffffffffffffff8a1685613f58565b388084612d95565b3d6000fd5b6024600080926020947f70a082310000000000000000000000000000000000000000000000000000000083526004525afa156102945760005190565b9273ffffffffffffffffffffffffffffffffffffffff9192612ef2612f07968493612eda612eb68951612f3f565b94612ebf612949565b508951988787511699602088019a61232a8a8d5116926138c4565b90606086015160020b608087015160020b90876135e0565b60408701526020860152511691511691612fba565b9192909190565b60405190612f1b826101f8565b600060a0838281528260208201528260408201528260608201528260808201520152565b612f47612f0e565b50612f50612f0e565b907f99fbab880000000000000000000000000000000000000000000000000000000060005260045261010081602460007f00000000000000000000000000000000000000000000000000000000000000005afa15612fb657806101006040920182520190565b3d90fd5b90927f0000000000000000000000000000000000000000000000000000000000000000604051937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0840180519063219f5d1781526060600060c47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc890182885af11561225a5752600051946020519060405190604052809582979860208201519061306b604084015193518861403d565b85838297106130aa575b50505050808210613087575050505050565b612deb73ffffffffffffffffffffffffffffffffffffffff612df2961685613f58565b6130ce93612deb73ffffffffffffffffffffffffffffffffffffffff8b1685613f58565b38808481613075565b60405190610120820182811067ffffffffffffffff8211176101f3576040526000610100838281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152565b929493919094600095811580613558575b613543578260020b8160020b9080821291821592613519575b50811561350c575b506134e257843b156134d4576131736130d7565b9361317d866140b5565b604087015294859161318e88614e9e565b9261319889614ed6565b62ffffff16926131a78a614f0e565b94815260208101978289526060820196888852608083019685885260e084019687526101008401526131d8906140f1565b906131e2906140f1565b988160a08401528960c084015273ffffffffffffffffffffffffffffffffffffffff82169173ffffffffffffffffffffffffffffffffffffffff8b1697848b8a868a73ffffffffffffffffffffffffffffffffffffffff8b16906132459461444c565b9e8f97613253928992614498565b84519983519981519d8351981560001461339f5750508473ffffffffffffffffffffffffffffffffffffffff8b16106132fd575b5050505073ffffffffffffffffffffffffffffffffffffffff861610156132be575b50505050906132b8918561472c565b91030192565b6132b895949b506132ef91929398506132d6906149af565b976132e2858d8b614780565b9051620f42400390614b7e565b9103019790913880806132a9565b849f9e9d50889796959461333a61333373ffffffffffffffffffffffffffffffffffffffff9f9e9d9c9b51620f42400389614aec565b8c8c614934565b9d8e1610156133605750505050909180939495969798999a9b9c509b5b38808080613287565b8f9c9d9e9f94959b6133928b809d9e6133888c8e999f899d9e9f908a6132e2929b9a9b614780565b9003998a9761472c565b019c8d929a525252613357565b935080955073ffffffffffffffffffffffffffffffffffffffff8b9e989e9d999d161161342a575b5050505073ffffffffffffffffffffffffffffffffffffffff861611156133f8575b50505050906132b8918561476b565b6132b895949b5061341c9192939850613410906147e7565b976132e2858d8b6146de565b9103019790913880806133e9565b849f9e9d50889796959461346761346073ffffffffffffffffffffffffffffffffffffffff9f9e9d9c9b51620f42400389614aec565b8c8c614645565b9d8e161061348c5750505050909180939495969798999a9b9c509b5b388080806133c7565b8f9c9d9e9f94959b6134c78b9c9d6134bc6134af8e88999f9c9d9e8098996146de565b8d51620f42400390614b7e565b90039889948761476b565b019c8d949a525252613483565b6301ac05a56000526004601cfd5b7f30673a1b0000000000000000000000000000000000000000000000000000000060005260046000fd5b620d89e89150133861315f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761813915038613157565b50505050509050600090600090600090600090565b50831561313e565b959491939092956135718583612696565b61357b8784612696565b73ffffffffffffffffffffffffffffffffffffffff6002541691806135bf575b5050816135aa575b5050509190565b816135b7939603956127d3565b3880806135a3565b82816135cd939703966127d3565b388061359b565b6135dc612949565b5090565b969487876136545790506135f5959650613ee2565b9190925b8361362d575b8280613609575050565b612b43602061026593015173ffffffffffffffffffffffffffffffffffffffff1690565b61364f84612b43835173ffffffffffffffffffffffffffffffffffffffff1690565b6135ff565b92909493917f0000000000000000000000000000000000000000000000000000000000000000946136858587615386565b73ffffffffffffffffffffffffffffffffffffffff166136a4906140b5565b50916136af906140f1565b926136b9906140f1565b73ffffffffffffffffffffffffffffffffffffffff169273ffffffffffffffffffffffffffffffffffffffff169173ffffffffffffffffffffffffffffffffffffffff16906137079461444c565b92806020830196875173ffffffffffffffffffffffffffffffffffffffff1695845173ffffffffffffffffffffffffffffffffffffffff16908188180280911873ffffffffffffffffffffffffffffffffffffffff1696306137699089612e4c565b501891613775926152dd565b30825173ffffffffffffffffffffffffffffffffffffffff169061379891612e4c565b30875173ffffffffffffffffffffffffffffffffffffffff16906137bb91612e4c565b916137c68486615386565b94604282013560e81d91603f013560e81d946137e191615386565b73ffffffffffffffffffffffffffffffffffffffff16936138019461312d565b5091905061380f9287614d95565b503061381a91612e4c565b50825161383e90309073ffffffffffffffffffffffffffffffffffffffff16612e4c565b915161386190309073ffffffffffffffffffffffffffffffffffffffff16612e4c565b91926135f9565b9092956000969560c49588978895604051977f7ac2ff7b0000000000000000000000000000000000000000000000000000000089526004890152602488015260448701526064860152608485015260a48401525af11561225a57565b600060846040928351907ffc6f786500000000000000000000000000000000000000000000000000000000825260048201523060248201526fffffffffffffffffffffffffffffffff60448201526fffffffffffffffffffffffffffffffff6064820152827f00000000000000000000000000000000000000000000000000000000000000005af11561225a576000519060205190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610294570180359067ffffffffffffffff82116102945760200191813603831361029457565b949390926139b8612949565b906139d46139ca604089015160020b90565b60020b6040840152565b604083019373ffffffffffffffffffffffffffffffffffffffff6139f786611ec2565b16613b27575b505050613a2b613a24612a32875173ffffffffffffffffffffffffffffffffffffffff1690565b3090612e4c565b9260208601613a5a30613a55612a32845173ffffffffffffffffffffffffffffffffffffffff1690565b612e4c565b96613a6b30613a55612a3288611ec2565b6060850135116127a95785613af8575b5086613ac9575b50613a9330613a55612a3286611ec2565b9081613aa2575b505050509190565b613aba60c0613ab3613ac096611ec2565b9401611ea9565b92612898565b38808080613a9a565b51613af29073ffffffffffffffffffffffffffffffffffffffff168783613aba60c08701611ea9565b38613a82565b51613b219073ffffffffffffffffffffffffffffffffffffffff168684613aba60c08801611ea9565b38613a7b565b613b3085611ec2565b885173ffffffffffffffffffffffffffffffffffffffff9081169116819003613c40575b5050613b5f84611ec2565b91613b81602089015173ffffffffffffffffffffffffffffffffffffffff1690565b9273ffffffffffffffffffffffffffffffffffffffff8085169116146139fd57613c3792613c22613c08613bea613bba612a328a611ec2565b73ffffffffffffffffffffffffffffffffffffffff85161093613bdc8a611ec2565b808218860290811892911890565b73ffffffffffffffffffffffffffffffffffffffff16602086015290565b73ffffffffffffffffffffffffffffffffffffffff168352565b613c2f60a086018661395b565b939092613e55565b503880806139fd565b613cd791613cc1613ca7613c89613c59612a328b611ec2565b73ffffffffffffffffffffffffffffffffffffffff86161094613c7b8b611ec2565b808218870290811892911890565b73ffffffffffffffffffffffffffffffffffffffff16602089015290565b73ffffffffffffffffffffffffffffffffffffffff168652565b613cce608087018761395b565b92909186613e55565b503880613b54565b6040600060a47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0850193827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc865197630c49ccbe885201915af11561225a57526000519060205190565b9061232a610738959493926138c4565b7f42966c6800000000000000000000000000000000000000000000000000000000600052600452600080602481807f00000000000000000000000000000000000000000000000000000000000000005af11561225a57565b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615613dfc576000606052604052565b637939f4246000526004601cfd5b6010600060449260209582956014526034526fa9059cbb00000000000000000000000082525af13d15600160005114171615613e47576000603452565b6390b8ec186000526004601cfd5b939091928115600014613e9857505082613e92611eb3947f0000000000000000000000000000000000000000000000000000000000000000615386565b90614d95565b613ede93925090613a249173ffffffffffffffffffffffffffffffffffffffff808060208901511697511694858818028095181693613ed73086612e4c565b96186152dd565b0390565b91613f388585613f45939897969498613f1b877f0000000000000000000000000000000000000000000000000000000000000000615386565b9973ffffffffffffffffffffffffffffffffffffffff8b1661312d565b5097829589939250614d95565b9160000394858318028092180193180190565b6044601060008093602095601452816034526f095ea7b300000000000000000000000082525af13d15600160005114171615613f95576000603452565b633e3f8f736000526004601cfd5b60446010600080936020956014527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6034526f095ea7b300000000000000000000000082525af13d15600160005114171615613f95576000603452565b6010600060449260209582956014526034526f095ea7b300000000000000000000000082525af13d15600160005114171615613f95576000603452565b6024600080926020947f6352211e0000000000000000000000000000000000000000000000000000000083526004525afa1561225a5760005190565b6024600080926020947f081812fc0000000000000000000000000000000000000000000000000000000083526004525afa1561225a5760005190565b60006004816040937f3850c7bd0000000000000000000000000000000000000000000000000000000082525afa15610294576000519060205190565b60ff81901d80820118620d89e881116144345763ffffffff91600182167001fffcb933bd6fad37aa2d162d1a59400102700100000000000000000000000000000000189160028116614418575b600481166143fc575b600881166143e0575b601081166143c4575b602081166143a8575b6040811661438c575b60808116614370575b6101008116614354575b6102008116614338575b610400811661431c575b6108008116614300575b61100081166142e4575b61200081166142c8575b61400081166142ac575b6180008116614290575b620100008116614274575b620200008116614259575b62040000811661423e575b6208000016614225575b6000126141fe575b0160201c90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff046141f7565b6b048a170391f7dc42444e8fa290910260801c906141ef565b6d2216e584f5fa1ea926041bedfe9890920260801c916141e5565b916e5d6af8dedb81196699c329225ee6040260801c916141da565b916f09aa508b5b7a84e1c677de54f3e99bc90260801c916141cf565b916f31be135f97d08fd981231505542fcfa60260801c916141c4565b916f70d869a156d2a1b890bb3df62baf32f70260801c916141ba565b916fa9f746462d870fdf8a65dc1f90e061e50260801c916141b0565b916fd097f3bdfd2022b8845ad8f792aa58250260801c916141a6565b916fe7159475a2c29b7443b29c7fa6e889d90260801c9161419c565b916ff3392b0822b70005940c7a398e4b70f30260801c91614192565b916ff987a7253ac413176f2b074cf7815e540260801c91614188565b916ffcbe86c7900a88aedcffc83b479aa3a40260801c9161417e565b916ffe5dee046a99a2a811c461f1969c30530260801c91614174565b916fff2ea16466c96a3843ec78b326b528610260801c9161416b565b916fff973b41fa98c081472e6896dfb254c00260801c91614162565b916fffcb9843d60f6159c9db58835c9266440260801c91614159565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c91614150565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c91614147565b916ffff97272373d413259a46990580e213a0260801c9161413e565b6308c379a0600052602080526101546041526045601cfd5b919391838511614460575050505050600090565b828510614471575050505050600190565b614494936144828661448b9361528f565b9086039061528f565b93820390614cee565b1090565b9091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80006000935b6144e76000956040860193836144d7865160020b90565b61010089015160020b9088614f46565b9690936144f3836140f1565b91841593846000146145e657602089015173ffffffffffffffffffffffffffffffffffffffff169361454d6145388b516fffffffffffffffffffffffffffffffff1690565b958b60808101978460e08a5193015193615161565b92919260608d015101965103965b73ffffffffffffffffffffffffffffffffffffffff808416921682036145d7578b916145959160c060a08501519115940151918a8a61444c565b1515146145a9575050505050505050505050565b8692836145b6848c615250565b91031883018a51018a5260208a0152039052606086015260808501526144c0565b50505050505050505050505050565b602089015173ffffffffffffffffffffffffffffffffffffffff1661463361461e8b516fffffffffffffffffffffffffffffffff1690565b918b60608101938860e0865193015193615161565b96919251039560808c0151019661455b565b9082156146d85760601b90808302818482041461468c575b508104918201809211611fa65773ffffffffffffffffffffffffffffffffffffffff9180820615159104011690565b820182811061465d579192506146a3828285614cee565b92096146c25773ffffffffffffffffffffffffffffffffffffffff1690565b60010180612a325763ae47f7026000526004601cfd5b50905090565b918282108284180280808518931893146102945760019060601b9282810361471d73ffffffffffffffffffffffffffffffffffffffff83168287614cee565b94098284061715151691040190565b8181188183100280821893928118911461029457614767918373ffffffffffffffffffffffffffffffffffffffff831692039060601b614cee565b0490565b90611eb39291038060ff1d908101189061528f565b6001916c0100000000000000000000000091038060ff1d908101186147a5818561528f565b93091515160190565b81156147b8570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b80519060208101519160c08201519160e08101519081620f4240036060820151938060601b8688840282620f4240020487019104810395861115614926578260a085019182516148369161528f565b946148418a8561528f565b9060800151019151620f42400290614858916147ae565b614862908361528f565b81039661486e91614c2d565b93020401039060011b9160011b820281800201614916908070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b56201000083831c019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8080920410900390565b0160601b04818110908218021890565b63202368086000526004601cfd5b919073ffffffffffffffffffffffffffffffffffffffff918060a01c1560001461499f5760601b04915b16908101809111611fa657740100000000000000000000000000000000000000008110156102945773ffffffffffffffffffffffffffffffffffffffff1690565b906149a991614c2d565b9161495e565b80519060208101519160c08201519060e083015180620f424003928260601b90868204606087015101928760a08801614a146080614a06614a008b6149f586518c61528f565b96620f4240026147ae565b8a61528f565b9a0151998a0191518861528f565b81039889111561492657614adc96614a2d858a93614c2d565b930204900303940290620f42400204900360011b9260011b8302828002018070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b56201000083831c019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8080920410900390565b0160601b05818111908218021890565b81810291620f424081838504148315170215614b0d575050620f4240900490565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620f42409284098481108501900392099080620f4240111561279b57828211900360fa1b910360061c177fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c261390290565b90620f424082029181620f4240828504148215170215614b9e5750900490565b81620f42407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81840985811086019003920990826000038316928181111561279b57839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b908160601b91816c01000000000000000000000000828504148215170215614c555750900490565b816c010000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81840985811086019003920990826000038316928181111561279b57839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b81810292918115828504821417830215614d09575050900490565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8492840985811086019003920990826000038316928181111561279b57839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b939291909160009482614da85750505050565b604091929395507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06000910195865194606088528351907f128acb0800000000000000000000000000000000000000000000000000000000825230600483015285602483015260448201528473fffd8963efd1fc6a506488495d951d53639afb810273fffd8963efd1fc6a506488495d951d5263988d2518606482015260a060848201528273ffffffffffffffffffffffffffffffffffffffff60c48a51602081018c8160a488019160045afa500193165af160403d14161561225a57600051908160205118021860000392523880808061265d565b60006004816020937f1a6865020000000000000000000000000000000000000000000000000000000082525afa156102945760005190565b60006004816020937fddca3f430000000000000000000000000000000000000000000000000000000082525afa156102945760005190565b60006004816020937fd0c93a7c0000000000000000000000000000000000000000000000000000000082525afa156102945760005190565b9192909493948360008183071291050360009160001461508a57600881901d915060ff169390809560010b8160010b1460001461507a57505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600282951b0116905b811561503e57507f0706060506020504060203020504030106050205030304010505030400000000601f6f8421084210842108cc6318c6db6d54be6fffffffffffffffffffffffffffffffff841160071b84811c67ffffffffffffffff1060061b1784811c63ffffffff1060051b1784811c61ffff1060041b1784811c60ff1060031b1793841c1c161a175b8360081b010292565b925050917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160010b9161507283836154d6565b918290614fa9565b6150859150826154d6565b614f7f565b600101600281900b60081d9060ff169490809660010b8160010b146000146151505750905b600182951b900316905b8115615133575061512e9080600003167e1f0d1e100c1d070f090b19131c1706010e11080a1a141802121b1503160405601f826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1792831c63d76453e004161a1790565b615035565b9250509160010160010b9161514883836154d6565b9182906150b9565b61515b9150836154d6565b906150af565b919094929473ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff8416101594620f424003906151a78288614aec565b861561523f576151b88486846146de565b975b888210615208575050958691620f42406151d5828285614cee565b92096151f6575b945b156151ed5791611eb39261476b565b611eb39261472c565b6001915001801561279b5785906151dc565b969750915050821582151761029457851561522f57615228908284614645565b80956151de565b61523a908284614934565b615228565b61524a848387614780565b976151ba565b6024600080926040947ff30dba9300000000000000000000000000000000000000000000000000000000835260020b6004525afa156102945760205190565b818102917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff910981811082019003806c01000000000000000000000000111561279b5760a01b9060601c1790565b9190604681013560601c917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92605a83013560601c910181600052600160205261532e60ff6040600020541615151590565b61535c576000928380936153428789613fa3565b83606e604051940184375af11561225a5761026591613f58565b7f14e99d060000000000000000000000000000000000000000000000000000000060005260046000fd5b604051917fcefa779900000000000000000000000000000000000000000000000000000000835260208360048173ffffffffffffffffffffffffffffffffffffffff86165afa908115611e1a57611eb3936000926154b5575b506040516040602082019273ffffffffffffffffffffffffffffffffffffffff815116845273ffffffffffffffffffffffffffffffffffffffff60208201511682840152015160020b60608201526060815261543c608082610214565b51902090603791605593604051927f3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000845260601b60148401527f5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000602884015260601b6038830152604c820152818120606c820152012090565b6154cf91925060203d602011611e1357611e048183610214565b90386153df565b6024600080926020947f5339c29600000000000000000000000000000000000000000000000000000000835260010b6004525afa15610294576000519056fea164736f6c634300081a000a";

type SlipStreamAutomanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SlipStreamAutomanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SlipStreamAutoman__factory extends ContractFactory {
  constructor(...args: SlipStreamAutomanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    nonfungiblePositionManager: string,
    owner_: string,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<SlipStreamAutoman> {
    return super.deploy(
      nonfungiblePositionManager,
      owner_,
      overrides || {}
    ) as Promise<SlipStreamAutoman>;
  }
  override getDeployTransaction(
    nonfungiblePositionManager: string,
    owner_: string,
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      nonfungiblePositionManager,
      owner_,
      overrides || {}
    );
  }
  override attach(address: string): SlipStreamAutoman {
    return super.attach(address) as SlipStreamAutoman;
  }
  override connect(signer: Signer): SlipStreamAutoman__factory {
    return super.connect(signer) as SlipStreamAutoman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SlipStreamAutomanInterface {
    return new utils.Interface(_abi) as SlipStreamAutomanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SlipStreamAutoman {
    return new Contract(address, _abi, signerOrProvider) as SlipStreamAutoman;
  }
}
