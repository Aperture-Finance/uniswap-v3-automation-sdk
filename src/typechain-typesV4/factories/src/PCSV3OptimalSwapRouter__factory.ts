/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PCSV3OptimalSwapRouter,
  PCSV3OptimalSwapRouterInterface,
} from "../../src/PCSV3OptimalSwapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPCSV3NonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "Invalid_Tick_Range",
    type: "error",
  },
  {
    inputs: [],
    name: "MismatchETH",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowlistedRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWETH9",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "SetAllowlistedRouters",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAllowListedRouter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "npm",
    outputs: [
      {
        internalType: "contract ICommonNonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "pancakeV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "setAllowlistedRouters",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0806040526040816128a9803803809161001a82856101ed565b83398101031261017d5780516001600160a01b038116919082900361017d576001600160a01b039061004e90602001610226565b1680156101d757600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360808290526312a9293f60e21b8152602081600481855afa90811561018a57600091610196575b506001600160a01b031660a052604051631abe729160e31b815290602090829060049082905afa90811561018a5760009161014b575b5060c05260405161266e908161023b82396080518181816107a101526109ba015260a0518181816103d801528181610ac50152610d75015260c05181818161019e015281816105d70152610bec0152f35b90506020813d602011610182575b81610166602093836101ed565b8101031261017d5761017790610226565b386100fa565b600080fd5b3d9150610159565b6040513d6000823e3d90fd5b90506020813d6020116101cf575b816101b1602093836101ed565b8101031261017d576004916101c7602092610226565b9150916100c4565b3d91506101a4565b631e4fbdf760e01b600052600060045260246000fd5b601f909101601f19168101906001600160401b0382119082101761021057604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361017d5756fe60a080604052600436101561042a575b5036156103c157346103bc5760003560601c60143560601c9060313560f81c9060323560601c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa63601838584180285189061008b6100833373ffffffffffffffffffffffffffffffffffffffff8516610ed0565b303385610f0c565b826014527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6034526f095ea7b3000000000000000000000000600052602060006044601082865af13d156001600051141716156103ae57600080918160345260405181605a82378260463560601c5af11561035f576044601060008093602095601452816034526f095ea7b300000000000000000000000082525af13d156001600051141716156103ae5760006034526101453082610ed0565b61014f3085610ed0565b90604051906060820182811067ffffffffffffffff82111761037f5760405283825285602083015260283560e81c60408301526040519474ff00000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000017600052606083206020527f6ce8eb472fa82df5469c6ab6d485f17c3ad13c8cd7af59b3d4a8026c5ce0f7e260405273ffffffffffffffffffffffffffffffffffffffff6055600b20169560405260001461036957610236816102203389610ed0565b8501905b602e3560e81d602b3560e81d89610f65565b50506080519560009382610285575b50506000039485831802809218019318019180610273575b50508061026657005b610271913390611c09565b005b61027e913390611c09565b388061025d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09194500192604060008551926060875282517f128acb080000000000000000000000000000000000000000000000000000000081523060048201528a60248201528560448201528a73fffd8963efd1fc6a506488495d951d53639afb810273fffd8963efd1fc6a506488495d951d5263988d2518606482015260a060848201528260c489516020810160a48501818d60045afa5001925af160403d14161561035f57600051878160205118021860000393523880610245565b3d6000803e3d6000fd5b6102366103763386610ed0565b82018490610224565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b633e3f8f736000526004601cfd5b600080fd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361040057005b7f2f1ca35a0000000000000000000000000000000000000000000000000000000060005260046000fd5b60003560e01c90816323a69e7514610b53575080634095c64614610ae95780634aa4a4fc14610a7a578063715018a6146109de5780637f1e9ef61461096f5780638da5cb5b1461091d57806391f6e9b2146105fb578063d5f394881461058c5763f2fde38b1461049a573861000f565b346103bc5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc5773ffffffffffffffffffffffffffffffffffffffff6104e6610c87565b6104ee610e81565b16801561055d5773ffffffffffffffffffffffffffffffffffffffff600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc5760043567ffffffffffffffff81116103bc57610645903690600401610caa565b60243567ffffffffffffffff81116103bc57610665903690600401610caa565b909261066f610e81565b8183036103bc579160005b818110610742575060405192816040850160408652526060840190916000905b80821061070b57505060209150838103828501528281520192906000905b8082106106e7577fe4d045717648b4a964b22e91953fd95d48e089e38c87021016e48ddd32387eee84860385a1005b9091938435908115158092036103bc576020816001938293520195019201906106b8565b909183359073ffffffffffffffffffffffffffffffffffffffff82168092036103bc5790815260209384019301916001019061069a565b61074f8183869496610cdb565b359073ffffffffffffffffffffffffffffffffffffffff8216918281036103bc5761077b828689610cdb565b3580151581036103bc57156108e25773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168084146108b35760009182918260405160208101927f095ea7b3000000000000000000000000000000000000000000000000000000008452602482015281604482015260448152610813606482610d1a565b51925af13d156108dd573d67ffffffffffffffff811161037f576040519061086360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610d1a565b8152600060203d92013e5b6108b357600191600052816020526040600020827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790555b0192909261067a565b7f466d7fef0000000000000000000000000000000000000000000000000000000060005260046000fd5b61086e565b506001916000528160205260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690556108aa565b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57610a15610e81565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103bc5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc5773ffffffffffffffffffffffffffffffffffffffff610b35610c87565b166000526001602052602060ff604060002054166040519015158152f35b346103bc5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc576004356044359167ffffffffffffffff83116103bc57366023840112156103bc5782600401359267ffffffffffffffff84116103bc57602481019360243691830101116103bc57606084600037606060002074ff00000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000176000526020527f6ce8eb472fa82df5469c6ab6d485f17c3ad13c8cd7af59b3d4a8026c5ce0f7e260405273ffffffffffffffffffffffffffffffffffffffff6055600b2016916040528133036103bc576000831315610c72575061027192309035610d5b565b61027193506024359250309060440135610d5b565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103bc57565b9181601f840112156103bc5782359167ffffffffffffffff83116103bc576020808501948460051b0101116103bc57565b9190811015610ceb5760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761037f57604052565b92919073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168073ffffffffffffffffffffffffffffffffffffffff86161480610e78575b610dec575b5073ffffffffffffffffffffffffffffffffffffffff81163003610de35750610de192611c09565b565b610de193610f0c565b348403610e4e5760006004818681947fd0e30db00000000000000000000000000000000000000000000000000000000083525af1156103bc573073ffffffffffffffffffffffffffffffffffffffff831614610e485738610db9565b50505050565b7fa11a990f0000000000000000000000000000000000000000000000000000000060005260046000fd5b50341515610db4565b73ffffffffffffffffffffffffffffffffffffffff600054163303610ea257565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b6024600080926020947f70a082310000000000000000000000000000000000000000000000000000000083526004525afa156103bc5760005190565b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615610f57576000606052604052565b637939f4246000526004601cfd5b600060808190529594919391821580611c01575b611bea578360020b8560020b9080821291821592611bc0575b508115611bb3575b50611b8957813b15611b7b57604051610120810181811067ffffffffffffffff82111761037f576040526000815260006020820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e082015260006101008201527f3850c7bd0000000000000000000000000000000000000000000000000000000060005260406000600481865afa156103bc576000519260205196849760408401527f1a6865020000000000000000000000000000000000000000000000000000000060005260206000600481855afa156103bc57600051907fddca3f430000000000000000000000000000000000000000000000000000000060005260206000600481865afa156103bc5762ffffff60005116907fd0c93a7c0000000000000000000000000000000000000000000000000000000060005260206000600481875afa156103bc5761111f926111199260005191875288602088015289606088015287608088015260e0870152610100860152611c54565b96611c54565b938660a08401528460c084015261117b73ffffffffffffffffffffffffffffffffffffffff861673ffffffffffffffffffffffffffffffffffffffff891673ffffffffffffffffffffffffffffffffffffffff8416878a611fae565b608052507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000906000905b600084604081015160020b9461010082015160020b94608051600014611a9f5783868807128688050360081d9160010b8260010b14600014611a8f575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260ff8399898881830712910503161b01165b8015611a51577f07060605060205040602030205040301060502050303040105050304000000006f8421084210842108cc6318c6db6d54be826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1783811c61ffff1060041b1783811c60ff1060031b1792831c1c601f161a17955b9481966112b682828560081b0102611c54565b94608051156000146119f55761130673ffffffffffffffffffffffffffffffffffffffff6020870151166fffffffffffffffffffffffffffffffff8751166080880151908960e08a01519361220f565b92919690969260608201510196608082015103975b73ffffffffffffffffffffffffffffffffffffffff808516911681036119e4576113569060a083015160c06080511515940151918b8b611fae565b15151461196c57505050505050505050505b805192602082015192606083015196608084015192608051156000146116a2575073ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff8616106115a8575b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff85161015611405575b505050906113ff918561211e565b91030191565b9196509291975085519286602081015160c08201519560e08301519081620f424003908060601b8481046060870151019061144460a0880151836125d4565b9a61145d6114578689620f42400261215d565b856125d4565b9561147460a060808b01519889019a0151866125d4565b89039687111561159a576113ff9c86611543966114948561158d9d61246c565b930204900303940290620f42400204900360011b9260011b8302828002018070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b56201000083831c019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8080920410900390565b0160601b058181119082180218978a89038060ff1d908101189060016c0100000000000000000000000060e0611579858a6125d4565b930151620f424003938809151516016123bd565b91030196909138806113f1565b63202368086000526004601cfd5b9997506115c86115c160e0850151620f4240038461232b565b8686612196565b9773ffffffffffffffffffffffffffffffffffffffff8b1673ffffffffffffffffffffffffffffffffffffffff8a161060001461161f575073ffffffffffffffffffffffffffffffffffffffff819a5b90506113bd565b99939185856116719261166982879c969c038060ff1d9081011861164381866125d4565b60016c0100000000000000000000000060e08c0151620f424003938809151516016123bd565b90039461211e565b019573ffffffffffffffffffffffffffffffffffffffff848181166020860152886060860152836080860152611618565b905073ffffffffffffffffffffffffffffffffffffffff819893989792971673ffffffffffffffffffffffffffffffffffffffff86161161189f575b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff8516111561172a575b505050906113ff9185038060ff1d90810118906125d4565b9196509291975085519260208701519360c08801519460e08901519182620f4240039260608b0151908260601b908985870283620f424002048401920482039283111561159a5784868e956117c56113ff9d6117bd6117b76118929c60a08c60806117a661179f6118699e85850151906125d4565b9b8a6125d4565b910151019c0151620f42400261215d565b846125d4565b89039861246c565b93020401039160011b9260011b8302828002018070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b56201000083831c019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8080920410900390565b0160601b0481811090821802189760e0611884868d8c6120d0565b910151620f424003906123bd565b9103019690913880611712565b9997506118bf6118b860e0850151620f4240038461232b565b8686612036565b9773ffffffffffffffffffffffffffffffffffffffff8b8116908a1610611900575073ffffffffffffffffffffffffffffffffffffffff819a5b90506116de565b99939161193b906119286119188886899c969c6120d0565b60e0870151620f424003906123bd565b90039285038060ff1d90810118866125d4565b019573ffffffffffffffffffffffffffffffffffffffff8481811660208601528360608601528860808601526118f9565b7ff30dba9300000000000000000000000000000000000000000000000000000000815283838660081b010260020b6004526040816024818b5afa156119e15760205190608051900318608051018a51018a5260208a01526080519260081b0102036040870152606086015260808501526111a5565b80fd5b505050505050505050505050611368565b93611a3a73ffffffffffffffffffffffffffffffffffffffff6020830151166fffffffffffffffffffffffffffffffff8351166060840151908960e08601519361220f565b96919290606082015103966080820151019761131b565b50919450507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160010b611a858183612622565b9390859085611217565b50611a9a8185612622565b6111e2565b60018487890712878905030160020b60081d9160010b8260010b14600014611b6b575b60018082988887818307129105030160ff161b8403165b8015611b4b57808403167e1f0d1e100c1d070f090b19131c1706010e11080a1a141802121b1503160405601f826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1792831c63d76453e004161a17956112a3565b50905060019194500160010b611b618183612622565b9390859085611ad9565b50611b768185612622565b611ac2565b6301ac05a56000526004601cfd5b7f30673a1b0000000000000000000000000000000000000000000000000000000060005260046000fd5b620d89e891501338610f9a565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761813915038610f92565b505050505090506000906000906000608052600090565b508015610f79565b6010600060449260209582956014526034526fa9059cbb00000000000000000000000082525af13d15600160005114171615611c46576000603452565b6390b8ec186000526004601cfd5b8060ff1d81810118620d89e88111611f965763ffffffff91600182167001fffcb933bd6fad37aa2d162d1a59400102700100000000000000000000000000000000189160028116611f7a575b60048116611f5e575b60088116611f42575b60108116611f26575b60208116611f0a575b60408116611eee575b60808116611ed2575b6101008116611eb6575b6102008116611e9a575b6104008116611e7e575b6108008116611e62575b6110008116611e46575b6120008116611e2a575b6140008116611e0e575b6180008116611df2575b620100008116611dd6575b620200008116611dbb575b620400008116611da0575b6208000016611d87575b600012611d60575b0160201c90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04611d59565b6b048a170391f7dc42444e8fa290910260801c90611d51565b6d2216e584f5fa1ea926041bedfe9890920260801c91611d47565b916e5d6af8dedb81196699c329225ee6040260801c91611d3c565b916f09aa508b5b7a84e1c677de54f3e99bc90260801c91611d31565b916f31be135f97d08fd981231505542fcfa60260801c91611d26565b916f70d869a156d2a1b890bb3df62baf32f70260801c91611d1c565b916fa9f746462d870fdf8a65dc1f90e061e50260801c91611d12565b916fd097f3bdfd2022b8845ad8f792aa58250260801c91611d08565b916fe7159475a2c29b7443b29c7fa6e889d90260801c91611cfe565b916ff3392b0822b70005940c7a398e4b70f30260801c91611cf4565b916ff987a7253ac413176f2b074cf7815e540260801c91611cea565b916ffcbe86c7900a88aedcffc83b479aa3a40260801c91611ce0565b916ffe5dee046a99a2a811c461f1969c30530260801c91611cd6565b916fff2ea16466c96a3843ec78b326b528610260801c91611ccd565b916fff973b41fa98c081472e6896dfb254c00260801c91611cc4565b916fffcb9843d60f6159c9db58835c9266440260801c91611cbb565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c91611cb2565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c91611ca9565b916ffff97272373d413259a46990580e213a0260801c91611ca0565b6308c379a0600052602080526101546041526045601cfd5b919391838511611fc2575050505050600090565b828510611fd3575050505050600190565b611ff693611fe486611fed936125d4565b908603906125d4565b9382039061252d565b1090565b9190820180921161200757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919081156120cb5760601b91808202818382041461207e575b5082916120729173ffffffffffffffffffffffffffffffffffffffff9404611ffa565b80820615159104011690565b830183811061204f57915061209482828561252d565b92096120b4575b73ffffffffffffffffffffffffffffffffffffffff1690565b6001018061209b575b63ae47f7026000526004601cfd5b505090565b918282108284180280808518931893146103bc5760019060601b9282810361210f73ffffffffffffffffffffffffffffffffffffffff8316828761252d565b94098284061715151691040190565b818118818310028082189392811891146103bc57612159918373ffffffffffffffffffffffffffffffffffffffff831692039060601b61252d565b0490565b8115612167570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b9073ffffffffffffffffffffffffffffffffffffffff906121c9938060a01c156000146121ff5760601b04915b16611ffa565b740100000000000000000000000000000000000000008110156103bc5773ffffffffffffffffffffffffffffffffffffffff1690565b906122099161246c565b916121c3565b919094929473ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff8416101594620f42400390612255828861232b565b86156122f9576122668486846120d0565b975b8882106122c2575050958691620f424061228282846123bd565b92096122b0575b945b156122a757916122a492038060ff1d90810118906125d4565b90565b6122a49261211e565b600191500180156120bd578590612289565b96975091505082158215176103bc5785156122e9576122e2908284612036565b809561228b565b6122f4908284612196565b6122e2565b8185038060ff1d9081011860016c0100000000000000000000000061231e83886125d4565b9287091515160197612268565b81810291620f42408183850414831517021561234c575050620f4240900490565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620f42409284098481108501900392099080620f424011156120bd57828211900360fa1b910360061c177fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c261390290565b90620f424082029181620f42408285041482151702156123dd5750900490565b81620f42407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184098581108601900392099082600003831692818111156120bd57839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b908160601b91816c010000000000000000000000008285041482151702156124945750900490565b816c010000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184098581108601900392099082600003831692818111156120bd57839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b81810292918115828504821417830215612548575050900490565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff849284098581108601900392099082600003831692818111156120bd57839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b818102917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff910981811082019003806c0100000000000000000000000011156120bd5760a01b9060601c1790565b6024600080926020947f5339c29600000000000000000000000000000000000000000000000000000000835260010b6004525afa156103bc576000519056fea164736f6c634300081a000a";

type PCSV3OptimalSwapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PCSV3OptimalSwapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PCSV3OptimalSwapRouter__factory extends ContractFactory {
  constructor(...args: PCSV3OptimalSwapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    owner_: string,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<PCSV3OptimalSwapRouter> {
    return super.deploy(
      npm,
      owner_,
      overrides || {}
    ) as Promise<PCSV3OptimalSwapRouter>;
  }
  override getDeployTransaction(
    npm: string,
    owner_: string,
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, owner_, overrides || {});
  }
  override attach(address: string): PCSV3OptimalSwapRouter {
    return super.attach(address) as PCSV3OptimalSwapRouter;
  }
  override connect(signer: Signer): PCSV3OptimalSwapRouter__factory {
    return super.connect(signer) as PCSV3OptimalSwapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PCSV3OptimalSwapRouterInterface {
    return new utils.Interface(_abi) as PCSV3OptimalSwapRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PCSV3OptimalSwapRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PCSV3OptimalSwapRouter;
  }
}
