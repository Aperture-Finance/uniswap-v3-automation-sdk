/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniV3OptimalSwapRouter,
  UniV3OptimalSwapRouterInterface,
} from "../../src/UniV3OptimalSwapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICommonNonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "Invalid_Tick_Range",
    type: "error",
  },
  {
    inputs: [],
    name: "MismatchETH",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowlistedRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWETH9",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "SetAllowlistedRouters",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAllowListedRouter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "npm",
    outputs: [
      {
        internalType: "contract ICommonNonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "setAllowlistedRouters",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0806040526040816128a6803803809161001a82856101eb565b83398101031261017b5780516001600160a01b0381169182820361017b576001600160a01b039061004d90602001610224565b169081156101d557600080546001600160a01b031981168417825560405193916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36080526312a9293f60e21b8152602081600481855afa90811561018857600091610194575b506001600160a01b031660a05260405163c45a015560e01b815290602090829060049082905afa90811561018857600091610149575b5060c05260405161266d908161023982396080518181816108d80152610af1015260a0518181816103d801528181610bfc0152610dc3015260c05181818161019e01528181610536015261070e0152f35b90506020813d602011610180575b81610164602093836101eb565b8101031261017b5761017590610224565b386100f8565b600080fd5b3d9150610157565b6040513d6000823e3d90fd5b90506020813d6020116101cd575b816101af602093836101eb565b8101031261017b576004916101c5602092610224565b9150916100c2565b3d91506101a2565b631e4fbdf760e01b600052600060045260246000fd5b601f909101601f19168101906001600160401b0382119082101761020e57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361017b5756fe60a080604052600436101561042a575b5036156103c157346103bc5760003560601c60143560601c9060313560f81c9060323560601c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa63601838584180285189061008b6100833373ffffffffffffffffffffffffffffffffffffffff8516610ecf565b303385610f0b565b826014527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6034526f095ea7b3000000000000000000000000600052602060006044601082865af13d156001600051141716156103ae57600080918160345260405181605a82378260463560601c5af11561035f576044601060008093602095601452816034526f095ea7b300000000000000000000000082525af13d156001600051141716156103ae5760006034526101453082610ecf565b61014f3085610ecf565b90604051906060820182811067ffffffffffffffff82111761037f5760405283825285602083015260283560e81c60408301526040519474ff00000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000017600052606083206020527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460405273ffffffffffffffffffffffffffffffffffffffff6055600b20169560405260001461036957610236816102203389610ecf565b8501905b602e3560e81d602b3560e81d89610f64565b50506080519560009382610285575b50506000039485831802809218019318019180610273575b50508061026657005b610271913390611c08565b005b61027e913390611c08565b388061025d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09194500192604060008551926060875282517f128acb080000000000000000000000000000000000000000000000000000000081523060048201528a60248201528560448201528a73fffd8963efd1fc6a506488495d951d53639afb810273fffd8963efd1fc6a506488495d951d5263988d2518606482015260a060848201528260c489516020810160a48501818d60045afa5001925af160403d14161561035f57600051878160205118021860000393523880610245565b3d6000803e3d6000fd5b6102366103763386610ecf565b82018490610224565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b633e3f8f736000526004601cfd5b600080fd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361040057005b7f2f1ca35a0000000000000000000000000000000000000000000000000000000060005260046000fd5b60003560e01c9081634095c64614610c20575080634aa4a4fc14610bb1578063715018a614610b155780637f1e9ef614610aa65780638da5cb5b14610a5457806391f6e9b214610732578063c45a0155146106c3578063f2fde38b146105d15763fa461e331461049a573861000f565b346103bc5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc5760443560043567ffffffffffffffff82116103bc57366023830112156103bc5781600401359167ffffffffffffffff83116103bc57602481019260243691830101116103bc5760405190606084600037606060002074ff00000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000176000526020527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460405273ffffffffffffffffffffffffffffffffffffffff6055600b2016916040528133036103bc5760008313156105bc575061027192309035610da9565b61027193506024359250309060440135610da9565b346103bc5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc5773ffffffffffffffffffffffffffffffffffffffff61061d610c86565b610625610d5a565b1680156106945773ffffffffffffffffffffffffffffffffffffffff600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b7f1e4fbdf700000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc5760043567ffffffffffffffff81116103bc5761077c903690600401610ca9565b60243567ffffffffffffffff81116103bc5761079c903690600401610ca9565b90926107a6610d5a565b8183036103bc579160005b818110610879575060405192816040850160408652526060840190916000905b80821061084257505060209150838103828501528281520192906000905b80821061081e577fe4d045717648b4a964b22e91953fd95d48e089e38c87021016e48ddd32387eee84860385a1005b9091938435908115158092036103bc576020816001938293520195019201906107ef565b909183359073ffffffffffffffffffffffffffffffffffffffff82168092036103bc579081526020938401930191600101906107d1565b6108868183869496610cda565b359073ffffffffffffffffffffffffffffffffffffffff8216918281036103bc576108b2828689610cda565b3580151581036103bc5715610a195773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168084146109ea5760009182918260405160208101927f095ea7b300000000000000000000000000000000000000000000000000000000845260248201528160448201526044815261094a606482610d19565b51925af13d15610a14573d67ffffffffffffffff811161037f576040519061099a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610d19565b8152600060203d92013e5b6109ea57600191600052816020526040600020827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790555b019290926107b1565b7f466d7fef0000000000000000000000000000000000000000000000000000000060005260046000fd5b6109a5565b506001916000528160205260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690556109e1565b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57610b4c610d5a565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103bc5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc5760209073ffffffffffffffffffffffffffffffffffffffff610c6f610c86565b166000526001825260ff6040600020541615158152f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103bc57565b9181601f840112156103bc5782359167ffffffffffffffff83116103bc576020808501948460051b0101116103bc57565b9190811015610cea5760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761037f57604052565b73ffffffffffffffffffffffffffffffffffffffff600054163303610d7b57565b7f118cdaa7000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b92919073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168073ffffffffffffffffffffffffffffffffffffffff86161480610ec6575b610e3a575b5073ffffffffffffffffffffffffffffffffffffffff81163003610e315750610e2f92611c08565b565b610e2f93610f0b565b348403610e9c5760006004818681947fd0e30db00000000000000000000000000000000000000000000000000000000083525af1156103bc573073ffffffffffffffffffffffffffffffffffffffff831614610e965738610e07565b50505050565b7fa11a990f0000000000000000000000000000000000000000000000000000000060005260046000fd5b50341515610e02565b6024600080926020947f70a082310000000000000000000000000000000000000000000000000000000083526004525afa156103bc5760005190565b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615610f56576000606052604052565b637939f4246000526004601cfd5b600060808190529594919391821580611c00575b611be9578360020b8560020b9080821291821592611bbf575b508115611bb2575b50611b8857813b15611b7a57604051610120810181811067ffffffffffffffff82111761037f576040526000815260006020820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e082015260006101008201527f3850c7bd0000000000000000000000000000000000000000000000000000000060005260406000600481865afa156103bc576000519260205196849760408401527f1a6865020000000000000000000000000000000000000000000000000000000060005260206000600481855afa156103bc57600051907fddca3f430000000000000000000000000000000000000000000000000000000060005260206000600481865afa156103bc5762ffffff60005116907fd0c93a7c0000000000000000000000000000000000000000000000000000000060005260206000600481875afa156103bc5761111e926111189260005191875288602088015289606088015287608088015260e0870152610100860152611c53565b96611c53565b938660a08401528460c084015261117a73ffffffffffffffffffffffffffffffffffffffff861673ffffffffffffffffffffffffffffffffffffffff891673ffffffffffffffffffffffffffffffffffffffff8416878a611fad565b608052507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000906000905b600084604081015160020b9461010082015160020b94608051600014611a9e5783868807128688050360081d9160010b8260010b14600014611a8e575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260ff8399898881830712910503161b01165b8015611a50577f07060605060205040602030205040301060502050303040105050304000000006f8421084210842108cc6318c6db6d54be826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1783811c61ffff1060041b1783811c60ff1060031b1792831c1c601f161a17955b9481966112b582828560081b0102611c53565b94608051156000146119f45761130573ffffffffffffffffffffffffffffffffffffffff6020870151166fffffffffffffffffffffffffffffffff8751166080880151908960e08a01519361220e565b92919690969260608201510196608082015103975b73ffffffffffffffffffffffffffffffffffffffff808516911681036119e3576113559060a083015160c06080511515940151918b8b611fad565b15151461196b57505050505050505050505b805192602082015192606083015196608084015192608051156000146116a1575073ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff8616106115a7575b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff85161015611404575b505050906113fe918561211d565b91030191565b9196509291975085519286602081015160c08201519560e08301519081620f424003908060601b8481046060870151019061144360a0880151836125d3565b9a61145c6114568689620f42400261215c565b856125d3565b9561147360a060808b01519889019a0151866125d3565b890396871115611599576113fe9c86611542966114938561158c9d61246b565b930204900303940290620f42400204900360011b9260011b8302828002018070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b56201000083831c019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8080920410900390565b0160601b058181119082180218978a89038060ff1d908101189060016c0100000000000000000000000060e0611578858a6125d3565b930151620f424003938809151516016123bc565b91030196909138806113f0565b63202368086000526004601cfd5b9997506115c76115c060e0850151620f4240038461232a565b8686612195565b9773ffffffffffffffffffffffffffffffffffffffff8b1673ffffffffffffffffffffffffffffffffffffffff8a161060001461161e575073ffffffffffffffffffffffffffffffffffffffff819a5b90506113bc565b99939185856116709261166882879c969c038060ff1d9081011861164281866125d3565b60016c0100000000000000000000000060e08c0151620f424003938809151516016123bc565b90039461211d565b019573ffffffffffffffffffffffffffffffffffffffff848181166020860152886060860152836080860152611617565b905073ffffffffffffffffffffffffffffffffffffffff819893989792971673ffffffffffffffffffffffffffffffffffffffff86161161189e575b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff85161115611729575b505050906113fe9185038060ff1d90810118906125d3565b9196509291975085519260208701519360c08801519460e08901519182620f4240039260608b0151908260601b908985870283620f42400204840192048203928311156115995784868e956117c46113fe9d6117bc6117b66118919c60a08c60806117a561179e6118689e85850151906125d3565b9b8a6125d3565b910151019c0151620f42400261215c565b846125d3565b89039861246b565b93020401039160011b9260011b8302828002018070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b56201000083831c019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8080920410900390565b0160601b0481811090821802189760e0611883868d8c6120cf565b910151620f424003906123bc565b9103019690913880611711565b9997506118be6118b760e0850151620f4240038461232a565b8686612035565b9773ffffffffffffffffffffffffffffffffffffffff8b8116908a16106118ff575073ffffffffffffffffffffffffffffffffffffffff819a5b90506116dd565b99939161193a906119276119178886899c969c6120cf565b60e0870151620f424003906123bc565b90039285038060ff1d90810118866125d3565b019573ffffffffffffffffffffffffffffffffffffffff8481811660208601528360608601528860808601526118f8565b7ff30dba9300000000000000000000000000000000000000000000000000000000815283838660081b010260020b6004526040816024818b5afa156119e05760205190608051900318608051018a51018a5260208a01526080519260081b0102036040870152606086015260808501526111a4565b80fd5b505050505050505050505050611367565b93611a3973ffffffffffffffffffffffffffffffffffffffff6020830151166fffffffffffffffffffffffffffffffff8351166060840151908960e08601519361220e565b96919290606082015103966080820151019761131a565b50919450507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160010b611a848183612621565b9390859085611216565b50611a998185612621565b6111e1565b60018487890712878905030160020b60081d9160010b8260010b14600014611b6a575b60018082988887818307129105030160ff161b8403165b8015611b4a57808403167e1f0d1e100c1d070f090b19131c1706010e11080a1a141802121b1503160405601f826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1792831c63d76453e004161a17956112a2565b50905060019194500160010b611b608183612621565b9390859085611ad8565b50611b758185612621565b611ac1565b6301ac05a56000526004601cfd5b7f30673a1b0000000000000000000000000000000000000000000000000000000060005260046000fd5b620d89e891501338610f99565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761813915038610f91565b505050505090506000906000906000608052600090565b508015610f78565b6010600060449260209582956014526034526fa9059cbb00000000000000000000000082525af13d15600160005114171615611c45576000603452565b6390b8ec186000526004601cfd5b8060ff1d81810118620d89e88111611f955763ffffffff91600182167001fffcb933bd6fad37aa2d162d1a59400102700100000000000000000000000000000000189160028116611f79575b60048116611f5d575b60088116611f41575b60108116611f25575b60208116611f09575b60408116611eed575b60808116611ed1575b6101008116611eb5575b6102008116611e99575b6104008116611e7d575b6108008116611e61575b6110008116611e45575b6120008116611e29575b6140008116611e0d575b6180008116611df1575b620100008116611dd5575b620200008116611dba575b620400008116611d9f575b6208000016611d86575b600012611d5f575b0160201c90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04611d58565b6b048a170391f7dc42444e8fa290910260801c90611d50565b6d2216e584f5fa1ea926041bedfe9890920260801c91611d46565b916e5d6af8dedb81196699c329225ee6040260801c91611d3b565b916f09aa508b5b7a84e1c677de54f3e99bc90260801c91611d30565b916f31be135f97d08fd981231505542fcfa60260801c91611d25565b916f70d869a156d2a1b890bb3df62baf32f70260801c91611d1b565b916fa9f746462d870fdf8a65dc1f90e061e50260801c91611d11565b916fd097f3bdfd2022b8845ad8f792aa58250260801c91611d07565b916fe7159475a2c29b7443b29c7fa6e889d90260801c91611cfd565b916ff3392b0822b70005940c7a398e4b70f30260801c91611cf3565b916ff987a7253ac413176f2b074cf7815e540260801c91611ce9565b916ffcbe86c7900a88aedcffc83b479aa3a40260801c91611cdf565b916ffe5dee046a99a2a811c461f1969c30530260801c91611cd5565b916fff2ea16466c96a3843ec78b326b528610260801c91611ccc565b916fff973b41fa98c081472e6896dfb254c00260801c91611cc3565b916fffcb9843d60f6159c9db58835c9266440260801c91611cba565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c91611cb1565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c91611ca8565b916ffff97272373d413259a46990580e213a0260801c91611c9f565b6308c379a0600052602080526101546041526045601cfd5b919391838511611fc1575050505050600090565b828510611fd2575050505050600190565b611ff593611fe386611fec936125d3565b908603906125d3565b9382039061252c565b1090565b9190820180921161200657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919081156120ca5760601b91808202818382041461207d575b5082916120719173ffffffffffffffffffffffffffffffffffffffff9404611ff9565b80820615159104011690565b830183811061204e57915061209382828561252c565b92096120b3575b73ffffffffffffffffffffffffffffffffffffffff1690565b6001018061209a575b63ae47f7026000526004601cfd5b505090565b918282108284180280808518931893146103bc5760019060601b9282810361210e73ffffffffffffffffffffffffffffffffffffffff8316828761252c565b94098284061715151691040190565b818118818310028082189392811891146103bc57612158918373ffffffffffffffffffffffffffffffffffffffff831692039060601b61252c565b0490565b8115612166570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b9073ffffffffffffffffffffffffffffffffffffffff906121c8938060a01c156000146121fe5760601b04915b16611ff9565b740100000000000000000000000000000000000000008110156103bc5773ffffffffffffffffffffffffffffffffffffffff1690565b906122089161246b565b916121c2565b919094929473ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff8416101594620f42400390612254828861232a565b86156122f8576122658486846120cf565b975b8882106122c1575050958691620f424061228182846123bc565b92096122af575b945b156122a657916122a392038060ff1d90810118906125d3565b90565b6122a39261211d565b600191500180156120bc578590612288565b96975091505082158215176103bc5785156122e8576122e1908284612035565b809561228a565b6122f3908284612195565b6122e1565b8185038060ff1d9081011860016c0100000000000000000000000061231d83886125d3565b9287091515160197612267565b81810291620f42408183850414831517021561234b575050620f4240900490565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620f42409284098481108501900392099080620f424011156120bc57828211900360fa1b910360061c177fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c261390290565b90620f424082029181620f42408285041482151702156123dc5750900490565b81620f42407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184098581108601900392099082600003831692818111156120bc57839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b908160601b91816c010000000000000000000000008285041482151702156124935750900490565b816c010000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184098581108601900392099082600003831692818111156120bc57839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b81810292918115828504821417830215612547575050900490565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff849284098581108601900392099082600003831692818111156120bc57839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b818102917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff910981811082019003806c0100000000000000000000000011156120bc5760a01b9060601c1790565b6024600080926020947f5339c29600000000000000000000000000000000000000000000000000000000835260010b6004525afa156103bc576000519056fea164736f6c634300081a000a";

type UniV3OptimalSwapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniV3OptimalSwapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniV3OptimalSwapRouter__factory extends ContractFactory {
  constructor(...args: UniV3OptimalSwapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    owner_: string,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<UniV3OptimalSwapRouter> {
    return super.deploy(
      npm,
      owner_,
      overrides || {}
    ) as Promise<UniV3OptimalSwapRouter>;
  }
  override getDeployTransaction(
    npm: string,
    owner_: string,
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, owner_, overrides || {});
  }
  override attach(address: string): UniV3OptimalSwapRouter {
    return super.attach(address) as UniV3OptimalSwapRouter;
  }
  override connect(signer: Signer): UniV3OptimalSwapRouter__factory {
    return super.connect(signer) as UniV3OptimalSwapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniV3OptimalSwapRouterInterface {
    return new utils.Interface(_abi) as UniV3OptimalSwapRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniV3OptimalSwapRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniV3OptimalSwapRouter;
  }
}
