/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniV3OptimalSwapRouter,
  UniV3OptimalSwapRouterInterface,
} from "../../src/UniV3OptimalSwapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICommonNonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Invalid_Tick_Range",
    type: "error",
  },
  {
    inputs: [],
    name: "MismatchETH",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWETH9",
    type: "error",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "npm",
    outputs: [
      {
        internalType: "contract ICommonNonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e08060405260208161213e803803809161001a828561013c565b83398101031261013757516001600160a01b03811690818103610137576080526040516312a9293f60e21b8152602081600481855afa91821561010e5760049260209260009161011a575b506001600160a01b031660a05260405163c45a015560e01b815292839182905afa90811561010e576000916100df575b5060c052604051611fa99081610195823960805181610654015260a0518181816103d8015281816106c101526106ff015260c05181818161019e015281816104ff01526105e50152f35b610101915060203d602011610107575b6100f9818361013c565b810190610175565b38610095565b503d6100ef565b6040513d6000823e3d90fd5b6101319150833d8511610107576100f9818361013c565b38610065565b600080fd5b601f909101601f19168101906001600160401b0382119082101761015f57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261013757516001600160a01b0381168103610137579056fe60a080604052600436101561042a575b5036156103c157346103bc5760003560601c60143560601c9060313560f81c9060323560601c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa63601838584180285189061008b6100833373ffffffffffffffffffffffffffffffffffffffff851661080b565b303385610847565b826014527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6034526f095ea7b3000000000000000000000000600052602060006044601082865af13d156001600051141716156103ae57600080918160345260405181605a82378260463560601c5af11561035f576044601060008093602095601452816034526f095ea7b300000000000000000000000082525af13d156001600051141716156103ae576000603452610145308261080b565b61014f308561080b565b90604051906060820182811067ffffffffffffffff82111761037f5760405283825285602083015260283560e81c60408301526040519474ff00000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000017600052606083206020527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460405273ffffffffffffffffffffffffffffffffffffffff6055600b2016956040526000146103695761023681610220338961080b565b8501905b602e3560e81d602b3560e81d896108a0565b50506080519560009382610285575b50506000039485831802809218019318019180610273575b50508061026657005b610271913390611544565b005b61027e913390611544565b388061025d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09194500192604060008551926060875282517f128acb080000000000000000000000000000000000000000000000000000000081523060048201528a60248201528560448201528a73fffd8963efd1fc6a506488495d951d53639afb810273fffd8963efd1fc6a506488495d951d5263988d2518606482015260a060848201528260c489516020810160a48501818d60045afa5001925af160403d14161561035f57600051878160205118021860000393523880610245565b3d6000803e3d6000fd5b610236610376338661080b565b82018490610224565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b633e3f8f736000526004601cfd5b600080fd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361040057005b7f2f1ca35a0000000000000000000000000000000000000000000000000000000060005260046000fd5b60003560e01c9081634aa4a4fc14610678575080637f1e9ef614610609578063c45a01551461059a5763fa461e3314610463573861000f565b346103bc5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc5760443560043567ffffffffffffffff82116103bc57366023830112156103bc5781600401359167ffffffffffffffff83116103bc57602481019260243691830101116103bc5760405190606084600037606060002074ff00000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000176000526020527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460405273ffffffffffffffffffffffffffffffffffffffff6055600b2016916040528133036103bc5760008313156105855750610271923090356106e5565b610271935060243592503090604401356106e5565b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103bc5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bc5760209073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b92919073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168073ffffffffffffffffffffffffffffffffffffffff86161480610802575b610776575b5073ffffffffffffffffffffffffffffffffffffffff8116300361076d575061076b92611544565b565b61076b93610847565b3484036107d85760006004818681947fd0e30db00000000000000000000000000000000000000000000000000000000083525af1156103bc573073ffffffffffffffffffffffffffffffffffffffff8316146107d25738610743565b50505050565b7fa11a990f0000000000000000000000000000000000000000000000000000000060005260046000fd5b5034151561073e565b6024600080926020947f70a082310000000000000000000000000000000000000000000000000000000083526004525afa156103bc5760005190565b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615610892576000606052604052565b637939f4246000526004601cfd5b60006080819052959491939182158061153c575b611525578360020b8560020b90808212918215926114fb575b5081156114ee575b506114c457813b156114b657604051610120810181811067ffffffffffffffff82111761037f576040526000815260006020820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e082015260006101008201527f3850c7bd0000000000000000000000000000000000000000000000000000000060005260406000600481865afa156103bc576000519260205196849760408401527f1a6865020000000000000000000000000000000000000000000000000000000060005260206000600481855afa156103bc57600051907fddca3f430000000000000000000000000000000000000000000000000000000060005260206000600481865afa156103bc5762ffffff60005116907fd0c93a7c0000000000000000000000000000000000000000000000000000000060005260206000600481875afa156103bc57610a5a92610a549260005191875288602088015289606088015287608088015260e087015261010086015261158f565b9661158f565b938660a08401528460c0840152610ab673ffffffffffffffffffffffffffffffffffffffff861673ffffffffffffffffffffffffffffffffffffffff891673ffffffffffffffffffffffffffffffffffffffff8416878a6118e9565b608052507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000906000905b600084604081015160020b9461010082015160020b946080516000146113da5783868807128688050360081d9160010b8260010b146000146113ca575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260ff8399898881830712910503161b01165b801561138c577f07060605060205040602030205040301060502050303040105050304000000006f8421084210842108cc6318c6db6d54be826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1783811c61ffff1060041b1783811c60ff1060031b1792831c1c601f161a17955b948196610bf182828560081b010261158f565b946080511560001461133057610c4173ffffffffffffffffffffffffffffffffffffffff6020870151166fffffffffffffffffffffffffffffffff8751166080880151908960e08a015193611b4a565b92919690969260608201510196608082015103975b73ffffffffffffffffffffffffffffffffffffffff8085169116810361131f57610c919060a083015160c06080511515940151918b8b6118e9565b1515146112a757505050505050505050505b80519260208201519260608301519660808401519260805115600014610fdd575073ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff861610610ee3575b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff85161015610d40575b50505090610d3a9185611a59565b91030191565b9196509291975085519286602081015160c08201519560e08301519081620f424003908060601b84810460608701510190610d7f60a088015183611f0f565b9a610d98610d928689620f424002611a98565b85611f0f565b95610daf60a060808b01519889019a015186611f0f565b890396871115610ed557610d3a9c86610e7e96610dcf85610ec89d611da7565b930204900303940290620f42400204900360011b9260011b8302828002018070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b56201000083831c019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8080920410900390565b0160601b058181119082180218978a89038060ff1d908101189060016c0100000000000000000000000060e0610eb4858a611f0f565b930151620f42400393880915151601611cf8565b9103019690913880610d2c565b63202368086000526004601cfd5b999750610f03610efc60e0850151620f42400384611c66565b8686611ad1565b9773ffffffffffffffffffffffffffffffffffffffff8b1673ffffffffffffffffffffffffffffffffffffffff8a1610600014610f5a575073ffffffffffffffffffffffffffffffffffffffff819a5b9050610cf8565b9993918585610fac92610fa482879c969c038060ff1d90810118610f7e8186611f0f565b60016c0100000000000000000000000060e08c0151620f42400393880915151601611cf8565b900394611a59565b019573ffffffffffffffffffffffffffffffffffffffff848181166020860152886060860152836080860152610f53565b905073ffffffffffffffffffffffffffffffffffffffff819893989792971673ffffffffffffffffffffffffffffffffffffffff8616116111da575b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff85161115611065575b50505090610d3a9185038060ff1d9081011890611f0f565b9196509291975085519260208701519360c08801519460e08901519182620f4240039260608b0151908260601b908985870283620f4240020484019204820392831115610ed55784868e95611100610d3a9d6110f86110f26111cd9c60a08c60806110e16110da6111a49e8585015190611f0f565b9b8a611f0f565b910151019c0151620f424002611a98565b84611f0f565b890398611da7565b93020401039160011b9260011b8302828002018070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b56201000083831c019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8080920410900390565b0160601b0481811090821802189760e06111bf868d8c611a0b565b910151620f42400390611cf8565b910301969091388061104d565b9997506111fa6111f360e0850151620f42400384611c66565b8686611971565b9773ffffffffffffffffffffffffffffffffffffffff8b8116908a161061123b575073ffffffffffffffffffffffffffffffffffffffff819a5b9050611019565b999391611276906112636112538886899c969c611a0b565b60e0870151620f42400390611cf8565b90039285038060ff1d9081011886611f0f565b019573ffffffffffffffffffffffffffffffffffffffff848181166020860152836060860152886080860152611234565b7ff30dba9300000000000000000000000000000000000000000000000000000000815283838660081b010260020b6004526040816024818b5afa1561131c5760205190608051900318608051018a51018a5260208a01526080519260081b010203604087015260608601526080850152610ae0565b80fd5b505050505050505050505050610ca3565b9361137573ffffffffffffffffffffffffffffffffffffffff6020830151166fffffffffffffffffffffffffffffffff8351166060840151908960e086015193611b4a565b969192906060820151039660808201510197610c56565b50919450507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160010b6113c08183611f5d565b9390859085610b52565b506113d58185611f5d565b610b1d565b60018487890712878905030160020b60081d9160010b8260010b146000146114a6575b60018082988887818307129105030160ff161b8403165b801561148657808403167e1f0d1e100c1d070f090b19131c1706010e11080a1a141802121b1503160405601f826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1792831c63d76453e004161a1795610bde565b50905060019194500160010b61149c8183611f5d565b9390859085611414565b506114b18185611f5d565b6113fd565b6301ac05a56000526004601cfd5b7f30673a1b0000000000000000000000000000000000000000000000000000000060005260046000fd5b620d89e8915013386108d5565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618139150386108cd565b505050505090506000906000906000608052600090565b5080156108b4565b6010600060449260209582956014526034526fa9059cbb00000000000000000000000082525af13d15600160005114171615611581576000603452565b6390b8ec186000526004601cfd5b8060ff1d81810118620d89e881116118d15763ffffffff91600182167001fffcb933bd6fad37aa2d162d1a594001027001000000000000000000000000000000001891600281166118b5575b60048116611899575b6008811661187d575b60108116611861575b60208116611845575b60408116611829575b6080811661180d575b61010081166117f1575b61020081166117d5575b61040081166117b9575b610800811661179d575b6110008116611781575b6120008116611765575b6140008116611749575b618000811661172d575b620100008116611711575b6202000081166116f6575b6204000081166116db575b62080000166116c2575b60001261169b575b0160201c90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04611694565b6b048a170391f7dc42444e8fa290910260801c9061168c565b6d2216e584f5fa1ea926041bedfe9890920260801c91611682565b916e5d6af8dedb81196699c329225ee6040260801c91611677565b916f09aa508b5b7a84e1c677de54f3e99bc90260801c9161166c565b916f31be135f97d08fd981231505542fcfa60260801c91611661565b916f70d869a156d2a1b890bb3df62baf32f70260801c91611657565b916fa9f746462d870fdf8a65dc1f90e061e50260801c9161164d565b916fd097f3bdfd2022b8845ad8f792aa58250260801c91611643565b916fe7159475a2c29b7443b29c7fa6e889d90260801c91611639565b916ff3392b0822b70005940c7a398e4b70f30260801c9161162f565b916ff987a7253ac413176f2b074cf7815e540260801c91611625565b916ffcbe86c7900a88aedcffc83b479aa3a40260801c9161161b565b916ffe5dee046a99a2a811c461f1969c30530260801c91611611565b916fff2ea16466c96a3843ec78b326b528610260801c91611608565b916fff973b41fa98c081472e6896dfb254c00260801c916115ff565b916fffcb9843d60f6159c9db58835c9266440260801c916115f6565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c916115ed565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c916115e4565b916ffff97272373d413259a46990580e213a0260801c916115db565b6308c379a0600052602080526101546041526045601cfd5b9193918385116118fd575050505050600090565b82851061190e575050505050600190565b6119319361191f8661192893611f0f565b90860390611f0f565b93820390611e68565b1090565b9190820180921161194257565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908115611a065760601b9180820281838204146119b9575b5082916119ad9173ffffffffffffffffffffffffffffffffffffffff9404611935565b80820615159104011690565b830183811061198a5791506119cf828285611e68565b92096119ef575b73ffffffffffffffffffffffffffffffffffffffff1690565b600101806119d6575b63ae47f7026000526004601cfd5b505090565b918282108284180280808518931893146103bc5760019060601b92828103611a4a73ffffffffffffffffffffffffffffffffffffffff83168287611e68565b94098284061715151691040190565b818118818310028082189392811891146103bc57611a94918373ffffffffffffffffffffffffffffffffffffffff831692039060601b611e68565b0490565b8115611aa2570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b9073ffffffffffffffffffffffffffffffffffffffff90611b04938060a01c15600014611b3a5760601b04915b16611935565b740100000000000000000000000000000000000000008110156103bc5773ffffffffffffffffffffffffffffffffffffffff1690565b90611b4491611da7565b91611afe565b919094929473ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff8416101594620f42400390611b908288611c66565b8615611c3457611ba1848684611a0b565b975b888210611bfd575050958691620f4240611bbd8284611cf8565b9209611beb575b945b15611be25791611bdf92038060ff1d9081011890611f0f565b90565b611bdf92611a59565b600191500180156119f8578590611bc4565b96975091505082158215176103bc578515611c2457611c1d908284611971565b8095611bc6565b611c2f908284611ad1565b611c1d565b8185038060ff1d9081011860016c01000000000000000000000000611c598388611f0f565b9287091515160197611ba3565b81810291620f424081838504148315170215611c87575050620f4240900490565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620f42409284098481108501900392099080620f424011156119f857828211900360fa1b910360061c177fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c261390290565b90620f424082029181620f4240828504148215170215611d185750900490565b81620f42407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184098581108601900392099082600003831692818111156119f857839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b908160601b91816c01000000000000000000000000828504148215170215611dcf5750900490565b816c010000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184098581108601900392099082600003831692818111156119f857839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b81810292918115828504821417830215611e83575050900490565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff849284098581108601900392099082600003831692818111156119f857839004806003026002188082026002030280820260020302808202600203028082026002030280820260020302809102600203029360018484830304948060000304019211900302170290565b818102917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff910981811082019003806c0100000000000000000000000011156119f85760a01b9060601c1790565b6024600080926020947f5339c29600000000000000000000000000000000000000000000000000000000835260010b6004525afa156103bc576000519056fea164736f6c634300081a000a";

type UniV3OptimalSwapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniV3OptimalSwapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniV3OptimalSwapRouter__factory extends ContractFactory {
  constructor(...args: UniV3OptimalSwapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<UniV3OptimalSwapRouter> {
    return super.deploy(
      npm,
      overrides || {}
    ) as Promise<UniV3OptimalSwapRouter>;
  }
  override getDeployTransaction(
    npm: string,
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, overrides || {});
  }
  override attach(address: string): UniV3OptimalSwapRouter {
    return super.attach(address) as UniV3OptimalSwapRouter;
  }
  override connect(signer: Signer): UniV3OptimalSwapRouter__factory {
    return super.connect(signer) as UniV3OptimalSwapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniV3OptimalSwapRouterInterface {
    return new utils.Interface(_abi) as UniV3OptimalSwapRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniV3OptimalSwapRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniV3OptimalSwapRouter;
  }
}
