/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPancakeV3SwapCallback,
  IPancakeV3SwapCallbackInterface,
} from "../../../../../../@pancakeswap/v3-core/contracts/interfaces/callback/IPancakeV3SwapCallback";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "pancakeV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPancakeV3SwapCallback__factory {
  static readonly abi = _abi;
  static createInterface(): IPancakeV3SwapCallbackInterface {
    return new utils.Interface(_abi) as IPancakeV3SwapCallbackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPancakeV3SwapCallback {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IPancakeV3SwapCallback;
  }
}
