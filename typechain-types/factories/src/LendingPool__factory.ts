/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LendingPool, LendingPoolInterface } from "../../src/LendingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_interestRateModelAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expectedLiquidityLimit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "POOL_INCORRECT_WITHDRAW_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "POOL_MORE_THAN_EXPECTED_LIQUIDITY_LIMIT",
    type: "error",
  },
  {
    inputs: [],
    name: "ZERO_ADDRESS_IS_NOT_ALLOWED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "NewExpectedLiquidityLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newInterestRateModel",
        type: "address",
      },
    ],
    name: "NewInterestRateModel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasuryAddress",
        type: "address",
      },
    ],
    name: "NewTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "NewWithdrawFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "availableLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowAPY_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calcLinearCumulative_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cumulativeIndex_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBorrowRate_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDifference",
        type: "uint256",
      },
    ],
    name: "calcLinearIndex_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "cumulativeIndex_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dieselToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedLiquidityLU",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedLiquidityLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fromDiesel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDieselRate_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interestRateModel",
    outputs: [
      {
        internalType: "contract IInterestRateModel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "setExpectedLiquidityLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setWithdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestampLU",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "toDiesel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_interestRateModel",
        type: "address",
      },
    ],
    name: "updateInterestRateModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162003190380380620031908339810160408190526200003491620006f6565b6200003f336200029d565b6000805460ff60a01b19169055600180556001600160a01b03841615806200006e57506001600160a01b038316155b156200008d57604051631f98a9d960e11b815260040160405180910390fd5b6001600160a01b0384166080819052604080516306fdde0360e01b815290516306fdde03916004808201926000929091908290030181865afa158015620000d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000102919081019062000784565b6040516020016200011491906200083c565b604051602081830303815290604052846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200018c919081019062000784565b6040516020016200019e91906200086d565b604051602081830303815290604052856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000212919062000898565b6040516200022090620006cb565b6200022e93929190620008eb565b604051809103906000f0801580156200024b573d6000803e3d6000fd5b506001600160a01b0390811660a052600380546001600160a01b031916918416919091179055426009556b033b2e3c9fd0803ce80000006007556200029083620002ed565b60055550620009dd915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381166200031557604051631f98a9d960e11b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383161790556200033c600062000373565b6040516001600160a01b038216907f0ec6cb7631d36954a05ffd646135bfd9995c71e7fa36d26abb1ad9f24a040ea190600090a250565b806200037e6200042e565b6200038a91906200093e565b600455620003976200049a565b6007556002546004546001600160a01b03909116906342568d4490620003bc620004cc565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015620003fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200042491906200095a565b6008555042600955565b600080600954426200044191906200093e565b905060006301e1338062000466836008546200054160201b62000f271790919060201c565b60065462000475919062000974565b620004819190620009a4565b905080600454620004939190620009c7565b9250505090565b60008060095442620004ad91906200093e565b9050620004c6600754600854836200057260201b60201c565b91505090565b6080516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000516573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200053c91906200095a565b905090565b60006200056b826b033b2e3c9fd0803ce800000085620005cf60201b62000f3c179092919060201c565b9392505050565b6000806301e1338062000586848662000974565b620005929190620009a4565b620005aa906b033b2e3c9fd0803ce8000000620009c7565b9050620005c681866200054160201b62000f271790919060201c565b95945050505050565b60008080600019858709858702925082811083820303915050806000036200060e578382816200060357620006036200098e565b04925050506200056b565b808411620006625760405162461bcd60e51b815260206004820152601560248201527f4d6174683a206d756c446976206f766572666c6f770000000000000000000000604482015260640160405180910390fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b610ef1806200229f83390190565b80516001600160a01b0381168114620006f157600080fd5b919050565b600080600080608085870312156200070d57600080fd5b6200071885620006d9565b93506200072860208601620006d9565b92506200073860408601620006d9565b6060959095015193969295505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200077b57818101518382015260200162000761565b50506000910152565b6000602082840312156200079757600080fd5b81516001600160401b0380821115620007af57600080fd5b818401915084601f830112620007c457600080fd5b815181811115620007d957620007d962000748565b604051601f8201601f19908116603f0116810190838211818310171562000804576200080462000748565b816040528281528760208487010111156200081e57600080fd5b620008318360208301602088016200075e565b979650505050505050565b6603234b2b9b2b6160cd1b815260008251620008608160078501602087016200075e565b9190910160070192915050565b601960fa1b8152600082516200088b8160018501602087016200075e565b9190910160010192915050565b600060208284031215620008ab57600080fd5b815160ff811681146200056b57600080fd5b60008151808452620008d78160208601602086016200075e565b601f01601f19169290920160200192915050565b606081526000620009006060830186620008bd565b8281036020840152620009148186620008bd565b91505060ff83166040830152949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111562000954576200095462000928565b92915050565b6000602082840312156200096d57600080fd5b5051919050565b808202811582820484141762000954576200095462000928565b634e487b7160e01b600052601260045260246000fd5b600082620009c257634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111562000954576200095462000928565b60805160a05161184162000a5e6000396000818161026d015281816104f6015281816108ed0152610cfd01526000818161021b01528181610473015281816104b101528181610668015281816106ea015281816107290152818161087001528181610ab101528181610bbb01528181610c3d0152610c7c01526118416000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063788c6bfe11610104578063c95f9d0e116100a2578063f0f4426011610071578063f0f44260146103b8578063f2fde38b146103cb578063f3fdb15a146103de578063fe14112d146103f157600080fd5b8063c95f9d0e1461038a578063df0a3bdf1461039d578063e941fa78146103a6578063ef8d9603146103af57600080fd5b8063bb04b193116100de578063bb04b19314610348578063c5ebeaec1461035b578063c5f956af1461036e578063c8c986621461038157600080fd5b8063788c6bfe1461031c5780638da5cb5b14610324578063b6ac642a1461033557600080fd5b806345d31f9d1161017c5780635664cacf1161014b5780635664cacf146102dc5780635c975abb146102ef578063715018a61461030c578063743753591461031457600080fd5b806345d31f9d146102a45780634c19386c146102ad5780634d778ad1146102b65780635427c938146102c957600080fd5b80632495a599116101b85780632495a5991461021657806331d8bc271461025557806336dda7d514610268578063371fd8e61461028f57600080fd5b806305fe138b146101df57806308182d58146102055780630fce70fb1461020e575b600080fd5b6101f26101ed366004611633565b6103f9565b6040519081526020015b60405180910390f35b6101f260095481565b6101f26105cf565b61023d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fc565b6101f261026336600461165f565b6105f7565b61023d7f000000000000000000000000000000000000000000000000000000000000000081565b6102a261029d36600461168b565b610640565b005b6101f260085481565b6101f260065481565b6101f26102c436600461168b565b61080b565b6101f26102d736600461168b565b61081f565b6102a26102ea3660046116a4565b610833565b600054600160a01b900460ff1660405190151581526020016101fc565b6102a2610844565b6101f2610858565b6101f26108e8565b6000546001600160a01b031661023d565b6102a261034336600461168b565b61099c565b6102a261035636600461168b565b610a02565b6102a261036936600461168b565b610a3f565b60035461023d906001600160a01b031681565b6101f260045481565b6102a2610398366004611633565b610b37565b6101f260075481565b6101f2600a5481565b6101f260055481565b6102a26103c63660046116a4565b610e02565b6102a26103d93660046116a4565b610e54565b60025461023d906001600160a01b031681565b6101f2610eca565b6000610403611026565b61040b611073565b6001600160a01b03821661043257604051631f98a9d960e11b815260040160405180910390fd5b600061043d8461081f565b90506000610456600a54836110cc90919063ffffffff16565b9050600061046482846116d5565b905061049a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168683611116565b81156104da576003546104da906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911684611116565b604051632770a7eb60e21b8152336004820152602481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561054257600080fd5b505af1158015610556573d6000803e3d6000fd5b50505050826004600082825461056c91906116d5565b9091555061057c9050600061117e565b6040518681526001600160a01b0386169033907fd8ae9b9ba89e637bcb66a69ac91e8f688018e81d6f92c57e02226425c8efbdf69060200160405180910390a3925050506105c960018055565b92915050565b600080600954426105e091906116d5565b90506105f1600754600854836105f7565b91505090565b6000806301e1338061060984866116e8565b6106139190611715565b610629906b033b2e3c9fd0803ce8000000611729565b90506106358582610f27565b9150505b9392505050565b610648611026565b610650611073565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db919061173c565b90506107126001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308561122e565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c919061173c565b6107a691906116d5565b91506107b2600061117e565b81600660008282546107c491906116d5565b909155505060405182815233907f5c16de4f8b59bd9caf0f49a545f25819a895ed223294290b408242e72a5942319060200160405180910390a25061080860018055565b50565b60006105c96108186108e8565b839061126c565b60006105c961082c6108e8565b8390610f27565b61083b611285565b610808816112df565b61084c611285565b6108566000611362565b565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156108bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e3919061173c565b905090565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d919061173c565b90508060000361098a576b033b2e3c9fd0803ce800000091505090565b6105f181610996610eca565b9061126c565b6109a4611285565b60648111156109c657604051631421961160e11b815260040160405180910390fd5b600a8190556040518181527fd5fe46099fa396290a7f57e36c3c3c8774e2562c18ed5d1dcc0fa75071e03f1d906020015b60405180910390a150565b610a0a611285565b60058190556040518181527fd7a183c9fe85b604c25d54bd676e0866f6c13bcca9fb9b0850213de118fdc99c906020016109f7565b610a47611026565b610a4f611073565b80610a58610858565b1015610aa45760405162461bcd60e51b8152602060048201526016602482015275494e53554646494349454e545f4c495155494449545960501b60448201526064015b60405180910390fd5b610ad86001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611116565b610ae2600061117e565b8060066000828254610af49190611729565b909155505060405181815233907fcbc04eca7e9da35cb1393a6135a199ca52e450d5e9251cbd99f7847d33a367509060200160405180910390a261080860018055565b610b3f611026565b610b47611073565b6001600160a01b038116610b6e57604051631f98a9d960e11b815260040160405180910390fd5b60055482610b7a610eca565b610b849190611729565b1115610ba35760405163119427c560e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2e919061173c565b9050610c656001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308661122e565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef919061173c565b610cf991906116d5565b92507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1983610d348661080b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610d7a57600080fd5b505af1158015610d8e573d6000803e3d6000fd5b505050508260046000828254610da49190611729565b90915550610db49050600061117e565b6040518381526001600160a01b0383169033907f668256213e6a9a0247adc238fcbf44cc6b98921642fca93479c5dc38736608379060200160405180910390a350610dfe60018055565b5050565b610e0a611285565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f8b4531436af204a864adc47c345e10cb5c4df79165aa0cb85fc45ac5b551517b90600090a250565b610e5c611285565b6001600160a01b038116610ec15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a9b565b61080881611362565b60008060095442610edb91906116d5565b905060006301e13380610ef983600854610f2790919063ffffffff16565b600654610f0691906116e8565b610f109190611715565b905080600454610f209190611729565b9250505090565b600061063983836b033b2e3c9fd0803ce80000005b6000808060001985870985870292508281108382030391505080600003610f7657838281610f6c57610f6c6116ff565b0492505050610639565b808411610fbd5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401610a9b565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600054600160a01b900460ff16156108565760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a9b565b6002600154036110c55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a9b565b6002600155565b60008215806110d9575081155b156110e6575060006105c9565b6127106110f4600282611755565b61ffff1661110284866116e8565b61110c9190611729565b6106399190611715565b6040516001600160a01b03831660248201526044810182905261117990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113b2565b505050565b80611187610eca565b61119191906116d5565b60045561119c6105cf565b6007556002546004546001600160a01b03909116906342568d44906111bf610858565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015611200573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611224919061173c565b6008555042600955565b6040516001600160a01b03808516602483015283166044820152606481018290526112669085906323b872dd60e01b90608401611142565b50505050565b6000610639836b033b2e3c9fd0803ce800000084610f3c565b6000546001600160a01b031633146108565760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a9b565b6001600160a01b03811661130657604051631f98a9d960e11b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b03831617905561132b600061117e565b6040516001600160a01b038216907f0ec6cb7631d36954a05ffd646135bfd9995c71e7fa36d26abb1ad9f24a040ea190600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611407826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114879092919063ffffffff16565b90508051600014806114285750808060200190518101906114289190611776565b6111795760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a9b565b6060611496848460008561149e565b949350505050565b6060824710156114ff5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a9b565b600080866001600160a01b0316858760405161151b91906117bc565b60006040518083038185875af1925050503d8060008114611558576040519150601f19603f3d011682016040523d82523d6000602084013e61155d565b606091505b509150915061156e87838387611579565b979650505050505050565b606083156115e85782516000036115e1576001600160a01b0385163b6115e15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a9b565b5081611496565b61149683838151156115fd5781518083602001fd5b8060405162461bcd60e51b8152600401610a9b91906117d8565b80356001600160a01b038116811461162e57600080fd5b919050565b6000806040838503121561164657600080fd5b8235915061165660208401611617565b90509250929050565b60008060006060848603121561167457600080fd5b505081359360208301359350604090920135919050565b60006020828403121561169d57600080fd5b5035919050565b6000602082840312156116b657600080fd5b61063982611617565b634e487b7160e01b600052601160045260246000fd5b818103818111156105c9576105c96116bf565b80820281158282048414176105c9576105c96116bf565b634e487b7160e01b600052601260045260246000fd5b600082611724576117246116ff565b500490565b808201808211156105c9576105c96116bf565b60006020828403121561174e57600080fd5b5051919050565b600061ffff8084168061176a5761176a6116ff565b92169190910492915050565b60006020828403121561178857600080fd5b8151801515811461063957600080fd5b60005b838110156117b357818101518382015260200161179b565b50506000910152565b600082516117ce818460208701611798565b9190910192915050565b60208152600082518060208401526117f7816040850160208701611798565b601f01601f1916919091016040019291505056fea2646970667358221220e5512794c8e0190a9fd66663cd504765ea31447ce85e9462531c6f09d776001f64736f6c6343000812003360c06040523480156200001157600080fd5b5060405162000ef138038062000ef183398101604081905262000034916200012d565b8282600362000044838262000241565b50600462000053828262000241565b50505060ff1660805250503360a0526200030d565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009057600080fd5b81516001600160401b0380821115620000ad57620000ad62000068565b604051601f8301601f19908116603f01168101908282118183101715620000d857620000d862000068565b81604052838152602092508683858801011115620000f557600080fd5b600091505b83821015620001195785820183015181830184015290820190620000fa565b600093810190920192909252949350505050565b6000806000606084860312156200014357600080fd5b83516001600160401b03808211156200015b57600080fd5b62000169878388016200007e565b945060208601519150808211156200018057600080fd5b506200018f868287016200007e565b925050604084015160ff81168114620001a757600080fd5b809150509250925092565b600181811c90821680620001c757607f821691505b602082108103620001e857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023c57600081815260208120601f850160051c81016020861015620002175750805b601f850160051c820191505b81811015620002385782815560010162000223565b5050505b505050565b81516001600160401b038111156200025d576200025d62000068565b62000275816200026e8454620001b2565b84620001ee565b602080601f831160018114620002ad5760008415620002945750858301515b600019600386901b1c1916600185901b17855562000238565b600085815260208120601f198616915b82811015620002de57888601518255948401946001909101908401620002bd565b5085821015620002fd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051610bb0620003416000396000818161020a0152818161036701526103cd0152600061015c0152610bb06000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101f2578063a59a997314610205578063a9059cbb14610244578063dd62ed3e1461025757600080fd5b806370a08231146101ae57806395d89b41146101d75780639dc29fac146101df57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461018657806340c10f191461019957600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761026a565b60405161010491906109fa565b60405180910390f35b61012061011b366004610a64565b6102fc565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610a8e565b610316565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610104565b610120610194366004610a64565b61033a565b6101ac6101a7366004610a64565b61035c565b005b6101346101bc366004610aca565b6001600160a01b031660009081526020819052604090205490565b6100f76103b3565b6101ac6101ed366004610a64565b6103c2565b610120610200366004610a64565b610415565b61022c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610104565b610120610252366004610a64565b610495565b610134610265366004610aec565b6104a3565b60606003805461027990610b1f565b80601f01602080910402602001604051908101604052809291908181526020018280546102a590610b1f565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b5050505050905090565b60003361030a8185856104ce565b60019150505b92915050565b6000336103248582856105f3565b61032f85858561066d565b506001949350505050565b60003361030a81858561034d83836104a3565b6103579190610b59565b6104ce565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103a5576040516395c3dbc560e01b815260040160405180910390fd5b6103af8282610811565b5050565b60606004805461027990610b1f565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461040b576040516395c3dbc560e01b815260040160405180910390fd5b6103af82826108d0565b6000338161042382866104a3565b9050838110156104885760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61032f82868684036104ce565b60003361030a81858561066d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105305760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161047f565b6001600160a01b0382166105915760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161047f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105ff84846104a3565b90506000198114610667578181101561065a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161047f565b61066784848484036104ce565b50505050565b6001600160a01b0383166106d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161047f565b6001600160a01b0382166107335760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161047f565b6001600160a01b038316600090815260208190526040902054818110156107ab5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161047f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610667565b6001600160a01b0382166108675760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161047f565b80600260008282546108799190610b59565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166109305760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161047f565b6001600160a01b038216600090815260208190526040902054818110156109a45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161047f565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105e6565b600060208083528351808285015260005b81811015610a2757858101830151858201604001528201610a0b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a5f57600080fd5b919050565b60008060408385031215610a7757600080fd5b610a8083610a48565b946020939093013593505050565b600080600060608486031215610aa357600080fd5b610aac84610a48565b9250610aba60208501610a48565b9150604084013590509250925092565b600060208284031215610adc57600080fd5b610ae582610a48565b9392505050565b60008060408385031215610aff57600080fd5b610b0883610a48565b9150610b1660208401610a48565b90509250929050565b600181811c90821680610b3357607f821691505b602082108103610b5357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561031057634e487b7160e01b600052601160045260246000fdfea2646970667358221220a486d774799dd989f04005bdf553a2db0e964a67e6455ce1f4015c64f638326064736f6c63430008120033";

type LendingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _underlyingToken: string,
    _interestRateModelAddress: string,
    _treasuryAddress: string,
    _expectedLiquidityLimit: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<LendingPool> {
    return super.deploy(
      _underlyingToken,
      _interestRateModelAddress,
      _treasuryAddress,
      _expectedLiquidityLimit,
      overrides || {}
    ) as Promise<LendingPool>;
  }
  override getDeployTransaction(
    _underlyingToken: string,
    _interestRateModelAddress: string,
    _treasuryAddress: string,
    _expectedLiquidityLimit: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _underlyingToken,
      _interestRateModelAddress,
      _treasuryAddress,
      _expectedLiquidityLimit,
      overrides || {}
    );
  }
  override attach(address: string): LendingPool {
    return super.attach(address) as LendingPool;
  }
  override connect(signer: Signer): LendingPool__factory {
    return super.connect(signer) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new utils.Interface(_abi) as LendingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendingPool {
    return new Contract(address, _abi, signerOrProvider) as LendingPool;
  }
}
