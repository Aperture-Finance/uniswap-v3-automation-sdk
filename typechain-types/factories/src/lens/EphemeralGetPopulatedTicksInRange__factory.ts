/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralGetPopulatedTicksInRange,
  EphemeralGetPopulatedTicksInRangeInterface,
} from "../../../src/lens/EphemeralGetPopulatedTicksInRange";

const _abi = [
  {
    inputs: [
      {
        internalType: "V3PoolCallee",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "V3PoolCallee",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getPopulatedTicksInRange",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "int128",
            name: "liquidityNet",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "liquidityGross",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "feeGrowthOutside0X128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthOutside1X128",
            type: "uint256",
          },
        ],
        internalType: "struct TickLens.PopulatedTick[]",
        name: "populatedTicks",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040526060816200049b80380380916200001d828562000401565b833981010312620002df578051906001600160a01b0382168203620002df57620000586040620000506020840162000425565b920162000425565b8060020b8260020b13620002df576334324e9f60e21b60005260206000600481865afa15620002df578290600051928360008183071291050360020b60081d60010b600093815b6000828507128285050360020b60081d60010b8160010b1315620003855750620000e6620000cd8662000447565b95620000dd604051978862000401565b80875262000447565b60005b601f19820181106200032b57505060005b6000828507128285050360020b60081d60010b8360010b1315620001b55785604051602081019181604081019160208552805180935260206060830191019260005b8181106200015f5750506200015b925003601f19810183528262000401565b5190fd5b8451805160020b8452602080820151600f0b818601526040808301516001600160801b03169086015260608083015190860152608091820151918501919091529094019385935060a0909201916001016200013c565b94909192939490620001c884876200046f565b9460005b61010081101562000310576001811b8716620001f4575b620001ee906200045f565b620001cc565b620001ff846200045f565b938351811015620002fa5760051b83016020015160405191906001600160401b03610100840190811190841117620002e45761010083016040526000835260006020840152600060408401526000606084015260006080840152600060a0840152600060c0840152600060e084015263f30dba9360e01b600052818860081b01870260020b60045261010083602460008d5afa15620002df5760806060620001ee94848b60081b018a0260020b84526020810151600f0b6020850152600180841b03815116604085015260408101518285015201519101529050620001e3565b600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b5090945092620003209062000434565b9190949394620000fa565b60405195969592939260a0810191906001600160401b03831181841017620002e4576020926040526000815260008382015260006040820152600060608201526000608082015282828901015201959495929192620000e9565b939460009291926200039886886200046f565b6001805b620003db5750508101809111620003c557620003b9909462000434565b9493949190916200009f565b634e487b7160e01b600052601160045260246000fd5b808216620003ee575b60011b806200039c565b91620003fa906200045f565b91620003e4565b601f909101601f19168101906001600160401b03821190821017620002e457604052565b51908160020b8203620002df57565b60010b617fff8114620003c55760010190565b6001600160401b038111620002e45760051b60200190565b6000198114620003c55760010190565b90602090602460008094819363299ce14b60e11b835260010b6004525afa1562000497575190565b80fdfe";

type EphemeralGetPopulatedTicksInRangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralGetPopulatedTicksInRangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralGetPopulatedTicksInRange__factory extends ContractFactory {
  constructor(...args: EphemeralGetPopulatedTicksInRangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pool: string,
    tickLower: BigNumberish,
    tickUpper: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<EphemeralGetPopulatedTicksInRange> {
    return super.deploy(
      pool,
      tickLower,
      tickUpper,
      overrides || {}
    ) as Promise<EphemeralGetPopulatedTicksInRange>;
  }
  override getDeployTransaction(
    pool: string,
    tickLower: BigNumberish,
    tickUpper: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool,
      tickLower,
      tickUpper,
      overrides || {}
    );
  }
  override attach(address: string): EphemeralGetPopulatedTicksInRange {
    return super.attach(address) as EphemeralGetPopulatedTicksInRange;
  }
  override connect(signer: Signer): EphemeralGetPopulatedTicksInRange__factory {
    return super.connect(signer) as EphemeralGetPopulatedTicksInRange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralGetPopulatedTicksInRangeInterface {
    return new utils.Interface(
      _abi
    ) as EphemeralGetPopulatedTicksInRangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralGetPopulatedTicksInRange {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralGetPopulatedTicksInRange;
  }
}
