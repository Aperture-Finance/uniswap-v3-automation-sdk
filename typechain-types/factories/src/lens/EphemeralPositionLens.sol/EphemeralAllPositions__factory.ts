/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralAllPositions,
  EphemeralAllPositionsInterface,
} from "../../../../src/lens/EphemeralPositionLens.sol/EphemeralAllPositions";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "allPositions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint96",
                name: "nonce",
                type: "uint96",
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
              {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "tokensOwed0",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "tokensOwed1",
                type: "uint128",
              },
            ],
            internalType: "struct PositionFull",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
              },
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint16",
                name: "observationIndex",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinality",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "feeProtocol",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "unlocked",
                type: "bool",
              },
            ],
            internalType: "struct Slot0",
            name: "slot0",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "activeLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "decimals0",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals1",
            type: "uint8",
          },
        ],
        internalType: "struct PositionState[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346200060c57604081620008a5803803809162000023828562000639565b8339810103126200060c578051906001600160a01b03821682036200060c57602001516001600160a01b03811681036200060c576370a0823160e01b6000528060045260206000602481855afa156200061557600051620000848162000673565b9262000094604051948562000639565b818452601f19620000a58362000673565b01366020860137620000b78262000673565b92620000c7604051948562000639565b828452601f19620000d88462000673565b0160005b8181106200061f57505060005b838110620002c957848660405190816020810193606092838301604087528151809152608090602082860193019060005b818110620002af57505050601f19848303016040850152602080845193848152019301946000915b8383106200016557888662000161818803601f19810183528262000639565b5190f35b8651805180516001600160601b031687526020818101516001600160a01b03908116828a01526040808401518216818b0152838701518216878b01528386015162ffffff168a87015260a080850151600290810b828d015260c080870151820b818e015260e0808801516001600160801b03908116918f019190915261010080890151908f015261012080890151908f0152610140808901518216908f0152610160978801518116978e01979097528786015180519095166101808e01528486015190910b6101a08d01528383015161ffff9081166101c08e0152848a015181166101e08e015284890151166102008d01529083015160ff9081166102208d015292015115156102408b015284015190921661026089015282850151821661028089015291830151166102a087015296909601958795506102c09094019360019092019162000142565b82518552889650602094850194909201916001016200011a565b632f745c5960e01b600052816004528060245260206000604481865afa156200061557600051906000602452816200030282896200078e565b526200030d62000740565b91620003186200068b565b9063133f757160e31b6000526004526101808160246000885afa156200061157825263c45a015560e01b60005260206000600481875afa156200060c5760008051835160408082015160608084015160809094015183516001600160a01b039384168852948316602090815262ffffff909116845290862060ff60a01b90951786529384527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5482526055600b2092909152630d34328160e11b8452169391600481865afa156200060c576000516001600160801b03166040820152620003fd620006f7565b633850c7bd60e01b60005260e08160046000875afa156200060c5760208201819052815160e08101519094906001600160801b0316620004a1575b50508051604001516001935060ff9081906200045d906001600160a01b0316620007b9565b1660608301526200047a848060a01b0360608451015116620007b9565b1660808201526200048c82886200078e565b526200049981876200078e565b5001620000e9565b60a0850151602060c0600292830b970151820b930151900b91620004c68683620007d8565b92620004d38284620007d8565b968112156200057e5750505061016060019460608060408501516040840151900394015191015190035b6200055e84519361010085015190039160e08501926200052d898060801b03918a8060801b03865116906200084e565b610140870180519190921660808b901b8b90039182160181169091526101208601519351909390841691036200084e565b16910190848060801b0390858060801b0383511601169052388062000438565b12620005a95750926101606001946060806040850151604084015190039401519101519003620004fd565b9063f305839960e01b60005260206000600481855afa156200060c576020600060048180516040860151900360408a0151900395634614131960e01b82525afa156200060c576001946060610160928160005191015190039101519003620004fd565b600080fd5b3d90fd5b3d6000803e3d6000fd5b6020906200062c62000740565b82828901015201620000dc565b601f909101601f19168101906001600160401b038211908210176200065d57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116200065d5760051b60200190565b6040519061018082016001600160401b038111838210176200065d57604052816101606000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201520152565b6040519060e082016001600160401b038111838210176200065d576040528160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b6040519060a082016001600160401b038111838210176200065d5760405260006080836200076d6200068b565b815262000779620006f7565b60208201528260408201528260608201520152565b8051821015620007a35760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60206004818093601260005263313ce56760e01b82525afa60051b5190565b604051919291610100908181016001600160401b038111828210176200065d576040526024600080948184528160208501528160408501528160608501528160808501528160a08501528160c08501528160e0850152839763f30dba9360e01b835260020b6004525afa156200084b5750565b80fd5b60008282029260001981840992848410850180850394146200089a57600160801b92848411156200088d5750096080918382119003821b9203901c1790565b63ae47f70290526004601cfd5b5050505060801c9056fe";

type EphemeralAllPositionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralAllPositionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralAllPositions__factory extends ContractFactory {
  constructor(...args: EphemeralAllPositionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    owner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<EphemeralAllPositions> {
    return super.deploy(
      npm,
      owner,
      overrides || {}
    ) as Promise<EphemeralAllPositions>;
  }
  override getDeployTransaction(
    npm: string,
    owner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, owner, overrides || {});
  }
  override attach(address: string): EphemeralAllPositions {
    return super.attach(address) as EphemeralAllPositions;
  }
  override connect(signer: Signer): EphemeralAllPositions__factory {
    return super.connect(signer) as EphemeralAllPositions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralAllPositionsInterface {
    return new utils.Interface(_abi) as EphemeralAllPositionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralAllPositions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralAllPositions;
  }
}
