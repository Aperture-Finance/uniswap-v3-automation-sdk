/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralGetPosition,
  EphemeralGetPositionInterface,
} from "../../../../src/lens/EphemeralPositionLens.sol/EphemeralGetPosition";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint96",
                name: "nonce",
                type: "uint96",
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
              {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "tokensOwed0",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "tokensOwed1",
                type: "uint128",
              },
            ],
            internalType: "struct PositionFull",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
              },
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint16",
                name: "observationIndex",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinality",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "feeProtocol",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "unlocked",
                type: "bool",
              },
            ],
            internalType: "struct Slot0",
            name: "slot0",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "activeLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "decimals0",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals1",
            type: "uint8",
          },
        ],
        internalType: "struct PositionState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620004d257601f620006ca38819003918201601f19168301916001600160401b0383118484101762000354578084926040948552833981010312620004d2578051906001600160a01b0382168203620004d25760200151906200006462000590565b506200006f62000590565b916200007a620004db565b9063133f757160e31b6000526004526101808160246000855afa15620004d757600460006020938193865263c45a015560e01b82525afa15620004d25760008051825160408082015160608084015160809094015183516001600160a01b039384168852948316602090815262ffffff909116845290862060ff60a01b90951786529384527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5482526055600b2092909152630d34328160e11b84521691600481845afa15620004d2576000516001600160801b031660408301526200015e62000547565b633850c7bd60e01b60005260e08160046000855afa15620004d25760208301819052825160e08101519092906001600160801b03166200036a575b505081516040015160ff9150620001b9906001600160a01b0316620005de565b16606082015260ff620001d960018060a01b0360608451015116620005de565b16608082015260ff608060405192805160018060601b03815116602086015260018060a01b03602082015116604086015260018060a01b03604082015116606086015260018060a01b036060820151168386015262ffffff838201511660a086015260a081015160020b60c086015260c081015160020b60e0860152600180841b0360e082015116610100908187015281015161012090818701528101516101409081870152600180851b0390820151166101609081870152600180851b039101511661018085015260c0602082015160018060a01b038151166101a0870152602081015160020b6101c087015261ffff806040830151166101e08801528060608301511661020088015284820151166102208701528460a08201511661024087015201511515610260850152600180831b03604082015116610280850152826060820151166102a08501520151166102c0908183015281526102e0810181811060018060401b038211176200035457604052602081519101f35b634e487b7160e01b600052604160045260246000fd5b602060c060a085015160020b94015160020b92015160020b916200038f8483620005fd565b926200039c8284620005fd565b948112156200044a57505050906101609060608060408501516040840151900394015191015190035b835161010081015160e08201805192959093620004289390926001600160801b0392620003f792841691900362000673565b61014087018051919092166001600160801b0391821601811690915261012086015193519093908416910362000673565b929091018051919092166001600160801b039182160116905238808062000199565b12620004725750610160906060806040850151604084015190039401519101519003620003c5565b9163f305839960e01b60005260206000600481865afa15620004d257602060006004818051604087015190036040860151900396634614131960e01b82525afa15620004d2576060610160928160005191015190039101519003620003c5565b600080fd5b3d90fd5b6040519061018082016001600160401b038111838210176200035457604052816101606000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201520152565b6040519060e082016001600160401b0381118382101762000354576040528160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b6040519060a082016001600160401b0381118382101762000354576040526000608083620005bd620004db565b8152620005c962000547565b60208201528260408201528260608201520152565b60206004818093601260005263313ce56760e01b82525afa60051b5190565b604051919291610100908181016001600160401b0381118282101762000354576040526024600080948184528160208501528160408501528160608501528160808501528160a08501528160c08501528160e0850152839763f30dba9360e01b835260020b6004525afa15620006705750565b80fd5b6000828202926000198184099284841085018085039414620006bf57600160801b9284841115620006b25750096080918382119003821b9203901c1790565b63ae47f70290526004601cfd5b5050505060801c9056fe";

type EphemeralGetPositionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralGetPositionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralGetPosition__factory extends ContractFactory {
  constructor(...args: EphemeralGetPositionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<EphemeralGetPosition> {
    return super.deploy(
      npm,
      tokenId,
      overrides || {}
    ) as Promise<EphemeralGetPosition>;
  }
  override getDeployTransaction(
    npm: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, tokenId, overrides || {});
  }
  override attach(address: string): EphemeralGetPosition {
    return super.attach(address) as EphemeralGetPosition;
  }
  override connect(signer: Signer): EphemeralGetPosition__factory {
    return super.connect(signer) as EphemeralGetPosition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralGetPositionInterface {
    return new utils.Interface(_abi) as EphemeralGetPositionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralGetPosition {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralGetPosition;
  }
}
