/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralGetPosition,
  EphemeralGetPositionInterface,
} from "../../../../src/lens/EphemeralPositionLens.sol/EphemeralGetPosition";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint96",
                name: "nonce",
                type: "uint96",
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
              {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "tokensOwed0",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "tokensOwed1",
                type: "uint128",
              },
            ],
            internalType: "struct PositionFull",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
              },
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint16",
                name: "observationIndex",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinality",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "feeProtocol",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "unlocked",
                type: "bool",
              },
            ],
            internalType: "struct Slot0",
            name: "slot0",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "activeLiquidity",
            type: "uint128",
          },
        ],
        internalType: "struct PositionState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200047b57601f6200064838819003918201601f19168301916001600160401b03831184841017620002f75780849260409485528339810103126200047b578051906001600160a01b03821682036200047b5760200151906200006462000539565b506200006f62000539565b916200007a62000484565b9063133f757160e31b6000526004526101808160246000855afa156200048057600460006020938193865263c45a015560e01b82525afa156200047b5760008051825160408082015160608084015160809094015183516001600160a01b039384168852948316602090815262ffffff909116845290862060ff60a01b90951786529384527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5482526055600b2092909152630d34328160e11b84521691600481845afa156200047b576000516001600160801b0316604083019081529062000161620004f0565b633850c7bd60e01b60005260e08160046000855afa156200047b57602084019080825284519260018060801b0360e0850151166200030d575b505060c09150604051935160018060601b03815116602086015260018060a01b03602082015116604086015260018060a01b03604082015116606086015260018060a01b03606082015116608086015262ffffff60808201511660a086015260a081015160020b838601528281015160020b60e086015260018060801b0360e08201511661010090818701528101516101209081870152810151610140908187015260018060801b039082015116610160908187015260018060801b03910151166101808501525160018060a01b038151166101a0850152602081015160020b6101c085015261ffff806040830151166101e08601528060608301511661020086015260808201511661022085015260ff60a0820151166102408501520151151561026083015260018060801b03905116610280908183015281526102a0810181811060018060401b03821117620002f757604052602081519101f35b634e487b7160e01b600052604160045260246000fd5b602060c060a086015160020b95015160020b92015160020b916200033285836200057b565b926200033f82846200057b565b95811215620003ed5750505061016060c09360608060408501516040840151900394015191015190035b865161010081015160e08201805192959093620003cc9390926001600160801b03926200039b928416919003620005f1565b61014087018051919092166001600160801b03918216018116909152610120860151935190939084169103620005f1565b929091018051919092166001600160801b039182160116905238806200019a565b126200041857509161016060c093606080604085015160408401519003940151910151900362000369565b9063f305839960e01b60005260206000600481855afa156200047b57602060006004818051604086015190036040890151900395634614131960e01b82525afa156200047b5760c093606061016092816000519101519003910151900362000369565b600080fd5b3d90fd5b6040519061018082016001600160401b03811183821017620002f757604052816101606000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201520152565b6040519060e082016001600160401b03811183821017620002f7576040528160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b60405190606082016001600160401b03811183821017620002f75760405260006040836200056662000484565b815262000572620004f0565b60208201520152565b604051919291610100908181016001600160401b03811182821017620002f7576040526024600080948184528160208501528160408501528160608501528160808501528160a08501528160c08501528160e0850152839763f30dba9360e01b835260020b6004525afa15620005ee5750565b80fd5b60008282029260001981840992848410850180850394146200063d57600160801b9284841115620006305750096080918382119003821b9203901c1790565b63ae47f70290526004601cfd5b5050505060801c9056fe";

type EphemeralGetPositionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralGetPositionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralGetPosition__factory extends ContractFactory {
  constructor(...args: EphemeralGetPositionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<EphemeralGetPosition> {
    return super.deploy(
      npm,
      tokenId,
      overrides || {}
    ) as Promise<EphemeralGetPosition>;
  }
  override getDeployTransaction(
    npm: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, tokenId, overrides || {});
  }
  override attach(address: string): EphemeralGetPosition {
    return super.attach(address) as EphemeralGetPosition;
  }
  override connect(signer: Signer): EphemeralGetPosition__factory {
    return super.connect(signer) as EphemeralGetPosition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralGetPositionInterface {
    return new utils.Interface(_abi) as EphemeralGetPositionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralGetPosition {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralGetPosition;
  }
}
