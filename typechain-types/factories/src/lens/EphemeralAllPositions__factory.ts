/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralAllPositions,
  EphemeralAllPositionsInterface,
} from "../../../src/lens/EphemeralAllPositions";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "allPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint96",
                name: "nonce",
                type: "uint96",
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
              {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "tokensOwed0",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "tokensOwed1",
                type: "uint128",
              },
            ],
            internalType: "struct PositionFull",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
              },
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint16",
                name: "observationIndex",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinality",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "feeProtocol",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "unlocked",
                type: "bool",
              },
            ],
            internalType: "struct Slot0",
            name: "slot0",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "activeLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "decimals0",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals1",
            type: "uint8",
          },
        ],
        internalType: "struct PositionState[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040526040816200081f80380380916200001d8285620006cc565b833981010312620005aa578051906001600160a01b0382168203620005aa57602001516001600160a01b0381168103620005aa576370a0823160e01b6000528060045260206000602481855afa15620005b3576000516200007e81620006f0565b926200008e6040519485620006cc565b818452601f196200009f83620006f0565b0160005b818110620005bd57505060005b828110620002735784604051602081019181604081019160208552805180935260609260208484019201936000905b8282106200010357505050620000ff925003601f198101835282620006cc565b5190fd5b919350916020610300600192875180518252848060a01b03848201511684830152604081015190858060601b038251166040840152858060a01b03858301511687840152858060a01b036040830151169060809182850152868060a01b0388840151169160a0928386015262ffffff81850151169260c094859485880152818101519260029360e090850b818a01528887840151860b9361010094858301528d8060801b0380958180958401511690610120918286015283015190610140918286015283015161016080950152820151166101808c01520151166101a08901528b850151938b8060a01b038551166101c08a01528a850151900b6101e089015261ffff806040860151166102008a0152808d860151166102208a0152818501511661024089015260ff9684888581970151166102608b015201511515610280890152840151166102a0870152820151166102c08501520151166102e08201520195019201859391949294620000df565b632f745c5960e01b600052836004528060245260206000604481855afa15620005b35760008051602491909152906001600160a01b0385166020620002b9838962000708565b510152620002c8818762000708565b519180835260408301519063133f757160e31b6000526004526101808160246000875afa15620005af575063c45a015560e01b60005260206000600481865afa15620005aa57600080516040848101518082015160608083015160809093015184516001600160a01b039384168852938316602090815262ffffff909116855290862060ff60a01b90951786529384527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5483526055600b2091909252630d34328160e11b8452169391600481865afa15620005aa57600080516001600160801b031660808301526060820151633850c7bd60e01b825260e091600490865afa15620005aa57604081015160e08101519093906001600160801b031662000437575b506001925060c060ff806200040c868060a01b03604080870151015116620007ff565b1660a08401526200042c858060a01b0360606040860151015116620007ff565b1691015201620000b0565b60a08401519060c0600292830b950151820b91602060608501510151900b9162000462868362000733565b926200046f828462000733565b968112156200051c5750505061016060019460608060408501516040840151900394015191015190035b620004fd60408501519361010085015190039160e0850192620004cc898060801b03918a8060801b0386511690620007a9565b610140870180519190921660808b901b8b9003918216018116909152610120860151935190939084169103620007a9565b16910190848060801b0390858060801b038351160116905238620003e9565b1262000547575092610160600194606080604085015160408401519003940151910151900362000499565b9063f305839960e01b60005260206000600481855afa15620005aa576020600060048180516040860151900360408a0151900395634614131960e01b82525afa15620005aa57600194606061016092816000519101519003910151900362000499565b600080fd5b3d90fd5b3d6000803e3d6000fd5b60405190620005cc82620006b0565b600080835260208301526040519161018083016001600160401b038111848210176200069a5760209360009160405281815281858201528160408201528160608181840152816080818186015260a092828487015260c09583878201528360e0820152836101008201528361012082015283610140820152836101608201526040890152604051906200065f82620006b0565b838252838b830152836040830152838183015283838301528385830152838783015288015286015284015282015282828901015201620000a3565b634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b038211176200069a57604052565b601f909101601f19168101906001600160401b038211908210176200069a57604052565b6001600160401b0381116200069a5760051b60200190565b80518210156200071d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b604051919291610100908181016001600160401b038111828210176200069a576040526024600080948184528160208501528160408501528160608501528160808501528160a08501528160c08501528160e0850152839763f30dba9360e01b835260020b6004525afa15620007a65750565b80fd5b6000828202926000198184099284841085018085039414620007f557600160801b9284841115620007e85750096080918382119003821b9203901c1790565b63ae47f70290526004601cfd5b5050505060801c90565b60206004818093601260005263313ce56760e01b82525afa60051b519056fe";

type EphemeralAllPositionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralAllPositionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralAllPositions__factory extends ContractFactory {
  constructor(...args: EphemeralAllPositionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    owner: string,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<EphemeralAllPositions> {
    return super.deploy(
      npm,
      owner,
      overrides || {}
    ) as Promise<EphemeralAllPositions>;
  }
  override getDeployTransaction(
    npm: string,
    owner: string,
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, owner, overrides || {});
  }
  override attach(address: string): EphemeralAllPositions {
    return super.attach(address) as EphemeralAllPositions;
  }
  override connect(signer: Signer): EphemeralAllPositions__factory {
    return super.connect(signer) as EphemeralAllPositions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralAllPositionsInterface {
    return new utils.Interface(_abi) as EphemeralAllPositionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralAllPositions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralAllPositions;
  }
}
