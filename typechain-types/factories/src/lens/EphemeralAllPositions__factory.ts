/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralAllPositions,
  EphemeralAllPositionsInterface,
} from "../../../src/lens/EphemeralAllPositions";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "allPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint96",
                name: "nonce",
                type: "uint96",
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
              {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "tokensOwed0",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "tokensOwed1",
                type: "uint128",
              },
            ],
            internalType: "struct PositionFull",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
              },
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint16",
                name: "observationIndex",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinality",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "feeProtocol",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "unlocked",
                type: "bool",
              },
            ],
            internalType: "struct Slot0",
            name: "slot0",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "activeLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "decimals0",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals1",
            type: "uint8",
          },
        ],
        internalType: "struct PositionState[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346200058257604081620008068038038091620000238285620006de565b83398101031262000582578051906001600160a01b0382168203620005825760200151906001600160a01b038216820362000582576370a0823160e01b6000528160045260206000602481845afa15620005a15760005190620000868262000702565b92620000966040519485620006de565b828452620000a48362000702565b60005b601f1982018110620005ab57505060005b838110620002655784604051602081019181604081019160208552805180935260609260208484019201936000905b8282106200010b5750505062000107925003601f198101835282620006de565b5190fd5b9193509160206102e060019287518051825283810151858060601b0381511685840152858060a01b0385820151166040840152858060a01b0360408201511687840152858060a01b038782015116916080928385015262ffffff83830151169160a09283860152828101519360029160c095830b8688015285810151830b60e090818901528a8060801b0391828080938301511661010090818c015282015161012090818c015282015161014090818c0152820151169061016091828b01520151166101808801526040840151928a8060a01b038451166101a089015289840151900b6101c088015261ffff806040850151166101e0890152808c85015116610200890152828401511661022088015260ff9583878781960151166102408a0152015115156102608801528a84015116610280870152820151166102a08501520151166102c08201520195019201859391949294620000e7565b632f745c5960e01b600052816004528060245260206000604481865afa15620005a15760005190600060245285518110156200058b5760208160051b870101519180835260208301519063133f757160e31b6000526004526101808160246000885afa1562000587575063c45a015560e01b60005260206000600481875afa1562000582576000805160208085015160408082015160608084015160809094015183516001600160a01b039384168952948316865262ffffff168352862060ff60a01b90951786529383527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5481526055600b20919052630d34328160e11b84529091169391600481865afa156200058257600080516001600160801b031660608301526040820151633850c7bd60e01b825260e091600490865afa156200058257602081015160e08101519093906001600160801b03166200040f575b506001925060a060ff80620003e58680851b0360406020870151015116620007e6565b166080840152620004048580841b0360606020860151015116620007e6565b1691015201620000b8565b60a08401519060c0600292830b950151820b91602060408501510151900b916200043a86836200071a565b926200044782846200071a565b96811215620004f45750505061016060019460608060408501516040840151900394015191015190035b620004d560208501519361010085015190039160e0850192620004a4898060801b03918a8060801b038651169062000790565b610140870180519190921660808b901b8b900391821601811690915261012086015193519093908416910362000790565b16910190848060801b0390858060801b038351160116905238620003c2565b126200051f575092610160600194606080604085015160408401519003940151910151900362000471565b9063f305839960e01b60005260206000600481855afa1562000582576020600060048180516040860151900360408a0151900395634614131960e01b82525afa156200058257600194606061016092816000519101519003910151900362000471565b600080fd5b3d90fd5b634e487b7160e01b600052603260045260246000fd5b3d6000803e3d6000fd5b604051906001600160401b0360c0830190811190831117620006c85760c0820160409081526000835251916001600160401b03610180840190811190841117620006c85761018083016040526000835260006020840152600060408401526000606084015260006080840152600060a0840152600060c084015260e09260008482015260006101008201526000610120820152600061014082015260006101608201526020820152604051808481011060018060401b038583011117620006c857602093810160405260008152600084820152600060408201526000606082015260006080820152600060a0820152600060c082015260408201526000606082015260006080820152600060a082015282828901015201620000a7565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017620006c857604052565b6001600160401b038111620006c85760051b60200190565b604051919291610100908181016001600160401b03811182821017620006c8576040526024600080948184528160208501528160408501528160608501528160808501528160a08501528160c08501528160e0850152839763f30dba9360e01b835260020b6004525afa156200078d5750565b80fd5b6000828202926000198184099284841085018085039414620007dc57600160801b9284841115620007cf5750096080918382119003821b9203901c1790565b63ae47f70290526004601cfd5b5050505060801c90565b60206004818093601260005263313ce56760e01b82525afa60051b519056fe";

type EphemeralAllPositionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralAllPositionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralAllPositions__factory extends ContractFactory {
  constructor(...args: EphemeralAllPositionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    owner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<EphemeralAllPositions> {
    return super.deploy(
      npm,
      owner,
      overrides || {}
    ) as Promise<EphemeralAllPositions>;
  }
  override getDeployTransaction(
    npm: string,
    owner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, owner, overrides || {});
  }
  override attach(address: string): EphemeralAllPositions {
    return super.attach(address) as EphemeralAllPositions;
  }
  override connect(signer: Signer): EphemeralAllPositions__factory {
    return super.connect(signer) as EphemeralAllPositions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralAllPositionsInterface {
    return new utils.Interface(_abi) as EphemeralAllPositionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralAllPositions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralAllPositions;
  }
}
