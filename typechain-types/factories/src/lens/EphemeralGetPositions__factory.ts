/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralGetPositions,
  EphemeralGetPositionsInterface,
} from "../../../src/lens/EphemeralGetPositions";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTokenId",
        type: "uint256",
      },
    ],
    name: "getPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint96",
                name: "nonce",
                type: "uint96",
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
              {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "tokensOwed0",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "tokensOwed1",
                type: "uint128",
              },
            ],
            internalType: "struct PositionFull",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
              },
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint16",
                name: "observationIndex",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinality",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "feeProtocol",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "unlocked",
                type: "bool",
              },
            ],
            internalType: "struct Slot0",
            name: "slot0",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "activeLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "decimals0",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals1",
            type: "uint8",
          },
        ],
        internalType: "struct PositionState[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052606081620007f080380380916200001d8285620006cb565b83398101031262000593578051906001600160a01b0382168203620005935760406020820151910151818103926200005584620006ef565b93620000656040519586620006cb565b80855262000076601f1991620006ef565b0160005b818110620005bb5750506000925b8281106200024f575050508152604051602081019181604081019160208552805180935260206060830191019260005b818110620000db575050620000d7925003601f198101835282620006cb565b5190fd5b916001919350610300602091865180518252848060a01b03848201511684830152604081015190858060601b038251166040840152858060a01b0385830151166060840152858060a01b036040830151169060809182850152868060a01b036060840151169160a0928386015262ffffff81850151169260c094859485880152818101519260029360e090850b818a01528887840151860b9361010094858301528d8060801b0380958180958401511690610120918286015283015190610140918286015283015161016080950152820151166101808c01520151166101a08901526060850151938b8060a01b038551166101c08a01528a850151900b6101e089015261ffff806040860151166102008a0152806060860151166102208a0152818501511661024089015260ff9684888581970151166102608b015201511515610280890152840151166102a0870152820151166102c08501520151166102e08201520194019101918492939193620000b8565b8451841015620005a55760208460051b860101516040810180519163133f757160e31b60005283600452610180602493846000885afa62000297575b50505060010162000088565b909291956000600160209201978484526331a9108f60e11b82528460045281875afa156200059b57600080516001600160a01b031660208381019190915263c45a015560e01b825290600481875afa15620005935760008051845160408082015160608084015160809485015184516001600160a01b039485168952918416602090815262ffffff909116855291872060ff60a01b90961787529481527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5483526055600b2094909252630d34328160e11b85529290921692909190600481855afa156200059357600080516001600160801b0316918401919091526060830151633850c7bd60e01b825260e091600490845afa156200059357835160e08101516001600160801b031662000412575b505060c06001936200040560ff9182620003ec888060a01b0360408451015116620007d0565b1660a08601526060878060a01b039151015116620007d0565b169101529038806200028b565b60a08101519160c0600293840b920151830b92602060608601510151900b9260009062000440848462000707565b946200044d828562000707565b94811215620004fc57505050509381610160600196606080604060c09701516040840151900394015191015190035b620004dd84519361010085015190039160e0850192620004ac8b8060801b03918c8060801b03865116906200077a565b610140870180519190921660808d901b8d90039182160181169091526101208601519351909390841691036200077a565b16910190868060801b0390878060801b038351160116905293620003c6565b939493126200052e5750509381610160600196606080604060c09701516040840151900394015191015190036200047c565b63f305839960e01b8152919591602081600481855afa15620005985760006004816020935160408b015190036040880151900394634614131960e01b82525afa15620005935761016060c093606060019881600051910151900391015190036200047c565b600080fd5b80fd5b3d6000803e3d6000fd5b634e487b7160e01b600052603260045260246000fd5b60405190620005ca82620006af565b600080835260208301526040519161018083016001600160401b038111848210176200069957602093600091604052818152818582015281604082015281606082015281608081818401528160a091818386015260c09482868201528260e08201528261010082015282610120820152826101408201528261016082015260408801526040516200065b81620006af565b828152828a8201528260408201528260608201528282820152828482015282868201526060880152860152840152820152828289010152016200007a565b634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b038211176200069957604052565b601f909101601f19168101906001600160401b038211908210176200069957604052565b6001600160401b038111620006995760051b60200190565b604051919291610100908181016001600160401b0381118282101762000699576040526024600080948184528160208501528160408501528160608501528160808501528160a08501528160c08501528160e0850152839763f30dba9360e01b835260020b6004525afa15620005985750565b6000828202926000198184099284841085018085039414620007c657600160801b9284841115620007b95750096080918382119003821b9203901c1790565b63ae47f70290526004601cfd5b5050505060801c90565b60206004818093601260005263313ce56760e01b82525afa60051b519056fe";

type EphemeralGetPositionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralGetPositionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralGetPositions__factory extends ContractFactory {
  constructor(...args: EphemeralGetPositionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    startTokenId: BigNumberish,
    endTokenId: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<EphemeralGetPositions> {
    return super.deploy(
      npm,
      startTokenId,
      endTokenId,
      overrides || {}
    ) as Promise<EphemeralGetPositions>;
  }
  override getDeployTransaction(
    npm: string,
    startTokenId: BigNumberish,
    endTokenId: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      npm,
      startTokenId,
      endTokenId,
      overrides || {}
    );
  }
  override attach(address: string): EphemeralGetPositions {
    return super.attach(address) as EphemeralGetPositions;
  }
  override connect(signer: Signer): EphemeralGetPositions__factory {
    return super.connect(signer) as EphemeralGetPositions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralGetPositionsInterface {
    return new utils.Interface(_abi) as EphemeralGetPositionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralGetPositions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralGetPositions;
  }
}
