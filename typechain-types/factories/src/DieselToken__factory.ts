/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DieselToken, DieselTokenInterface } from "../../src/DieselToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PoolServiceOnlyException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lendingPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000ef138038062000ef183398101604081905262000034916200012d565b8282600362000044838262000241565b50600462000053828262000241565b50505060ff1660805250503360a0526200030d565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009057600080fd5b81516001600160401b0380821115620000ad57620000ad62000068565b604051601f8301601f19908116603f01168101908282118183101715620000d857620000d862000068565b81604052838152602092508683858801011115620000f557600080fd5b600091505b83821015620001195785820183015181830184015290820190620000fa565b600093810190920192909252949350505050565b6000806000606084860312156200014357600080fd5b83516001600160401b03808211156200015b57600080fd5b62000169878388016200007e565b945060208601519150808211156200018057600080fd5b506200018f868287016200007e565b925050604084015160ff81168114620001a757600080fd5b809150509250925092565b600181811c90821680620001c757607f821691505b602082108103620001e857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023c57600081815260208120601f850160051c81016020861015620002175750805b601f850160051c820191505b81811015620002385782815560010162000223565b5050505b505050565b81516001600160401b038111156200025d576200025d62000068565b62000275816200026e8454620001b2565b84620001ee565b602080601f831160018114620002ad5760008415620002945750858301515b600019600386901b1c1916600185901b17855562000238565b600085815260208120601f198616915b82811015620002de57888601518255948401946001909101908401620002bd565b5085821015620002fd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051610bb0620003416000396000818161020a0152818161036701526103cd0152600061015c0152610bb06000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101f2578063a59a997314610205578063a9059cbb14610244578063dd62ed3e1461025757600080fd5b806370a08231146101ae57806395d89b41146101d75780639dc29fac146101df57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461018657806340c10f191461019957600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761026a565b60405161010491906109fa565b60405180910390f35b61012061011b366004610a64565b6102fc565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610a8e565b610316565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610104565b610120610194366004610a64565b61033a565b6101ac6101a7366004610a64565b61035c565b005b6101346101bc366004610aca565b6001600160a01b031660009081526020819052604090205490565b6100f76103b3565b6101ac6101ed366004610a64565b6103c2565b610120610200366004610a64565b610415565b61022c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610104565b610120610252366004610a64565b610495565b610134610265366004610aec565b6104a3565b60606003805461027990610b1f565b80601f01602080910402602001604051908101604052809291908181526020018280546102a590610b1f565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b5050505050905090565b60003361030a8185856104ce565b60019150505b92915050565b6000336103248582856105f3565b61032f85858561066d565b506001949350505050565b60003361030a81858561034d83836104a3565b6103579190610b59565b6104ce565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103a5576040516395c3dbc560e01b815260040160405180910390fd5b6103af8282610811565b5050565b60606004805461027990610b1f565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461040b576040516395c3dbc560e01b815260040160405180910390fd5b6103af82826108d0565b6000338161042382866104a3565b9050838110156104885760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61032f82868684036104ce565b60003361030a81858561066d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105305760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161047f565b6001600160a01b0382166105915760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161047f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105ff84846104a3565b90506000198114610667578181101561065a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161047f565b61066784848484036104ce565b50505050565b6001600160a01b0383166106d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161047f565b6001600160a01b0382166107335760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161047f565b6001600160a01b038316600090815260208190526040902054818110156107ab5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161047f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610667565b6001600160a01b0382166108675760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161047f565b80600260008282546108799190610b59565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166109305760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161047f565b6001600160a01b038216600090815260208190526040902054818110156109a45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161047f565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105e6565b600060208083528351808285015260005b81811015610a2757858101830151858201604001528201610a0b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a5f57600080fd5b919050565b60008060408385031215610a7757600080fd5b610a8083610a48565b946020939093013593505050565b600080600060608486031215610aa357600080fd5b610aac84610a48565b9250610aba60208501610a48565b9150604084013590509250925092565b600060208284031215610adc57600080fd5b610ae582610a48565b9392505050565b60008060408385031215610aff57600080fd5b610b0883610a48565b9150610b1660208401610a48565b90509250929050565b600181811c90821680610b3357607f821691505b602082108103610b5357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561031057634e487b7160e01b600052601160045260246000fdfea2646970667358221220a486d774799dd989f04005bdf553a2db0e964a67e6455ce1f4015c64f638326064736f6c63430008120033";

type DieselTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DieselTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DieselToken__factory extends ContractFactory {
  constructor(...args: DieselTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<DieselToken> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<DieselToken>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override attach(address: string): DieselToken {
    return super.attach(address) as DieselToken;
  }
  override connect(signer: Signer): DieselToken__factory {
    return super.connect(signer) as DieselToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DieselTokenInterface {
    return new utils.Interface(_abi) as DieselTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DieselToken {
    return new Contract(address, _abi, signerOrProvider) as DieselToken;
  }
}
