/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OptimalSwapRouter,
  OptimalSwapRouterInterface,
} from "../../src/OptimalSwapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Invalid_Tick_Range",
    type: "error",
  },
  {
    inputs: [],
    name: "MismatchETH",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWETH9",
    type: "error",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "npm",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e060409080825280620021f080380380916200001d828562000155565b83396020928391810103126200015057516001600160a01b039190828116908181036200015057608052835163c45a015560e01b81528281600481855afa9182156200014557600492849260009162000123575b5060a05285516312a9293f60e21b815292839182905afa9182156200011857600092620000e4575b50501660c0525161203f9081620001b1823960805181610634015260a05181818161018a015281816104d101526105c1015260c0518181816103bd015281816106a201526107830152f35b620001089250803d1062000110575b620000ff818362000155565b8101906200018f565b388062000099565b503d620000f3565b84513d6000823e3d90fd5b6200013e9150833d85116200011057620000ff818362000155565b3862000071565b85513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200017957604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126200015057516001600160a01b038116810362000150579056fe60a060408181526004918236101561040b575b5036156103a657346103a157601435606090811c9260008035831c92367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa6019260313560f81c9273ffffffffffffffffffffffffffffffffffffffff9188871885028918603235851c61009261008a3387851661085b565b3033856106c6565b806014527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6034526f095ea7b30000000000000000000000009081855260209889866044601082885af13d15600188511417161561039557858091816034528d5181605a8237826046358c1c5af11561038c576010858a9481946044946014528260345282525af13d1560018451141716156103815781603452610136308861085b565b93610141308b61085b565b9689519682880188811067ffffffffffffffff821117610355578b528988528b8289015260283560e81c8b8901528a519574ff00000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000017865283892083527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b548c526055600b2016958b5260001461033f57610208866101f2338e61085b565b8a01905b602e3560e81d602b3560e81d89610898565b50809c9297915086998861025a575b50505050505050039485831802809218019318019180610248575b50508061023b57005b61024691339061071f565b005b61025391339061071f565b3880610232565b839495969a50908760c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0829594019c8d998a519a528651937f128acb0800000000000000000000000000000000000000000000000000000000855230828601528060248601528c604486015273fffd8963efd1fc6a506488495d951d53639afb810273fffd8963efd1fc6a506488495d951d5263988d2518606485015260a060848501528d8051918a8301809260a48801925afa5001925af1903d141615610336578883518092511802188203945238808080808b81610217565b823d81803e3d90fd5b61020861034c338b61085b565b870189906101f6565b6024866041877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b633e3f8f738252601cfd5b843d81803e3d90fd5b84633e3f8f738752601cfd5b600080fd5b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036103e557005b517f2f1ca35a000000000000000000000000000000000000000000000000000000008152fd5b600090813560e01c9081634aa4a4fc14610658575080637f1e9ef6146105e9578063c45a0155146105765763fa461e3303610012579190346105725760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105725781359060443567ffffffffffffffff9384821161056e573660238301121561056e5781013593841161056a576024810193602436918301011161056a57815160608587376060862074ff00000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000001787526020527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54835273ffffffffffffffffffffffffffffffffffffffff6055600b2016925281330361056a5784831315610555575061055292309035610768565b80f35b61055293506024359250309060440135610768565b8480fd5b8580fd5b8280fd5b5090346105e557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105e5576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b5090346105e557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105e5576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b9050346105e557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105e55760209073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615610711576000606052604052565b637939f4246000526004601cfd5b60109260209260145260345260446000938480936fa9059cbb00000000000000000000000082525af13d15600183511417161561075b57603452565b6390b8ec1890526004601cfd5b92919073ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016808287161480610852575b6107d1575b50811630036107c857506107c69261071f565b565b6107c6936106c6565b348503610828578460049160009283809381937fd0e30db00000000000000000000000000000000000000000000000000000000083525af1156108255750308184161461081e57386107b3565b5050505050565b80fd5b60046040517fa11a990f000000000000000000000000000000000000000000000000000000008152fd5b503415156107ae565b9060209060246000809481937f70a082310000000000000000000000000000000000000000000000000000000083526004525afa15610825575190565b909192949394600095811580611576575b611561578460020b8460020b9080821291821592611537575b50811561152a575b5061150057823b156114f257604051610120810181811067ffffffffffffffff8211176114c3576040526000815260006020820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e082015260006101008201527f3850c7bd0000000000000000000000000000000000000000000000000000000060005260406000600481875afa156103a1576000519560205195879660408401527f1a6865020000000000000000000000000000000000000000000000000000000060005260206000600481895afa156103a157600051907fddca3f4300000000000000000000000000000000000000000000000000000000600052602060006004818a5afa156103a15762ffffff60005116907fd0c93a7c00000000000000000000000000000000000000000000000000000000600052602060006004818b5afa156103a157610a4f92610a49926000519187528b602088015288606088015287608088015260e08701526101008601526118a1565b916118a1565b948160a08401528560c0840152610aab73ffffffffffffffffffffffffffffffffffffffff871673ffffffffffffffffffffffffffffffffffffffff841673ffffffffffffffffffffffffffffffffffffffff8b168789611fe6565b97507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000906000905b604085015160020b61010086015160020b928b6000146113a9576000848307128483050360081d9460010b8560010b14600014611399575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60018060ff84958860008183071291050316011b01165b801561135c577e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd00000000000000000000000000000000000000000000000000000000826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1792831c8060011c178060021c178060041c178060081c178060101c170260fb1c1a17905b938b8194610bf681858560081b01026118a1565b93826112fd5773ffffffffffffffffffffffffffffffffffffffff938a610c43866020830151166fffffffffffffffffffffffffffffffff8351166080840151908a60e086015193611e93565b96919790979660608401510197608084015103985b1673ffffffffffffffffffffffffffffffffffffffff8716036112ed57610ca59060c060a08401519115159301519073ffffffffffffffffffffffffffffffffffffffff88168a8a611fe6565b151514611279575050505050505050505b6000608052815192602083015191826080526060840151966080850151938a15600014610fd057505073ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff6080511610610eef575b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff608051161015610d61575b505050610d5b906080518561174c565b91030192565b919550919750845191602086015160a08701519060c08801519160e0890151828760601b0460608b015101610d968382611853565b908b610dc46080610dba610db487620f4240038a620f424002611fad565b8d611853565b920151958b611853565b918583838201031115610ee157610d5b9a610ed5988f95610dee60c0610eaa980151868b01611d5f565b9088620f424003848a020490030396620f424003029060601b620f42400204900360011b94010360011b8302828002018070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760019060b56201000084831c0191831c1b0260121c80830401811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c8080920410900390565b0160601b0581811190821802189660e0610ec78c6080518b6117f5565b910151620f42400390611c9f565b91030196903880610d4b565b63202368086000526004601cfd5b999650610f11610f0860e0850151620f42400384611c04565b8560805161166b565b9673ffffffffffffffffffffffffffffffffffffffff8b1673ffffffffffffffffffffffffffffffffffffffff891610600014610f68575073ffffffffffffffffffffffffffffffffffffffff819a5b9050610d15565b99959173ffffffffffffffffffffffffffffffffffffffff90610fa1610f91878a6080516117f5565b60e0870151620f42400390611c9f565b900392610fb1868960805161174c565b0196806080528181166020860152876060860152836080860152610f61565b90915073ffffffffffffffffffffffffffffffffffffffff80839994989599169116116111be575b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff60805116111561103e575b505050610d5b90608051856117ad565b919550919750845194602081015160a08201519660c08301519060e084015198620f4240998a81810392606088015192838660601b9388850490858b89029102048201031115610ee15788858f97899882868d978883028a8502048b01906110a591611853565b956110b08986611853565b9060800151019202906110c291611fad565b6110cc9083611853565b81039a6110d891611d5f565b93020401039482049302908c0204010360011b9160011b820281800201611185908070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760019060b56201000084831c0191831c1b0260121c80830401811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c8080920410900390565b0160601b0481811090821802189589608051906111a291896116dc565b9160e0015190036111b291611c9f565b9103019538808061102e565b9996506111e06111d760e0850151620f42400383611c04565b856080516115ba565b9673ffffffffffffffffffffffffffffffffffffffff8b811690891610611221575073ffffffffffffffffffffffffffffffffffffffff829a5b9050610ff8565b99959073ffffffffffffffffffffffffffffffffffffffff9061124a610f91876080518b6116dc565b90039161125a866080518a6117ad565b019680608052818116602086015282606086015287608086015261121a565b7ff30dba930000000000000000000000000000000000000000000000000000000060005282828260081b010260020b600452604060006024818a5afa156103a1578f93602051856000031885018c51018c5260208c015260081b010203604088015260608701526080860152919091610ad3565b5050505050505050505050610cb6565b73ffffffffffffffffffffffffffffffffffffffff92938a611345856020830151166fffffffffffffffffffffffffffffffff8351166060840151908a60e086015193611e93565b979196906060840151039760808401510198610c58565b505090917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160010b906113908282611f6d565b91929180610b43565b506113a48483611f6d565b610b0b565b6001600085840712858405030160020b60081d9460010b8560010b146000146114b3575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001808394876000818307129105030160ff161b0119165b80156114955780600003167e011c021d0e18031e16140f191104081f1b0d17151310071a0c12060b050a097f077cb53100000000000000000000000000000000000000000000000000000000826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1792831c0260fb1c1a1790610be2565b5050909160010160010b906114aa8282611f6d565b91929180611406565b506114be8483611f6d565b6113cd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6301ac05a56000526004601cfd5b60046040517f30673a1b000000000000000000000000000000000000000000000000000000008152fd5b620d89e8915013386108ca565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618139150386108c2565b50505050509050600090600090600090600090565b5080156108a9565b9190820180921161158b57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908115611666577bffffffffffffffffffffffffffffffff0000000000000000000000009060601b169073ffffffffffffffffffffffffffffffffffffffff809316908181028282820414611623575b5061161791830461157e565b80820615159104011690565b83019183831015611634579161160b565b9050611641828285611e00565b920961164b571690565b6001018015611658571690565b63ae47f7026000526004601cfd5b505090565b6116ae92909173ffffffffffffffffffffffffffffffffffffffff91908282116116b9576fffffffffffffffffffffffffffffffff169060601b04915b1661157e565b8060a01c6103a15790565b906fffffffffffffffffffffffffffffffff6116d6921690611d5f565b916116a8565b918282108284180280808518931893146103a1577bffffffffffffffffffffffffffffffff00000000000000000000000060019160601b169273ffffffffffffffffffffffffffffffffffffffff61173d8183169185168203918287611e00565b94098284061715151691040190565b9182821082841802908180851894146103a1577bffffffffffffffffffffffffffffffff0000000000000000000000006117a99373ffffffffffffffffffffffffffffffffffffffff938491181692851683039160601b16611e00565b0490565b6117f292916fffffffffffffffffffffffffffffffff9180821082821802809173ffffffffffffffffffffffffffffffffffffffff9283911816921816039116611853565b90565b6001916c010000000000000000000000009180821082821802809173ffffffffffffffffffffffffffffffffffffffff92839118169218160361184a816fffffffffffffffffffffffffffffffff8616611853565b93091515160190565b818102917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff910981811082019003806c0100000000000000000000000011156116585760a01b9060601c1790565b60020b6000811260000381810118620d89e88111611bec5763ffffffff9160807001ffffffffffffffffffffffffffffffff7ffffcb933bd6fad37aa2d162d1a59400100000000000000000000000000000000828560071b161c169260028116611bd1575b60048116611bb6575b60088116611b9b575b60108116611b80575b60208116611b65575b60408116611b4a575b818116611b2f575b6101008116611b14575b6102008116611af9575b6104008116611ade575b6108008116611ac3575b6110008116611aa8575b6120008116611a8d575b6140008116611a72575b6180008116611a57575b620100008116611a3c575b620200008116611a22575b620400008116611a08575b62080000166119ed575b506000126119c6575b0160201c90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff046119bf565b6b048a170391f7dc42444e8fa26000929302901c91906119b6565b6d2216e584f5fa1ea926041bedfe98909302811c926119ac565b926e5d6af8dedb81196699c329225ee60402811c926119a1565b926f09aa508b5b7a84e1c677de54f3e99bc902811c92611996565b926f31be135f97d08fd981231505542fcfa602811c9261198b565b926f70d869a156d2a1b890bb3df62baf32f702811c92611981565b926fa9f746462d870fdf8a65dc1f90e061e502811c92611977565b926fd097f3bdfd2022b8845ad8f792aa582502811c9261196d565b926fe7159475a2c29b7443b29c7fa6e889d902811c92611963565b926ff3392b0822b70005940c7a398e4b70f302811c92611959565b926ff987a7253ac413176f2b074cf7815e5402811c9261194f565b926ffcbe86c7900a88aedcffc83b479aa3a402811c92611945565b926ffe5dee046a99a2a811c461f1969c305302811c9261193b565b926fff2ea16466c96a3843ec78b326b5286102811c92611933565b926fff973b41fa98c081472e6896dfb254c002811c9261192a565b926fffcb9843d60f6159c9db58835c92664402811c92611921565b926fffe5caca7e10e4e61c3624eaa0941cd002811c92611918565b926ffff2e50f5f656932ef12357cf3c7fdcc02811c9261190f565b926ffff97272373d413259a46990580e213a02811c92611906565b6308c379a0600052602080526101546041526045601cfd5b60009291808202917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8282099183831084018084039314611c9157620f42409183831115611c84577fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c26139959650099182810360061c9211900360fa1b170290565b63ae47f70287526004601cfd5b505050620f42409192500490565b600090620f424090818102917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183099183831084018084039314611d435782861115611d3657908591099160018585038616809604600280826003021880830282030280830282030280830282030280830282030280830282030280920290030295808086850304960304019211900302170290565b63ae47f70285526004601cfd5b505050908215611d5257500490565b63ae47f70290526004601cfd5b6000908060601b906c010000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183099183831084018084039314611d435782861115611d3657908591099160018585038616809604600280826003021880830282030280830282030280830282030280830282030280830282030280920290030295808086850304960304019211900302170290565b90600091818102917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183099183831084018084039314611d435782861115611d3657908591099160018585038616809604600280826003021880830282030280830282030280830282030280830282030280830282030280920290030295808086850304960304019211900302170290565b919094929373ffffffffffffffffffffffffffffffffffffffff808716908416101594620f424091820396611ec88883611c04565b8715611f5c57611ed98587846116dc565b925b838210611f24575050968792611ef18284611c9f565b9209611f12575b945b15611f0957916117f2926117ad565b6117f29261174c565b60019150018015611658578590611ef8565b9798509250505082158215176103a1578515611f4c57611f459082846115ba565b8095611efa565b611f5790828461166b565b611f45565b611f678583886117f5565b92611edb565b9060209060246000809481937f5339c29600000000000000000000000000000000000000000000000000000000835260010b6004525afa15610825575190565b8115611fb7570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b919391838511611ffa575050505050600090565b82851061200b575050505050600190565b61202e9361201c8661202593611853565b90860390611853565b93820390611e00565b109056fea164736f6c6343000814000a";

type OptimalSwapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimalSwapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimalSwapRouter__factory extends ContractFactory {
  constructor(...args: OptimalSwapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<OptimalSwapRouter> {
    return super.deploy(npm, overrides || {}) as Promise<OptimalSwapRouter>;
  }
  override getDeployTransaction(
    npm: string,
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, overrides || {});
  }
  override attach(address: string): OptimalSwapRouter {
    return super.attach(address) as OptimalSwapRouter;
  }
  override connect(signer: Signer): OptimalSwapRouter__factory {
    return super.connect(signer) as OptimalSwapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimalSwapRouterInterface {
    return new utils.Interface(_abi) as OptimalSwapRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimalSwapRouter {
    return new Contract(address, _abi, signerOrProvider) as OptimalSwapRouter;
  }
}
